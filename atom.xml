<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wang&#39;T博客</title>
  
  <subtitle>_入网络深似海,从此节操是路人.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.idcsec.com/"/>
  <updated>2019-01-10T08:57:05.407Z</updated>
  <id>http://www.idcsec.com/</id>
  
  <author>
    <name>Wang&#39;T</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EFK+Filebeat收集日志到kafka和logstash转发</title>
    <link href="http://www.idcsec.com/2019/01/09/EFK+Filebeat%E6%94%B6%E9%9B%86%E6%97%A5%E5%BF%97/"/>
    <id>http://www.idcsec.com/2019/01/09/EFK+Filebeat收集日志/</id>
    <published>2019-01-09T08:26:00.000Z</published>
    <updated>2019-01-10T08:57:05.407Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u4E00_u3001filebeat"><a href="#u4E00_u3001filebeat" class="headerlink" title="一、filebeat"></a>一、filebeat</h1><p>k8s日志收集方案使用官方推荐的EFK方案F（fluentd），部分宿主机日志使用filebeat<br>filebeat是一个日志文件托运工具，在你的服务器上安装客户端后，filebeat会监控日志目录或者指定的日志文件，追踪读取这些文件（追踪文件的变化，不停的读），并且转发这些信息到elasticsearch或者logstarsh、kafka、redis中存放。Filebeat 所占系统的 CPU 和内存几乎可以忽略不计，filebeat使用Go语言开发运行不依赖环境。<br><img src="https://i.loli.net/2019/01/10/5c36b7e69f537.png" alt="filebeat.png"></p><p>EFK 环境应该部署好,这里主要记录filrbeat-kafka-logstash-es-kibana</p><h1 id="u4E0B_u8F7D_u5B89_u88C5filebeat"><a href="#u4E0B_u8F7D_u5B89_u88C5filebeat" class="headerlink" title="下载安装filebeat"></a>下载安装filebeat</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-<span class="number">6.5</span>.<span class="number">4</span>-x86_64.rpm</span><br><span class="line">rpm -ivh filebeat-<span class="number">1.3</span>.<span class="number">1</span>-x86_64.rpm</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="filebeat_u914D_u7F6E_u6587_u4EF6"><a href="#filebeat_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h1><p>cat filebeat.yml<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############################# Filebeat inputs #########################################</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- input_<span class="built_in">type</span>: <span class="built_in">log</span>  </span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /opt/tomcat7credit/clsp/Application.*         <span class="comment">#日志文件路径可以使用正则表匹配</span></span><br><span class="line">  encoding: GB2312                            <span class="comment">#编码解决tomcat使用非utf-8乱码问题</span></span><br><span class="line">  tags: [<span class="string">"tomcatlogs"</span>]</span><br><span class="line">  multiline.pattern: ^\d&#123;<span class="number">4</span>&#125;                      <span class="comment">#多行合并解决tomcat错误堆栈日志</span></span><br><span class="line">  multiline.negate: <span class="literal">true</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: <span class="number">800</span></span><br><span class="line">  multiline.timeout: <span class="number">1</span></span><br><span class="line">  document_<span class="built_in">type</span>: xxxapplication                     <span class="comment">#新版本已经取消资格type</span></span><br><span class="line"><span class="comment"># 如果设置为trueFilebeat从文件尾开始监控文件新增内容把新增的每一行文件作为一个事件依次发送而不是从文件开始处重新发送所有内容。</span></span><br><span class="line">  tail_files: <span class="literal">true</span></span><br><span class="line">  backoff: <span class="number">1</span>s</span><br><span class="line">  fields:                              <span class="comment">#添加一个标签fields.appname</span></span><br><span class="line">    appname: xxxapplication</span><br><span class="line">- input_<span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    -  /opt/tomcat7thirdtask/thirdtask/apilog.log     </span><br><span class="line">  encoding: GB2312</span><br><span class="line">  multiline.pattern: ^\d&#123;<span class="number">4</span>&#125;</span><br><span class="line">  multiline.negate: <span class="literal">true</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: <span class="number">800</span></span><br><span class="line">  multiline.timeout: <span class="number">1</span></span><br><span class="line">  document_<span class="built_in">type</span>: thirdtaskapilog</span><br><span class="line"><span class="comment"># 如果设置为trueFilebeat从文件尾开始监控文件新增内容把新增的每一行文件作为一个事件依次发送而不是从文件开始处重新发送所有内容。</span></span><br><span class="line">  tail_files: <span class="literal">true</span></span><br><span class="line">  backoff: <span class="number">1</span>s</span><br><span class="line">  fields:</span><br><span class="line">    appname: thirdtaskapilog</span><br><span class="line"><span class="comment">############################# output kafka #########################################</span></span><br><span class="line">output.kafka:</span><br><span class="line">  <span class="comment"># initial brokers for reading cluster metadata</span></span><br><span class="line">   hosts: [<span class="string">"192.168.200.102:9092"</span>,<span class="string">"192.168.200.102:9093"</span>,<span class="string">"192.168.200.102:9094"</span>]</span><br><span class="line">   enabled: <span class="literal">true</span></span><br><span class="line">   <span class="comment"># message topic selection + partitioning</span></span><br><span class="line">   topic: <span class="string">'Applicationlogs'</span></span><br><span class="line">   partition.round_robin:</span><br><span class="line">     reachable_only: <span class="literal">false</span></span><br><span class="line">   required_acks: <span class="number">1</span></span><br><span class="line">   compression: gzip</span><br><span class="line">   max_message_bytes: <span class="number">1000000</span></span><br></pre></td></tr></table></figure></p><p>之前版本使用filebeat.prospectors:</p><h1 id="u914D_u7F6Elogstash_u6D88_u8D39kafka_u7684topic_uFF1AApplicationlogs_u4FE1_u606F"><a href="#u914D_u7F6Elogstash_u6D88_u8D39kafka_u7684topic_uFF1AApplicationlogs_u4FE1_u606F" class="headerlink" title="配置logstash消费kafka的topic：Applicationlogs信息"></a>配置logstash消费kafka的topic：Applicationlogs信息</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  kafka&#123;</span><br><span class="line">        bootstrap_servers =&gt; [<span class="string">"XXXX:9092,XXXX:9093,XXXX:9094"</span>]</span><br><span class="line">        client_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        group_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        auto_offset_reset =&gt; <span class="string">"latest"</span> </span><br><span class="line">        consumer_threads =&gt; <span class="number">1</span></span><br><span class="line">        decorate_events =&gt; <span class="literal">false</span></span><br><span class="line">        topics =&gt; [<span class="string">"k8s-logs"</span>]</span><br><span class="line">truecodec =&gt;[<span class="string">"json"</span>]&#125;</span><br><span class="line">  kafka&#123;</span><br><span class="line">        bootstrap_servers =&gt; [<span class="string">"XXXX:9092,XXXX:9093,XXX:9094"</span>]</span><br><span class="line">        client_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        group_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        consumer_threads =&gt; <span class="number">1</span></span><br><span class="line">        decorate_events =&gt; <span class="literal">false</span></span><br><span class="line">        topics =&gt; [<span class="string">"Applicationlogs"</span>]&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">"Application"</span>&#123;</span><br><span class="line">       date &#123; </span><br><span class="line">truematch =&gt; [ <span class="string">"timestamp"</span>,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>]</span><br><span class="line">        target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">        remove_field =&gt; [<span class="string">"timestamp"</span>]</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">output&#123; </span><br><span class="line"><span class="keyword">if</span> [topics] == [<span class="string">"Applicationlogs"</span>]&#123;</span><br><span class="line">      elasticsearch &#123;</span><br><span class="line">         hosts =&gt; [<span class="string">"XXXX:9200"</span>]</span><br><span class="line">         index =&gt; <span class="string">"nfs-%&#123;[fields][appname]&#125;%&#123;+YYYY-MM-dd&#125;"</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;  </span><br><span class="line"><span class="keyword">if</span> [topics] == [<span class="string">"k8s-logs"</span>]&#123;</span><br><span class="line">  elasticsearch&#123;  </span><br><span class="line">    hosts =&gt; [<span class="string">"XXXX:9200"</span>,<span class="string">"XXXX:9200"</span>]  </span><br><span class="line">    index =&gt; <span class="string">"%&#123;[kubernetes][container_name]&#125;-%&#123;+YYYY-MM&#125;"</span>      </span><br><span class="line">    action =&gt; <span class="string">"index"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果kibana创建index完成。</p><h1 id="u83B7_u53D6_u65E5_u5FD7_u65F6_u95F4_u5B57_u6BB5_u66FF_u6362es_u91CC_u9762_u7684@timestamp_u5B57_u6BB5"><a href="#u83B7_u53D6_u65E5_u5FD7_u65F6_u95F4_u5B57_u6BB5_u66FF_u6362es_u91CC_u9762_u7684@timestamp_u5B57_u6BB5" class="headerlink" title="获取日志时间字段替换es里面的@timestamp字段"></a>获取日志时间字段替换es里面的@timestamp字段</h1><p>例如日志格式<br><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019<span class="tag">-01-09</span> 17<span class="pseudo">:23</span><span class="pseudo">:27</span> <span class="attr_selector">[ http-bio-8080-exec-151:67436064 ]</span> <span class="tag">-</span> <span class="attr_selector">[ INFO ]</span> <span class="tag">com</span><span class="class">.crfchina</span><span class="class">.p2p</span><span class="class">.finance</span><span class="class">.service</span><span class="class">.dao</span><span class="class">.hibernate</span><span class="class">.P2pAccountInfoDaoImpl</span><span class="class">.queryReserver</span>(<span class="tag">P2pAccountInfoDaoImpl</span><span class="class">.java</span><span class="pseudo">:2613)</span> 查询状态为1的结果!</span><br></pre></td></tr></table></figure></p><p>通过<a href="http://grokdebug.herokuapp.com/" target="_blank" rel="external">http://grokdebug.herokuapp.com/</a> 测试解析字段<br><figure class="hljs highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;TIMESTAMP_ISO8601:time&#125;\s\[\s<span class="keyword">*</span>%&#123;JAVAFILE:class&#125;:%&#123;NUMBER:lineNumber&#125;\s<span class="keyword">*</span>\]\s<span class="keyword">*</span>-\s<span class="keyword">*</span>\[\s<span class="keyword">*</span>%&#123;LOGLEVEL:level&#125;\s<span class="keyword">*</span>\]\s(?<span class="variable">&lt;msg&gt;</span>([\s\S]<span class="keyword">*</span>))</span><br></pre></td></tr></table></figure></p><p>配置logstash通过filter-grok解析字段<br>安装插件<br><figure class="hljs highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/logstash/bin/logstash-plugin  install logstash-<span class="built_in">filter</span>-grok  logstash-<span class="built_in">filter</span>-<span class="built_in">date</span></span><br></pre></td></tr></table></figure></p><p>添加filter配置从字段里分析日期格式，然后放入@timestamp字段里。<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### FILTERS</span></span><br><span class="line">filter &#123;</span><br><span class="line">  <span class="keyword">if</span> [fields][appname] == <span class="string">"xxxapplication"</span>&#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">      <span class="comment">#获取xxxapplication 日志字段</span></span><br><span class="line">      match =&gt; &#123;</span><br><span class="line">        <span class="string">"message"</span> =&gt; [</span><br><span class="line">          <span class="comment">#xxxapplication格式</span></span><br><span class="line">            <span class="string">'%&#123;TIMESTAMP_ISO8601:time&#125;\s\[\s*%&#123;JAVAFILE:class&#125;:%&#123;NUMBER:lineNumber&#125;\s*\]\s*-\s*\[\s*%&#123;LOGLEVEL:level&#125;\s*\]\s(?&lt;msg&gt;([\s\S]*))'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">true&#125;</span><br><span class="line">    date &#123; </span><br><span class="line">truematch =&gt; [ <span class="string">"time"</span>,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>]</span><br><span class="line">        target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">true&#125;</span><br><span class="line">true     <span class="comment">#移除原有数据</span></span><br><span class="line">      <span class="comment">#remove_field =&gt; ["timestamp"]</span></span><br><span class="line">      <span class="comment">#remove_field =&gt; [ "message" ]</span></span><br><span class="line">   mutate &#123;</span><br><span class="line">       remove_field =&gt;[<span class="string">"message"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>tomcatcatalina日志<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">01</span>-<span class="number">10</span> <span class="number">04</span>:<span class="number">51</span>:<span class="number">59.589</span> <span class="keyword">default</span> [scheduler_Worker-<span class="number">1</span>] INFO  com.zhph.third.utils.BatchCheck - 第<span class="number">0</span>次请求跑批记录控制请求参数：&#123;<span class="string">"startTime"</span>:<span class="string">"2019-01-10 04:00:22"</span>,<span class="string">"runResult"</span>:<span class="string">"0"</span>,<span class="string">"batchName"</span>:<span class="string">"magicReportDaily"</span>,<span class="string">"sysName"</span>:<span class="string">"thirdtask"</span>,<span class="string">"comment"</span>:<span class="string">"成功执行跑批"</span>,<span class="string">"endTime"</span>:<span class="string">"2019-01-10 04:51:59"</span>&#125;</span><br></pre></td></tr></table></figure></p><p>grok<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;<span class="tag">TIMESTAMP_ISO8601</span><span class="pseudo">:time</span>&#125;\<span class="tag">s</span>(?&lt;default&gt;[a-z]&#123;<span class="tag">7</span>&#125;)\<span class="tag">s</span>\<span class="attr_selector">[%&#123;JAVAFILE:class&#125;\]</span>\<span class="tag">s%</span>&#123;<span class="tag">LOGLEVEL</span><span class="pseudo">:level</span>&#125;\<span class="tag">s</span>\<span class="tag">s%</span>&#123;<span class="attribute">GREEDYDATA</span>:message&#125;</span><br></pre></td></tr></table></figure></p><p>tomcatcatalina日志<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span>-<span class="number">10</span>-<span class="number">22</span> <span class="number">20</span>:<span class="number">59</span>:<span class="number">22</span>,<span class="number">877</span> INFO com.zjzc.interceptor.ClientAuthInterceptor - authInfo servletPath=/validate/code/send,clientSn=null,access=<span class="literal">true</span><span class="string">",</span></span><br></pre></td></tr></table></figure></p><p>grok<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;TIMESTAMP_ISO8601:time&#125;\s+(?&lt;Level&gt;(\S+))%&#123;GREEDYDATA:message&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u4E00_u3001filebeat&quot;&gt;&lt;a href=&quot;#u4E00_u3001filebeat&quot; class=&quot;headerlink&quot; title=&quot;一、filebeat&quot;&gt;&lt;/a&gt;一、filebeat&lt;/h1&gt;&lt;p&gt;k8s日志收集方案使用官方推荐的EFK方案F（fluentd），部分宿主机日志使用filebeat&lt;br&gt;filebeat是一个日志文件托运工具，在你的服务器上安装客户端后，filebeat会监控日志目录或者指定的日志文件，追踪读取这些文件（追踪文件的变化，不停的读），并且转发这些信息到elasticsearch或者logstarsh、kafka、redis中存放。Filebeat 所占系统的 CPU 和内存几乎可以忽略不计，filebeat使用Go语言开发运行不依赖环境。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/01/10/5c36b7e69f537.png&quot; alt=&quot;filebeat.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;EFK 环境应该部署好,这里主要记录filrbeat-kafka-logstash-es-kibana&lt;/p&gt;
&lt;h1 id=&quot;u4E0B_u8F7D_u5B89_u88C5filebeat&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D_u5B89_u88C5filebeat&quot; class=&quot;headerlink&quot; title=&quot;下载安装filebeat&quot;&gt;&lt;/a&gt;下载安装filebeat&lt;/h1&gt;&lt;figure class=&quot;hljs highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-&lt;span class=&quot;number&quot;&gt;6.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh filebeat-&lt;span class=&quot;number&quot;&gt;1.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="EFK" scheme="http://www.idcsec.com/categories/EFK/"/>
    
    
      <category term="filebeat" scheme="http://www.idcsec.com/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控网络设备展示Grafana</title>
    <link href="http://www.idcsec.com/2019/01/04/zabbix%E7%9B%91%E6%8E%A7%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2019/01/04/zabbix监控网络设备展示Grafana/</id>
    <published>2019-01-04T06:54:00.000Z</published>
    <updated>2019-01-10T08:57:42.343Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="http://docs.grafana.org/reference/templating/" target="_blank" rel="external">http://docs.grafana.org/reference/templating/</a><br>     <a href="http://docs.grafana.org/features/panels/singlestat/" target="_blank" rel="external">http://docs.grafana.org/features/panels/singlestat/</a></p><h1 id="New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8"><a href="#New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8" class="headerlink" title="New dashboard创建仪表盘"></a>New dashboard创建仪表盘</h1><p><img src="https://i.loli.net/2019/01/04/5c2f055466397.png" alt="zabbix"><br><a id="more"></a><br>设置变-settings-variables</p><h2 id="u83B7_u53D6zabbix_u7EC4"><a href="#u83B7_u53D6zabbix_u7EC4" class="headerlink" title="获取zabbix组"></a>获取zabbix组</h2><p><img src="https://i.loli.net/2019/01/04/5c2f0686c7e6a.png" alt="g2.png"></p><h2 id="u8FC7_u6EE4_u7EC4_u91CC_u9762_u7684_u4E3B_u673A"><a href="#u8FC7_u6EE4_u7EC4_u91CC_u9762_u7684_u4E3B_u673A" class="headerlink" title="过滤组里面的主机"></a>过滤组里面的主机</h2><p>$Group.*<br><img src="https://i.loli.net/2019/01/04/5c2f07276254b.png" alt="g3.png"></p><h2 id="u8FC7_u6EE4_u4E3B_u673A_u63A5_u53E3_u4F7F_u7528_u6B63_u5219_u83B7_u53D6GigabitEthernet_u63A5_u53E3"><a href="#u8FC7_u6EE4_u4E3B_u673A_u63A5_u53E3_u4F7F_u7528_u6B63_u5219_u83B7_u53D6GigabitEthernet_u63A5_u53E3" class="headerlink" title="过滤主机接口使用正则获取GigabitEthernet接口"></a>过滤主机接口使用正则获取GigabitEthernet接口</h2><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query:<span class="variable">$Group</span>.<span class="variable">$Hosts</span>.Interfaces.*</span><br><span class="line">Reagex:/(GigabitEthernet\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;|GigabitEthernet\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;|GigabitEthernet \d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;)/</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/01/04/5c2f09ed05e6e.png" alt="g4.png"></p><h1 id="u521B_u5EFA_Panel"><a href="#u521B_u5EFA_Panel" class="headerlink" title="创建   Panel"></a>创建   Panel</h1><p>1、点击 New Panel 下的 Singlestat 配置采集交换机名<br><img src="https://i.loli.net/2019/01/04/5c2f0b05c6bab.png" alt="获取设备名称.png"><br>2、Panel 下的 Singlestat 配置采集交换机在线时间<br><img src="https://i.loli.net/2019/01/04/5c2f0c42b0ac8.png" alt="获取设备运行时长1.png"><br><img src="https://i.loli.net/2019/01/04/5c2f0ed4c1edf.png" alt="获取设备运行时长2.png"><br>3、New Panel 下的 Singlestat 配置采集交换机 ping 值以确认交换机是否运行正常里选项页的阀值设置为0，1；配置将颜色选项卡的颜色倒置，也即0对应红色(WARNING)，1对应绿色(HEALTHY)。]<br><img src="https://i.loli.net/2019/01/04/5c2f0ef187364.png" alt="设备状1.png"><br><img src="https://i.loli.net/2019/01/04/5c2f0f7039315.png" alt="设备状2.png"><br>4、New Panel 下的 Graph 配置采集流量</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;http://docs.grafana.org/reference/templating/&quot;&gt;http://docs.grafana.org/reference/templating/&lt;/a&gt;&lt;br&gt;     &lt;a href=&quot;http://docs.grafana.org/features/panels/singlestat/&quot;&gt;http://docs.grafana.org/features/panels/singlestat/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8&quot;&gt;&lt;a href=&quot;#New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8&quot; class=&quot;headerlink&quot; title=&quot;New dashboard创建仪表盘&quot;&gt;&lt;/a&gt;New dashboard创建仪表盘&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/01/04/5c2f055466397.png&quot; alt=&quot;zabbix&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="zabbix Grafana" scheme="http://www.idcsec.com/tags/zabbix-Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus Node_Exporter监控主机性能展示Grafana</title>
    <link href="http://www.idcsec.com/2018/12/29/Prometheus-Node-Exporter%E7%9B%91%E6%8E%A7%E4%B8%BB%E6%9C%BA%E6%80%A7%E8%83%BD%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2018/12/29/Prometheus-Node-Exporter监控主机性能展示Grafana/</id>
    <published>2018-12-29T03:18:00.000Z</published>
    <updated>2019-01-10T08:58:27.045Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/12/29/5c26e87a05bad.png" alt="Consul"><br><a id="more"></a></p><h1 id="node_exporter_u5B89_u88C5"><a href="#node_exporter_u5B89_u88C5" class="headerlink" title="node_exporter安装"></a>node_exporter安装</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">useradd prometheus -s <span class="regexp">/sbin/</span>nologin</span><br><span class="line"><span class="string">https:</span><span class="comment">//github.com/prometheus/node_exporter/releases/download/v0.16.0/node_exporter-0.16.0.linux-amd64.tar.gz</span></span><br><span class="line">tar -zxvf node_exporter-<span class="number">0.16</span><span class="number">.0</span>.linux-amd64.tar.gz -C <span class="regexp">/home/</span>prometheus<span class="regexp">/ &amp;&amp; mv /</span>home<span class="regexp">/prometheus/</span>node_exporter-<span class="number">0.16</span><span class="number">.0</span>.linux-amd64 <span class="regexp">/home/</span>prometheus/node_exporter</span><br><span class="line"> vi <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>node_exporter.service</span><br><span class="line"> [Unit]</span><br><span class="line">Description=Node Exporter</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=prometheus</span><br><span class="line">ExecStart=<span class="regexp">/home/</span>prometheus/node_exporter</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=<span class="keyword">default</span>.target</span><br></pre></td></tr></table></figure><p>重启服务<br><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">systemctl</span> <span class="tag">daemon-reload</span> &amp;&amp; <span class="tag">systemctl</span> <span class="tag">enable</span> <span class="tag">node_exporter</span><span class="class">.service</span> &amp;&amp; <span class="tag">systemctl</span> <span class="tag">start</span> <span class="tag">node_exporter</span><span class="class">.service</span></span><br></pre></td></tr></table></figure></p><p><a href="http://your_server_ip:9100/metrics" target="_blank" rel="external">http://your_server_ip:9100/metrics</a><br>修改prometheus文件<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi  prometheus.yml</span><br><span class="line"><span class="string">scrape_configs:</span></span><br><span class="line">  - <span class="string">job_name:</span> <span class="string">"node"</span></span><br><span class="line"><span class="label">    scrape_interval:</span> <span class="string">"15s"</span></span><br><span class="line"><span class="label">    target_groups:</span></span><br><span class="line">    - <span class="string">targets:</span> [<span class="string">'NODE_IP:9100'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="Prometheus_u9488_u5BF9nodes_u544A_u8B66_u89C4_u5219_u914D_u7F6E"><a href="#Prometheus_u9488_u5BF9nodes_u544A_u8B66_u89C4_u5219_u914D_u7F6E" class="headerlink" title="Prometheus针对nodes告警规则配置"></a>Prometheus针对nodes告警规则配置</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">groups:</span><br><span class="line">- name: example</span><br><span class="line">  rules:</span><br><span class="line"> </span><br><span class="line">  - alert: 实例丢失</span><br><span class="line">    expr: up&#123;job=<span class="string">"node-exporter"</span>&#125; == <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">1</span>m</span><br><span class="line">    labels:</span><br><span class="line">      severity: page</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 丢失"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 上的任务 &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125; 已经停止了 1 分钟已上了"</span></span><br><span class="line"> </span><br><span class="line">  - alert: 磁盘容量小于 <span class="number">5</span>%</span><br><span class="line">    expr: <span class="number">100</span> - ((node_filesystem_avail_bytes&#123;job=<span class="string">"node-exporter"</span>,mountpoint=~<span class="string">".*"</span>,fstype=~<span class="string">"ext4|xfs|ext2|ext3"</span>&#125; * <span class="number">100</span>) / node_filesystem_size_bytes &#123;job=<span class="string">"node-exporter"</span>,mountpoint=~<span class="string">".*"</span>,fstype=~<span class="string">"ext4|xfs|ext2|ext3"</span>&#125;) &gt; <span class="number">95</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 磁盘不足 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;磁盘 &#123;&#123; <span class="variable">$labels</span>.device &#125;&#125; 资源 已不足 5%, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"内存容量小于 20%"</span></span><br><span class="line">    expr: ((node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Buffers_bytes - node_memory_Cached_bytes) / (node_memory_MemTotal_bytes )) * <span class="number">100</span> &gt; <span class="number">80</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 内存不足 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;内存资源已不足 20%,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"CPU 平均负载大于 4 个"</span></span><br><span class="line">    expr: node_load5 &gt; <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; CPU 负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;CPU 平均负载(5 分钟) 已超过 4 ,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"磁盘读 I/O 超过 30MB/s"</span></span><br><span class="line">    expr: irate(node_disk_<span class="built_in">read</span>_bytes_total&#123;device=<span class="string">"sda"</span>&#125;[<span class="number">1</span>m]) &gt; <span class="number">30000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; I/O 读负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;I/O 每分钟读已超过 30MB/s,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"磁盘写 I/O 超过 30MB/s"</span></span><br><span class="line">    expr: irate(node_disk_written_bytes_total&#123;device=<span class="string">"sda"</span>&#125;[<span class="number">1</span>m]) &gt; <span class="number">30000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; I/O 写负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;I/O 每分钟写已超过 30MB/s,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"网卡流出速率大于 10MB/s"</span></span><br><span class="line">    expr: (irate(node_network_transmit_bytes_total&#123;device!~<span class="string">"lo"</span>&#125;[<span class="number">1</span>m]) / <span class="number">1000</span>) &gt; <span class="number">1000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 网卡流量负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;网卡 &#123;&#123; <span class="variable">$labels</span>.device &#125;&#125; 流量已经超过 10MB/s, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"CPU 使用率大于 90%"</span></span><br><span class="line">    expr: <span class="number">100</span> - ((avg by (instance,job,env)(irate(node_cpu_seconds_total&#123;mode=<span class="string">"idle"</span>&#125;[<span class="number">30</span>s]))) *<span class="number">100</span>) &gt; <span class="number">90</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; CPU 使用率 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;CPU 使用率已超过 90%, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/12/29/5c26e87a05bad.png&quot; alt=&quot;Consul&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="node_exporter" scheme="http://www.idcsec.com/tags/node-exporter/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus+Consul实现自动服务发现</title>
    <link href="http://www.idcsec.com/2018/12/29/Prometheus-Consul%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/"/>
    <id>http://www.idcsec.com/2018/12/29/Prometheus-Consul实现自动服务发现/</id>
    <published>2018-12-29T02:55:00.000Z</published>
    <updated>2019-01-10T08:58:52.612Z</updated>
    
    <content type="html"><![CDATA[<p>prometheus+Consul自动服务发现减少修改修改prometheus.yml重启prometheus等操作</p><h1 id="Consul__u4ECB_u7ECD"><a href="#Consul__u4ECB_u7ECD" class="headerlink" title="Consul 介绍"></a>Consul 介绍</h1><p>Consul有多个组件，但总体而言，它是基础架构中的一款服务发现和配置的工具。 它提供了几个关键功能：<br>服务发现：Consul client 可以提供服务，例如api或mysql，也可以使用Consul client来发现指定服务的提供者。 使用DNS或HTTP，应用程序可以轻松找到他们所依赖的服务。<br>健康检查：Consul client 可以提供任何数量的健康检查，或者与给定的服务（“Web服务器是否返回200 OK”），或与本地节点（“内存利用率是否低于90％”）相关联。 可以使用此信息来监控集群运行状况，服务发现组件使用此信息将流量从有问题的主机中移除出去。<br>KV Store：应用程序可以使用Consul的分层键/值存储，包括动态配置，功能标记，协调，leader选举等等。 简单的HTTP API使其易于使用。<br>多数据中心：Consul支持多个数据中心。 这意味着Consul的用户不必担心构建额外的抽象层以扩展到多个区域。<br>官方架构图<br><img src="https://i.loli.net/2018/12/29/5c26e3aa40037.png" alt="Consul"><br><a id="more"></a><br>端口介绍<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8500</span>，客户端http api接口</span><br><span class="line"><span class="number">8600</span>，客户端DNS服务端口</span><br><span class="line"><span class="number">8400</span>，客户端RPC通信端口</span><br><span class="line"><span class="number">8300</span>，集群server RPC通信接口</span><br><span class="line"><span class="number">8301</span>，集群DC内部通信接口</span><br><span class="line"><span class="number">8302</span>，集群DC之间通信接口</span><br></pre></td></tr></table></figure></p><h1 id="prometheus_u670D_u52A1_u53D1_u73B0_Service_Discovery"><a href="#prometheus_u670D_u52A1_u53D1_u73B0_Service_Discovery" class="headerlink" title="prometheus服务发现 Service Discovery"></a>prometheus服务发现 Service Discovery</h1><p>Prometheus支持多种服务发现机制：文件，DNS，Consul,Kubernetes,OpenStack,EC2等等。基于服务发现的过程并不复杂，通过第三方提供的接口，Prometheus查询到需要监控的Target列表，然后轮训这些Target获取监控数据。</p><h1 id="u672C_u5730_u6D4B_u8BD5_u73AF_u5883_u7684Docker_Compose"><a href="#u672C_u5730_u6D4B_u8BD5_u73AF_u5883_u7684Docker_Compose" class="headerlink" title="本地测试环境的Docker Compose"></a>本地测试环境的Docker Compose</h1><p>使用gliderlabs/registrator监听Docker进程，对于暴露了端口的容器，registrator会自动将该容器暴露的服务地址注册到Consul中。<br>使用NodeExporter采集当前主机数据，cAdvisor采集容器相关数据之prometheus自动发现相关服务<br><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="haml">services:</span><br><span class="line">  consul:</span><br><span class="line">    image: consul</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8600</span><span class="symbol">:</span><span class="number">53</span>/udp</span><br><span class="line"></span>    command: agent -server -client=0.0.0.0 -dev -node=node0 -bootstrap-expect=1 -data-dir=/tmp/consul</span><br><span class="line">    labels:</span><br><span class="line">      SERVICE_IGNORE: 'true'</span><br><span class="line">  registrator:</span><br><span class="line">    image: gliderlabs/registrator</span><br><span class="line">    depends_on:</span><br><span class="line">      -<span class="ruby"> consul</span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /var/<span class="symbol">run:</span>/<span class="symbol">tmp:</span>rw</span><br><span class="line"></span>    command: consul://consul:8500</span><br><span class="line">  prometheus:</span><br><span class="line">    image: quay.io/prometheus/prometheus</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9090</span><span class="symbol">:</span><span class="number">9090</span></span><br><span class="line"></span>  node_exporter:</span><br><span class="line">    image: quay.io/prometheus/node-exporter</span><br><span class="line">    pid: "host"</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9100</span><span class="symbol">:</span><span class="number">9100</span></span><br><span class="line"></span>  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8080</span><span class="symbol">:</span><span class="number">8080</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /<span class="symbol">:/rootfs</span><span class="symbol">:ro</span> </span><br><span class="line"></span>      -<span class="ruby"> /var/<span class="symbol">run:</span>/var/<span class="symbol">run:</span>rw</span><br><span class="line"></span>      -<span class="ruby"> /var/lib/docker/<span class="symbol">:/var/lib/docker</span><span class="symbol">:ro</span></span></span></span><br></pre></td></tr></table></figure></p><h1 id="promethues-yml_u914D_u7F6E_3A"><a href="#promethues-yml_u914D_u7F6E_3A" class="headerlink" title="promethues.yml配置:"></a>promethues.yml配置:</h1><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">global</span>:</span><br><span class="line">  <span class="attribute">scrape_interval</span>: <span class="number">5s</span></span><br><span class="line">  <span class="attribute">scrape_timeout</span>: <span class="number">5s</span></span><br><span class="line">  <span class="attribute">evaluation_interval</span>: <span class="number">15s</span></span><br><span class="line"><span class="attribute">scrape_configs</span>:</span><br><span class="line">  - <span class="attribute">job_name</span>: consul_sd</span><br><span class="line">    <span class="attribute">metrics_path</span>: /metrics</span><br><span class="line">    <span class="attribute">scheme</span>: http</span><br><span class="line">    <span class="attribute">consul_sd_configs</span>:</span><br><span class="line">      - <span class="attribute">server</span>: <span class="attribute">consul</span>:<span class="number">8500</span></span><br><span class="line">        <span class="attribute">scheme</span>: http</span><br><span class="line">        <span class="attribute">services</span>:</span><br><span class="line">          - node_exporter</span><br><span class="line">          - cadvisor</span><br><span class="line">          - prometheus-node</span><br></pre></td></tr></table></figure><h1 id="u9759_u6001_u6CE8_u518C_u65B9_u5F0F_3A"><a href="#u9759_u6001_u6CE8_u518C_u65B9_u5F0F_3A" class="headerlink" title="静态注册方式:"></a>静态注册方式:</h1><p>使用配置文件注册服务，创建文件夹/etc/consul.d 启动指定配置文件目录-config-dir /etc/consul.d<br><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> cat consul/nodes-export.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"service"</span>:&#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="string">"node"</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"prometheus-node"</span>,</span><br><span class="line">    <span class="string">"address"</span>: <span class="string">"172.18.241.194"</span>,</span><br><span class="line">    <span class="string">"port"</span>: <span class="number">9100</span>,</span><br><span class="line">    <span class="string">"tags"</span>: [<span class="string">"prometheus-target"</span>],</span><br><span class="line">    <span class="string">"checks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"http"</span>: <span class="string">"http://172.18.241.194:9100/metrics"</span>,</span><br><span class="line">            <span class="string">"interval"</span>: <span class="string">"15s"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重新加载配置：<br><figure class="hljs highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it <span class="number">7</span>fa7d7e9ead9 consul <span class="built_in">reload</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/12/29/5c26e57674794.png" alt="Consul"><br><img src="https://i.loli.net/2018/12/29/5c26e5768dad8.png" alt="Consul"></p><h1 id="api_u670D_u52A1_u6CE8_u518C_u65B9_u5F0F_uFF1A"><a href="#api_u670D_u52A1_u6CE8_u518C_u65B9_u5F0F_uFF1A" class="headerlink" title="api服务注册方式："></a>api服务注册方式：</h1><p>用http的方式，直接调用/v1/agent/service/register接口注册：<br><figure class="hljs highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -<span class="keyword">d</span> '&#123;<span class="string">"id"</span>: <span class="string">"node"</span>,<span class="string">"name"</span>: <span class="string">"prometheus-node"</span>,<span class="string">"address"</span>: <span class="string">"172.18.241.194"</span>,<span class="string">"port"</span>: 9100,<span class="string">"tags"</span>: [<span class="string">"node-exporter"</span>],<span class="string">"checks"</span>: [&#123;<span class="string">"http"</span>: <span class="string">"http://172.18.241.194:9100/"</span>,<span class="string">"interval"</span>: <span class="string">"5s"</span>&#125;]&#125;'     http:<span class="comment">//localhost:8500/v1/agent/service/register</span></span><br></pre></td></tr></table></figure></p><h1 id="u4FEE_u6539_u540E_u7684compose_u6587_u4EF6"><a href="#u4FEE_u6539_u540E_u7684compose_u6587_u4EF6" class="headerlink" title="修改后的compose文件"></a>修改后的compose文件</h1><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="haml">services:</span><br><span class="line">  consul:</span><br><span class="line">    image: consul</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8600</span><span class="symbol">:</span><span class="number">53</span>/udp</span><br><span class="line"></span>    command: agent -server -client=0.0.0.0 -dev -node=node0 -bootstrap-expect=1 -config-dir=/consul/consul.d -data-dir=/tmp/consul</span><br><span class="line">    labels:</span><br><span class="line">      SERVICE_IGNORE: 'true'</span><br><span class="line">    volumes:</span><br><span class="line">      -<span class="ruby"> ./<span class="symbol">consul:</span>/consul/consul.d</span><br><span class="line"></span>  registrator:</span><br><span class="line">    image: gliderlabs/registrator</span><br><span class="line">    depends_on:</span><br><span class="line">      -<span class="ruby"> consul</span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /var/<span class="symbol">run:</span>/<span class="symbol">tmp:</span>rw</span><br><span class="line"></span>    command: consul://consul:8500</span><br><span class="line">  prometheus:</span><br><span class="line">    image: quay.io/prometheus/prometheus</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9090</span><span class="symbol">:</span><span class="number">9090</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">       -<span class="ruby"> ./prometheus.<span class="symbol">yml:</span>/etc/prometheus/prometheus.yml</span><br><span class="line"></span>    command: --config.file=/etc/prometheus/prometheus.yml</span><br><span class="line">  node_exporter:</span><br><span class="line">    image: quay.io/prometheus/node-exporter</span><br><span class="line">    pid: "host"</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9100</span><span class="symbol">:</span><span class="number">9100</span></span><br><span class="line"></span>  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8080</span><span class="symbol">:</span><span class="number">8080</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /<span class="symbol">:/rootfs</span><span class="symbol">:ro</span> </span><br><span class="line"></span>      -<span class="ruby"> /var/<span class="symbol">run:</span>/var/<span class="symbol">run:</span>rw</span><br><span class="line"></span>      -<span class="ruby"> /var/lib/docker/<span class="symbol">:/var/lib/docker</span><span class="symbol">:ro</span></span></span></span><br></pre></td></tr></table></figure><p><a href="http://consul.la/intro/what-is-consul" target="_blank" rel="external">http://consul.la/intro/what-is-consul</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;prometheus+Consul自动服务发现减少修改修改prometheus.yml重启prometheus等操作&lt;/p&gt;
&lt;h1 id=&quot;Consul__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#Consul__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;Consul 介绍&quot;&gt;&lt;/a&gt;Consul 介绍&lt;/h1&gt;&lt;p&gt;Consul有多个组件，但总体而言，它是基础架构中的一款服务发现和配置的工具。 它提供了几个关键功能：&lt;br&gt;服务发现：Consul client 可以提供服务，例如api或mysql，也可以使用Consul client来发现指定服务的提供者。 使用DNS或HTTP，应用程序可以轻松找到他们所依赖的服务。&lt;br&gt;健康检查：Consul client 可以提供任何数量的健康检查，或者与给定的服务（“Web服务器是否返回200 OK”），或与本地节点（“内存利用率是否低于90％”）相关联。 可以使用此信息来监控集群运行状况，服务发现组件使用此信息将流量从有问题的主机中移除出去。&lt;br&gt;KV Store：应用程序可以使用Consul的分层键/值存储，包括动态配置，功能标记，协调，leader选举等等。 简单的HTTP API使其易于使用。&lt;br&gt;多数据中心：Consul支持多个数据中心。 这意味着Consul的用户不必担心构建额外的抽象层以扩展到多个区域。&lt;br&gt;官方架构图&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2018/12/29/5c26e3aa40037.png&quot; alt=&quot;Consul&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="consul" scheme="http://www.idcsec.com/tags/consul/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus系统监控redis展示Grafana</title>
    <link href="http://www.idcsec.com/2018/12/12/Prometheus%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7redis%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2018/12/12/Prometheus系统监控redis展示Grafana/</id>
    <published>2018-12-12T02:54:00.000Z</published>
    <updated>2019-01-10T08:59:11.839Z</updated>
    
    <content type="html"><![CDATA[<p>使用redis_exporter采集Redis指标通过prometheus抓取数据展示Grafana<br><img src="/img/20181212112819.png" alt="pro"><br><a id="more"></a></p><h1 id="exporter_u5B89_u88C5"><a href="#exporter_u5B89_u88C5" class="headerlink" title="exporter安装"></a>exporter安装</h1><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//github.com/oliver006/redis_exporter/releases/download/v0.23.0/redis_exporter-v0.23.0.linux-amd64.tar.gz</span></span><br><span class="line">tar -zxvf redis_exporter-v0.<span class="number">23.0</span><span class="class">.linux-amd64</span><span class="class">.tar</span><span class="class">.gz</span>  -C /opt/redis</span><br></pre></td></tr></table></figure><h1 id="u542F_u52A8redis_exporter_3A"><a href="#u542F_u52A8redis_exporter_3A" class="headerlink" title="启动redis_exporter:"></a>启动redis_exporter:</h1><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7000</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9121</span></span><br><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7001</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9122</span></span><br><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7002</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9123</span></span><br></pre></td></tr></table></figure><p>grafana的redis的模板id763：<a href="https://grafana.com/dashboards/763" target="_blank" rel="external">https://grafana.com/dashboards/763</a><br>prometheus.yml加入redis节点，然后重启prometheus：<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> redis</span><br><span class="line"></span>  static_configs:</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9121'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7000</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9122'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7001</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9123'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7002</span><br></pre></td></tr></table></figure></p><p>curl -XPOST <a href="http://ip/-/reload" target="_blank" rel="external">http://ip/-/reload</a><br><img src="/img/20181212112749.png" alt="pro"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用redis_exporter采集Redis指标通过prometheus抓取数据展示Grafana&lt;br&gt;&lt;img src=&quot;/img/20181212112819.png&quot; alt=&quot;pro&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="redis" scheme="http://www.idcsec.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes之minikub安装</title>
    <link href="http://www.idcsec.com/2018/12/01/kubernetes%E4%B9%8Bminikub%E5%AE%89%E8%A3%85/"/>
    <id>http://www.idcsec.com/2018/12/01/kubernetes之minikub安装/</id>
    <published>2018-11-30T17:39:18.000Z</published>
    <updated>2019-01-10T08:59:33.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Minikub_u662F_u4EC0_u4E48_uFF1F"><a href="#Minikub_u662F_u4EC0_u4E48_uFF1F" class="headerlink" title="Minikub是什么？"></a>Minikub是什么？</h1><p>Minikub是一个能够在虚拟（VirtualBox或者Hyper-V）中运行单节点Kubernetes集群的工具，方便开发者可以在本地环境中进行开发和调试Kubernetes。这个工具默认安装和配置了一个Linux VM，Docker和Kubernetes的相关组件，并且提供Dashboard。目前支持在Linux, OS X及Windows上安装<br>安装kubectl</p><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//dl.k8s.io/v1.10.11/kubernetes-client-windows-amd64.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="Minikub_u5B89_u88C5"><a href="#Minikub_u5B89_u88C5" class="headerlink" title="Minikub安装"></a>Minikub安装</h1><p>Minitube是一个独立的Go应用，下载运行就可以<br>Windows 平台<br>下载 minikube-windows-amd64.exe 文件，并重命名为 minikube.exe，然后加入到环境变量路径下即可<br><a id="more"></a><br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube</span><span class="regexp">/releases/v</span>0.<span class="number">24.1</span>/minikube-windows-amd64.exe</span><br></pre></td></tr></table></figure></p><h1 id="u542F_u52A8minikub"><a href="#u542F_u52A8minikub" class="headerlink" title="启动minikub"></a>启动minikub</h1><p>默认启动使用的是 VirtualBox 驱动，使用 –vm-driver 参数可以指定其它驱动。<br><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置 docker 加速镜像</span><br><span class="line">minikube <span class="operator"><span class="keyword">start</span> <span class="comment">--registry-mirror=https://registry.docker-cn.com</span></span><br><span class="line">minikube <span class="keyword">status</span> \\查看状态</span><br><span class="line">minikube dashboard \\启动dashbpard</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/20181201102723.png" alt="minikube"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Minikub_u662F_u4EC0_u4E48_uFF1F&quot;&gt;&lt;a href=&quot;#Minikub_u662F_u4EC0_u4E48_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;Minikub是什么？&quot;&gt;&lt;/a&gt;Minikub是什么？&lt;/h1&gt;&lt;p&gt;Minikub是一个能够在虚拟（VirtualBox或者Hyper-V）中运行单节点Kubernetes集群的工具，方便开发者可以在本地环境中进行开发和调试Kubernetes。这个工具默认安装和配置了一个Linux VM，Docker和Kubernetes的相关组件，并且提供Dashboard。目前支持在Linux, OS X及Windows上安装&lt;br&gt;安装kubectl&lt;/p&gt;
&lt;figure class=&quot;hljs highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//dl.k8s.io/v1.10.11/kubernetes-client-windows-amd64.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Minikub_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Minikub_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Minikub安装&quot;&gt;&lt;/a&gt;Minikub安装&lt;/h1&gt;&lt;p&gt;Minitube是一个独立的Go应用，下载运行就可以&lt;br&gt;Windows 平台&lt;br&gt;下载 minikube-windows-amd64.exe 文件，并重命名为 minikube.exe，然后加入到环境变量路径下即可&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>haproxy+kibana日志分析可视化展示平台</title>
    <link href="http://www.idcsec.com/2018/11/24/haproxy-kibana%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA%E5%B9%B3%E5%8F%B0/"/>
    <id>http://www.idcsec.com/2018/11/24/haproxy-kibana日志分析可视化展示平台/</id>
    <published>2018-11-24T12:15:00.000Z</published>
    <updated>2019-01-10T09:00:06.448Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20181124202151.png" alt="kibnan"><br><a id="more"></a></p><h1 id="haproxy_u914D_u7F6E"><a href="#haproxy_u914D_u7F6E" class="headerlink" title="haproxy配置"></a>haproxy配置</h1><p>json格式输出日志到rsyslog日志格式不一定要按照我这个配置。<br><figure class="hljs highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">haproxy.cfg</span><br><span class="line"></span><br><span class="line">global</span><br><span class="line">    <span class="comment"># to have these messages end up in /var/log/haproxy.log you will</span></span><br><span class="line">    <span class="comment"># need to:</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 1) configure syslog to accept network log events.  This is done</span></span><br><span class="line">    <span class="comment">#    by adding the '-r' option to the SYSLOGD_OPTIONS in</span></span><br><span class="line">    <span class="comment">#    /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 2) configure local2 events to go to the /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment">#   file. A line like the following can be added to</span></span><br><span class="line">    <span class="comment">#   /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#    local2.*                       /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="keyword">log</span>         <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span> local3</span><br><span class="line"><span class="keyword">log</span>-<span class="keyword">format</span> &#123;<span class="string">"haproxy_dateTime"</span>:<span class="string">"<span class="variable">%t</span>"</span>,<span class="string">"haproxy_clientIP"</span>:<span class="string">"<span class="variable">%ci</span>"</span>,<span class="string">"haproxy_backendSourceIP"</span>:<span class="string">"<span class="variable">%bi</span>"</span>,<span class="string">"http_request"</span>:<span class="string">"<span class="variable">%r</span>"</span>,<span class="string">"reponse_headers"</span>:<span class="string">"<span class="variable">%hrl</span>"</span>,<span class="string">"status_code"</span>:<span class="variable">%ST</span>,<span class="string">"haproxy_bytesRead"</span>:<span class="string">"<span class="variable">%B</span>"</span>,<span class="string">"haproxy_serverName"</span>:<span class="string">"<span class="variable">%s</span>"</span>,<span class="string">"haproxy_Tw"</span>:<span class="string">"<span class="variable">%Tw</span>"</span>,<span class="string">"haproxy_Tc"</span>:<span class="string">"<span class="variable">%Tc</span>"</span>,<span class="string">"haproxy_Tt"</span>:<span class="string">"<span class="variable">%Tt</span>"</span>&#125;</span><br><span class="line">---</span><br><span class="line"> cat /etc/rsyslog.conf </span><br><span class="line">local3.*     <span class="variable">@@</span><span class="number">192.168</span>.<span class="number">200.75</span>:<span class="number">516</span></span><br></pre></td></tr></table></figure></p><h1 id="lostash_u914D_u7F6E"><a href="#lostash_u914D_u7F6E" class="headerlink" title="lostash配置"></a>lostash配置</h1><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@loanaudit02 zhphuser]<span class="comment"># cat /etc/logstash/conf.d/haproxy.conf </span></span><br><span class="line"><span class="comment">#input &#123;</span></span><br><span class="line">input &#123;</span><br><span class="line">truesyslog&#123;</span><br><span class="line">truetruetype =&gt; <span class="string">"haproxy"</span></span><br><span class="line">truetrueport =&gt; <span class="string">"516"</span></span><br><span class="line">true&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">         json &#123;</span><br><span class="line">             source =&gt; <span class="string">"message"</span></span><br><span class="line">             <span class="comment">#target =&gt; "doc"</span></span><br><span class="line">             <span class="comment">#remove_field =&gt; ["message"]</span></span><br><span class="line">         &#125;        </span><br><span class="line">     &#125;</span><br><span class="line">filter &#123;</span><br><span class="line">truegeoip &#123;</span><br><span class="line">        source =&gt; <span class="string">"haproxy_clientIP"</span></span><br><span class="line">        target =&gt; <span class="string">"geoip"</span></span><br><span class="line">        database =&gt; <span class="string">"/usr/local/logstash/config/GeoLite2-City.mmdb"</span> <span class="comment">//ip数据库地址</span></span><br><span class="line">        add_field =&gt; [<span class="string">"[geoip][coordinates]"</span>,<span class="string">"%&#123;[geoip][longitude]&#125;"</span>] <span class="comment">//添加字段coordinates，值为经</span></span><br><span class="line">        add_field =&gt; [<span class="string">"[geoip][coordinates]"</span>,<span class="string">"%&#123;[geoip][latitude]&#125;"</span>] <span class="comment">//添加字段coordinates，值为纬度</span></span><br><span class="line">     &#125;</span><br><span class="line">        mutate &#123;</span><br><span class="line">        convert =&gt; [ <span class="string">"[geoip][coordinates]"</span>, <span class="string">"float"</span>]  </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#filter &#123;</span></span><br><span class="line"><span class="comment"># grok &#123;</span></span><br><span class="line"><span class="comment">#        match =&gt; &#123;</span></span><br><span class="line"><span class="comment">#            "message" =&gt; "%&#123;IPV4:cip&#125;"</span></span><br><span class="line"><span class="comment">#        &#125;</span></span><br><span class="line"><span class="comment">#    &#125;</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts=&gt;[<span class="string">"192.168.1.100:9200"</span>]</span><br><span class="line">    index=&gt; <span class="string">"logstash-haproxy-%&#123;+YYYY-MM-DD&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index必须以logstash开头</p><h1 id="geoip_u914D_u7F6E"><a href="#geoip_u914D_u7F6E" class="headerlink" title="geoip配置"></a>geoip配置</h1><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在logstash服务器下载IP地址归类查询库</span><br><span class="line">wget http:<span class="comment">//geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz</span></span><br><span class="line">gunzip GeoLite2-City<span class="class">.mmdb</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure><h1 id="u914D_u7F6Ekibana"><a href="#u914D_u7F6Ekibana" class="headerlink" title="配置kibana"></a>配置kibana</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kibana使用地图统计ip访问地域</span><br><span class="line"></span><br><span class="line">安装logstash插件</span><br><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/logstash/</span>bin/logstash-plugin install logstash-filter-geoip</span><br><span class="line">kibana.yml最后一行添加使用高德地图</span><br><span class="line">tilemap.<span class="string">url:</span> <span class="string">'http://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;'</span></span><br></pre></td></tr></table></figure><p>下面是kibana自带的几种visualize类型</p><p>类型 　　　　　　　　　　　　　　用途<br>Area chart    　　　　　　用区块图来可视化多个不同序列的总体贡献。<br>Data table    　　　　　　用数据表来显示聚合的原始数据。其他可视化可以通过点击底部的方式显示数据表。<br>Line chart    　　　　　　 用折线图来比较不同序列。<br>Markdown widget    　　 用 Markdown 显示自定义格式的信息或和你仪表盘有关的用法说明。<br>Metric    　　　　　　　　用指标可视化在你仪表盘上显示单个数字。<br>Pie chart    　　　　　　  用饼图来显示每个来源对总体的贡献。<br>Tile map　　　　　　　用瓦片地图将聚合结果和经纬度联系起来。<br>Vertical bar chart    　　 用垂直条形图作为一个通用图形。</p><h2 id="top5ip_u7EDF_u8BA1"><a href="#top5ip_u7EDF_u8BA1" class="headerlink" title="top5ip统计"></a>top5ip统计</h2><p><img src="/img/top5ip统计.png" alt="kibnan"></p><h2 id="u5F53_u524D_u8BF7_u6C42pv"><a href="#u5F53_u524D_u8BF7_u6C42pv" class="headerlink" title="当前请求pv"></a>当前请求pv</h2><p><img src="/img/当前请求pv.png" alt="kibnan"></p><h2 id="u5F53_u524D_u8BF7_u6C42UV"><a href="#u5F53_u524D_u8BF7_u6C42UV" class="headerlink" title="当前请求UV"></a>当前请求UV</h2><p><img src="/img/当前请求UV.png" alt="kibnan"></p><h2 id="u516C_u7F51ip_u5730_u5740_u5206_u5E03"><a href="#u516C_u7F51ip_u5730_u5740_u5206_u5E03" class="headerlink" title="公网ip地址分布"></a>公网ip地址分布</h2><p><img src="/img/20181124205643.png" alt="kibnan"></p><h2 id="u8BF7_u6C42_u54CD_u5E94_u4EE3_u7801_u7EDF_u8BA1"><a href="#u8BF7_u6C42_u54CD_u5E94_u4EE3_u7801_u7EDF_u8BA1" class="headerlink" title="请求响应代码统计"></a>请求响应代码统计</h2><p><img src="/img/请求代码统计.png" alt="kibnan"></p><h2 id="u8BF7_u6C42URL_u7EDF_u8BA1"><a href="#u8BF7_u6C42URL_u7EDF_u8BA1" class="headerlink" title="请求URL统计"></a>请求URL统计</h2><p><img src="/img/请求URL统计.png" alt="kibnan"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/20181124202151.png&quot; alt=&quot;kibnan&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="EFK" scheme="http://www.idcsec.com/categories/EFK/"/>
    
    
      <category term="kibana" scheme="http://www.idcsec.com/tags/kibana/"/>
    
      <category term="logstash" scheme="http://www.idcsec.com/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>使用Let&#39;s Encrypt自动更新kubernetes ingressHTTPS</title>
    <link href="http://www.idcsec.com/2018/11/21/%E4%BD%BF%E7%94%A8Let-s-Encrypt%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0kubernetes-ingressHTTPS/"/>
    <id>http://www.idcsec.com/2018/11/21/使用Let-s-Encrypt自动更新kubernetes-ingressHTTPS/</id>
    <published>2018-11-21T07:57:25.000Z</published>
    <updated>2018-11-22T02:17:27.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1"><a href="#u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1" class="headerlink" title="用 <a href=" https:="" letsencrypt.org="" "="">Letsencrypt</a> 来签发凭证">用 <a href="https://letsencrypt.org/" target="_blank" rel="external">Letsencrypt</a> 来签发凭证</h1><p> 为我们管理SSL / TLS证书的组件是Cert manager。它将为每个入口端点自动创建新证书。此外，它将在证书过期时自动续订。<br><a href="https://certbot.eff.org/lets-encrypt/centosrhel7-nginx" target="_blank" rel="external">手动申请证书</a>安装 certbot,参考官方教程</p><h1 id="kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS"><a href="#kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS" class="headerlink" title="kubernetes 自动申请配置TLS"></a>kubernetes 自动申请配置TLS</h1><h2 id="u4F7F_u7528helm_u5B89_u88C5cert-manager"><a href="#u4F7F_u7528helm_u5B89_u88C5cert-manager" class="headerlink" title="使用helm安装cert-manager"></a>使用helm安装cert-manager</h2><p>如果群集未启用 RBAC，添加：–set rbac.create=false \<br>  –set serviceAccount.create=false<br><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">helm <span class="operator"><span class="keyword">install</span> \</span><br><span class="line">    <span class="comment">--name cert-manager \</span></span><br><span class="line">    <span class="comment">--namespace kube-system \</span></span><br><span class="line">    stable/cert-manager</span><br><span class="line">kubectl <span class="keyword">get</span> pod -<span class="keyword">n</span> ingress <span class="comment">--selector=app=cert-manage</span></span></span><br></pre></td></tr></table></figure></p><p>安装clusterissuers，指示Cert Manager使用Let的https。替换你的电子邮件地址<br>证书管理器必须有 Issuer 或 ClusterIssuer 资源，才能颁发证书。 这两种 Kubernetes 资源的功能完全相同，区别在于 Issuer 适用于单一命名空间，而 ClusterIssuer 适用于所有命名空间这里只讲ClusterIssuer</p><h1 id="ClusterIssuers"><a href="#ClusterIssuers" class="headerlink" title="ClusterIssuers"></a>ClusterIssuers</h1><p>cat certificate-issuer.yaml<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">apiVersion:</span> certmanager.k8s.io/v1alpha1</span><br><span class="line"><span class="string">kind:</span> ClusterIssuer</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> letsencrypt-prod</span><br><span class="line"><span class="label">  namespace:</span> <span class="keyword">default</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  acme:</span></span><br><span class="line"><span class="label">    email:</span> root<span class="annotation">@idcsec</span>.com</span><br><span class="line"><span class="label">    server:</span> <span class="string">https:</span><span class="comment">//acme-v01.api.letsencrypt.org/directory</span></span><br><span class="line"><span class="label">    privateKeySecretRef:</span></span><br><span class="line"><span class="label">      name:</span> letsencrypt-prod</span><br><span class="line"><span class="label">    http01:</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>metadata.name 是我们创建的签发机构的名称，后面我们创建证书的时候会引用它<br>spec.acme.email 是你自己的邮箱，证书快过期的时候会有邮件提醒，不过 cert-manager 会利用 acme 协议自动给我们重新颁发证书来续期<br>spec.acme.server 是 acme 协议的服务端，我们这里用 Let’s Encrypt，这个地址就写死成这样就行<br>spec.acme.privateKeySecretRef 指示此签发机构的私钥将要存储到哪个 Secret 对象中，名称不重要<br>spec.acme.http01 这里指示签发机构使用 HTTP-01 的方式进行 acme 协议 (还可以用 DNS 方式，acme 协议的目的是证明这台机器和域名都是属于你的，然后才准许给你颁发证书)</p><p>kubectl apply -f certificate-issuer.yaml<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这使我们能够在任何命名空间中创建Ingress。</span><br><span class="line">只需更改<span class="number">1</span>个annotations:</span><br><span class="line">certmanager<span class="class">.k8s</span><span class="class">.io</span>/cluster-issuer: letsencrypt-prod</span><br></pre></td></tr></table></figure></p><h1 id="u521B_u5EFA_u8BC1_u4E66_u5BF9_u8C61"><a href="#u521B_u5EFA_u8BC1_u4E66_u5BF9_u8C61" class="headerlink" title="创建证书对象"></a>创建证书对象</h1><p>接下来，必须创建证书资源。 证书资源定义了必需的 X.509 证书。参考<a href="https://cert-manager.readthedocs.io/en/latest/reference/certificates.html" target="_blank" rel="external">cert-manager 证书</a><br>cert-manager具有“证书”的概念，用于定义所需的X.509证书。证书是一种命名空间资源，它引用Issuer或ClusterIssuer以获取有关如何获取证书的信息。<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: certmanager<span class="class">.k8s</span><span class="class">.io</span>/v1alpha1   </span><br><span class="line">kind: Certificate  </span><br><span class="line">meteadata:   </span><br><span class="line"> name: tls-idcsec<span class="class">.com</span>   </span><br><span class="line"> namespace: ingress-nginx   </span><br><span class="line">spec:   </span><br><span class="line"> secretName: tls-idcsec<span class="class">.com</span>  </span><br><span class="line"> issuerRef:  </span><br><span class="line"> name: letsencrypt-prod   </span><br><span class="line"> kind: ClusterIssuer   </span><br><span class="line"> commonName: www<span class="class">.mydomain</span><span class="class">.com</span>   </span><br><span class="line"> dnsNames:   </span><br><span class="line"> - www<span class="class">.idecsec</span><span class="class">.com</span>   </span><br><span class="line"> - test<span class="class">.idcsec</span><span class="class">.com</span>   </span><br><span class="line"> acme:   </span><br><span class="line">   config:  </span><br><span class="line">   - http01:   </span><br><span class="line">        ingressClass: <span class="attribute">none</span></span><br><span class="line">     domains:  </span><br><span class="line">     - www<span class="class">.idecsec</span><span class="class">.com</span>   </span><br><span class="line">     - test<span class="class">.idcsec</span><span class="class">.com</span> </span><br><span class="line">kubectl apply -f certificates.yaml</span><br></pre></td></tr></table></figure></p><h1 id="ingress-nginx_u914D_u7F6Ehttps"><a href="#ingress-nginx_u914D_u7F6Ehttps" class="headerlink" title="ingress-nginx配置https"></a>ingress-nginx配置https</h1><figure class="hljs highlight"><figcaption><span>Ingress</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1&#10;metadata:&#10;  name: $&#123;projectSvc&#125;&#10;  annotations:&#10;    certmanager.k8s.io/cluster-issuer: letsencrypt-prod&#10;    ingress.kubernetes.io/ssl-redirect: &#34;False&#34; &#26159;&#21542;&#24378;&#21046;&#36339;&#36716;https&#10;spec:&#10;  tls:&#10;  - hosts: &#10;    - $&#123;projectUrl&#125;&#10;    secretName: https-secret&#10;  rules:&#10;  - host:  $&#123;projectUrl&#125;&#10;    http:&#10;      paths:&#10;      - path: /&#10;        backend:&#10;          serviceName: $&#123;projectSvc&#125;&#10;          servicePort: 80</span><br></pre></td></tr></table></figure><h1 id="u6E05_u7406_u8D44_u6E90"><a href="#u6E05_u7406_u8D44_u6E90" class="headerlink" title="清理资源"></a>清理资源</h1><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="operator"><span class="keyword">delete</span> -<span class="keyword">f</span> certificates.yaml</span><br><span class="line">kubectl <span class="keyword">delete</span> -<span class="keyword">f</span> cluster-issuer.yaml</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1&quot;&gt;&lt;a href=&quot;#u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IPv6隧道技术轻松通过苹果ipv6-only审核</title>
    <link href="http://www.idcsec.com/2018/11/19/IPv6%E9%9A%A7%E9%81%93%E6%8A%80%E6%9C%AF%E8%BD%BB%E6%9D%BE%E9%80%9A%E8%BF%87%E8%8B%B9%E6%9E%9Cipv6-only%E5%AE%A1%E6%A0%B8/"/>
    <id>http://www.idcsec.com/2018/11/19/IPv6隧道技术轻松通过苹果ipv6-only审核/</id>
    <published>2018-11-19T14:54:00.000Z</published>
    <updated>2018-11-19T15:24:57.965Z</updated>
    
    <content type="html"><![CDATA[<p>如果使用阿里云的服务器并且域名备案接入商是阿里就购买阿里云提供的ipv6地址（通过ipv6转ipv4<br>）</p><p>以下是通过<a href="https://www.tunnelbroker.net提供的ipv6隧道方法" target="_blank" rel="external">https://www.tunnelbroker.net提供的ipv6隧道方法</a></p><h1 id="centos7_u5F00_u542Fipv6_u652F_u6301"><a href="#centos7_u5F00_u542Fipv6_u652F_u6301" class="headerlink" title="centos7开启ipv6支持"></a>centos7开启ipv6支持</h1><p>vim /etc/modprobe.d/disable_ipv6.conf<br><figure class="hljs highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">options</span></span> ipv6 disable=0</span><br></pre></td></tr></table></figure></p><p>vim /etc/sysconfig/networ<br><figure class="hljs highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">NETWORKING_IPV6=<span class="value"><span class="keyword">yes</span></span></span></span><br></pre></td></tr></table></figure></p><p>vim /etc/sysctl.conf<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.all</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.default</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.lo</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>配置完最好重启一下<br>reboot</p><h1 id="u6CE8_u518C_u8D26_u53F7"><a href="#u6CE8_u518C_u8D26_u53F7" class="headerlink" title="注册账号"></a>注册账号</h1><p><a href="https://www.tunnelbroker.net注册账号" target="_blank" rel="external">https://www.tunnelbroker.net注册账号</a><br>创建一个ipv6 tunnel<br><img src="/img/ipv61.png" alt="ipv6"><br><img src="/img/ipv62.png" alt="monitoring"><br>这centos7选择linux-net-tools按照命令执行完查看<br>添加dns<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/resolv.conf </span><br><span class="line">nameserver <span class="number">2001</span>:<span class="number">4860</span>:<span class="number">4860</span>::<span class="number">8888</span></span><br><span class="line">nameserver <span class="number">2001</span>:<span class="number">4860</span>:<span class="number">4860</span>::<span class="number">8844</span></span><br></pre></td></tr></table></figure></p><p>ping6 ipv6.google.com<br>nginx转发配置<br><figure class="hljs highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">server</span> &#123;</span><br><span class="line"><span class="title">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="title">listen</span>  [::]:<span class="number">80</span>;</span><br><span class="line"><span class="title">server_name</span>  test.idcsec.com;</span><br><span class="line"></span><br><span class="line"><span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#  access_log  logs/wangting.access.log  main;</span></span><br><span class="line"></span><br><span class="line"><span class="title">location</span> / &#123;</span><br><span class="line">    <span class="title">root</span>   html;</span><br><span class="line">    <span class="title">index</span>  index  index.html index.htm;</span><br><span class="line">    <span class="title">proxy_pass</span>   <span class="url">http://test.idcsec.com.com</span>;</span><br><span class="line">    <span class="title">proxy_redirect</span> <span class="built_in">off</span>;</span><br><span class="line">    <span class="comment"># 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">    <span class="title">proxy_set_header</span>  Host  <span class="string">"test.idcsec.com"</span>;</span><br><span class="line">    <span class="title">proxy_set_header</span>  X-Real-IP  <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="title">proxy_set_header</span>  X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="title">proxy_next_upstream</span> <span class="built_in">error</span> timeout invalid_header http_500 http_502 http_503 http_504;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>域名添加4A解析<br>验证<br> <a href="http://ipv6-test.com/validate.php" target="_blank" rel="external">http://ipv6-test.com/validate.php</a><br> 页面代理服务ipv6网站www.ipv6proxy.net/index.php</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果使用阿里云的服务器并且域名备案接入商是阿里就购买阿里云提供的ipv6地址（通过ipv6转ipv4&lt;br&gt;）&lt;/p&gt;
&lt;p&gt;以下是通过&lt;a href=&quot;https://www.tunnelbroker.net提供的ipv6隧道方法&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="linux" scheme="http://www.idcsec.com/categories/linux/"/>
    
    
      <category term="ipv6 linux" scheme="http://www.idcsec.com/tags/ipv6-linux/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus监控container的告警规则</title>
    <link href="http://www.idcsec.com/2018/11/05/Prometheus%E7%9B%91%E6%8E%A7container%E7%9A%84%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99/"/>
    <id>http://www.idcsec.com/2018/11/05/Prometheus监控container的告警规则/</id>
    <published>2018-11-05T11:44:00.000Z</published>
    <updated>2018-11-05T11:56:17.798Z</updated>
    
    <content type="html"><![CDATA[<p>修改Prometheus.yml文件<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">rules.yml: |</span><br><span class="line">   groups:</span><br><span class="line">   - name: container.rules</span><br><span class="line">     rules:</span><br><span class="line">     - alert: Container_Memory_RSS</span><br><span class="line">       expr: ((sum(container_memory_rss&#123;job=<span class="string">"kubernetes-cadvisor"</span>,pod_name!=<span class="string">""</span>&#125;) by (pod_name)) /(sum(container_spec_memory_limit_bytes&#123;job=<span class="string">"kubernetes-cadvisor"</span>,pod_name!=<span class="string">""</span>&#125;) by (pod_name)) * <span class="number">100</span>) &gt; <span class="number">95</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary: <span class="string">"检测内存使用率过高"</span></span><br><span class="line">         description:  <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;内存持续2分钟高于95%. 当前值: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_Network_RX_Average</span><br><span class="line">       expr: ((sum (rate (container_network_receive_bytes_total&#123;job=<span class="string">"kubernetes-nodes"</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) by (pod_name)) / <span class="number">1024</span>) &gt; <span class="number">102400</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测网络带宽使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;网络带宽持续2分钟高于 100M. RX带宽使用率: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_Network_TX_Average</span><br><span class="line">       expr: ((sum (rate (container_network_transmit_bytes_total&#123;job=<span class="string">"kubernetes-nodes"</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) by (pod_name)) / <span class="number">1024</span>) &gt; <span class="number">102400</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测网络带宽使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;网络带宽持续2分钟高于 100M. TX带宽使用率: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_USAGE_CPU_Average</span><br><span class="line">       expr: ((sum(rate(container_cpu_usage_seconds_total&#123;job=<span class="string">"kubernetes-nodes"</span>,image!=<span class="string">""</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) BY (pod_name)) * <span class="number">100</span>) &gt; <span class="number">95</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测CPU平均使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;CPU持续2分钟高于高于95% 当前值: &#123;&#123; $value &#125;&#125;"</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改Prometheus.yml文件&lt;br&gt;&lt;figure class=&quot;hljs highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="Prometheus" scheme="http://www.idcsec.com/tags/Prometheus/"/>
    
      <category term="alertmanager" scheme="http://www.idcsec.com/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes的Pod健康检查</title>
    <link href="http://www.idcsec.com/2018/11/02/kubernetes%E7%9A%84Pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/"/>
    <id>http://www.idcsec.com/2018/11/02/kubernetes的Pod健康检查/</id>
    <published>2018-11-02T06:38:00.000Z</published>
    <updated>2018-11-02T06:46:11.433Z</updated>
    
    <content type="html"><![CDATA[<p>参考<br><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/" target="_blank" rel="external">https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/</a></p><p>###进程健康检查<br>健康检查最简单的方式就是检查进程的状态。Kubelet 不断的询问 Docker daemon 这个容器进程是否还在运行，如果没有，这个容器就会被重启。目前在所有 Kubernetes 的案例中，这种健康检查是一直开启的。对与 Kubernetes 中所有运行的容器都是生效的。然而，在很多场景中这个低级别的健康检查是没有作用的：比如进程也一直在运行，但是从应用的角度看，代码已经死锁，而且不会有正确的响应。</p><p>###Pod健康检测机制<br>LivenessProbe探针：<br>用于判断容器是否存活，即Pod是否为running状态，如果LivenessProbe探针探测到容器不健康，则kubelet将kill掉容器，并根据容器的重启策略是否重启，如果一个容器不包含LivenessProbe探针，则Kubelet认为容器的LivenessProbe探针的返回值永远成功。<br>ReadinessProbe探针：<br>用于判断容器是否正常提供服务，即容器的Ready是否为True，是否可以接收请求，如果ReadinessProbe探测失败，则容器的Ready将为False，控制器将此Pod的Endpoint从对应的service的Endpoint列表中移除，从此不再将任何请求调度此Pod上，直到下次探测成功。（剔除此pod不参与接收请求不会将流量转发给此Pod）</p><p>目前，有三种类型的应用健康检查你可以选择：<br>exec：通过执行命令来检查服务是否正常，回值为0则表示容器健康<br>httpGet方式：通过发送http请求检查服务是否正常，返回200-399状态码则表明容器健康<br>tcpSocket：通过容器的IP和Port执行TCP检查，如果能够建立TCP连接，则表明容器健康</p><p>###探测的结果有以下三者之一：<br>Success：Container通过了检查。<br>Failure：Container未通过检查。<br>Unknown：未能执行检查，因此不采取任何措施。</p><p>####本环境使用httpGet方式<br>示例：<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /</span><br><span class="line">            port: <span class="number">80</span></span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: <span class="number">120</span> </span><br><span class="line">          periodSeconds: <span class="number">15</span> </span><br><span class="line">          timeoutSeconds: <span class="number">2</span></span><br><span class="line">    livenessProbe: </span><br><span class="line">          httpGet: </span><br><span class="line">            path: /</span><br><span class="line">            port: <span class="number">80</span></span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: <span class="number">180</span> </span><br><span class="line">          timeoutSeconds: <span class="number">2</span></span><br><span class="line">          periodSeconds: <span class="number">15</span></span><br><span class="line">----------</span><br></pre></td></tr></table></figure></p><p>initialDelaySeconds：容器启动后第一次执行探测是需要等待多少秒。<br>periodSeconds：执行探测的频率。默认是10秒，最小1秒。<br>timeoutSeconds：探测超时时间。默认1秒，最小1秒。<br>successThreshold：探测失败后，最少连续探测成功多少次才被认定为成功。默认是1。对于liveness必须是1。最小值是1。<br>failureThreshold：探测成功后，最少连续探测失败多少次才被认定为失败。默认是3。最小值是1。</p><p>####httpGet探测方式有如下可选的控制字段<br>host：要连接的主机名，默认为Pod IP，可以在http request head中设置host头部。<br>httpHeaders:</p><pre><code>- name: X-Custom-Header  value: Awesome</code></pre><p>scheme: 用于连接host的协议，默认为HTTP。<br>path：http服务器上的访问URI。<br>httpHeaders：自定义HTTP请求headers，HTTP允许重复headers。<br>port： 容器上要访问端口号或名称<br>对于LivenessProbe和ReadinessProbe用法都一样，拥有相同的参数和相同的监测方式。<br>当前对每一个Container都可以设置不同的restartpolicy，有三种值可以设置：<br>Always : 只要container退出就重新启动<br>OnFailure : 当container非正常退出后重新启动<br>Never : 从不进行重新启动<br>restartPolicy: [Always|Never|OnFailure]//重启策略<br>如果restartpolicy没有设置，那么默认值是Always。如果container需要重启，仅仅是通过kubelet在当前节点进行container级别的重启。<br>如果要使用ReadinessProbe只需要将livenessProbe修改为readinessProbe即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&quot; target=&quot;_blank&quot; rel=&quot;extern
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="pod" scheme="http://www.idcsec.com/tags/pod/"/>
    
  </entry>
  
  <entry>
    <title>使用Prometheus的blackbox_exporter进行网络监控</title>
    <link href="http://www.idcsec.com/2018/10/28/%E4%BD%BF%E7%94%A8Prometheus%E7%9A%84blackbox-exporter%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E7%9B%91%E6%8E%A7/"/>
    <id>http://www.idcsec.com/2018/10/28/使用Prometheus的blackbox-exporter进行网络监控/</id>
    <published>2018-10-27T16:44:00.000Z</published>
    <updated>2018-10-29T14:15:04.592Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20181028004809.png" alt="monitoring"></p><p>使用Prometheus的blackbox_exporter进行网络监控<br><img src="http://showdoc.zhph.lan/Public/Uploads/2018-10-15/5bc3e8988eaba.png" alt=""></p><ul><li>Prometheus提供了一个blackbox_exporter可以实现网络监控，支持http、dns、tcp、icmp等监控。</li></ul><p>其中9115是这个exporter的http端点的监听端口，blackbox.yml是它的配置文件，需要在其中使用blackbox_exporter的http、dns、tcp、icmp等prober定制配置出各种监测模块(module)。关于blackbox_exporter的配置具体参考Blackbox exporter configuration和Blackbox exporter configuration Exmaple。下面的例子是一个最基本的配置：<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">modules</span>:</span><br><span class="line">  <span class="attribute">http_2xx</span>:  # http 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">  <span class="attribute">http_post_2xx</span>: # http post 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">method</span>: POST</span><br><span class="line">  <span class="attribute">tcp_connect</span>: # tcp 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: tcp</span><br><span class="line">  <span class="attribute">ping</span>: # icmp 检测模块</span><br><span class="line">    <span class="attribute">prober</span>: icmp</span><br><span class="line">    <span class="attribute">timeout</span>: <span class="number">5s</span></span><br><span class="line">    <span class="attribute">icmp</span>:</span><br><span class="line">      <span class="attribute">preferred_ip_protocol</span>: <span class="string">"ip4"</span></span><br><span class="line">      <span class="attribute">dns</span>:</span><br><span class="line">       <span class="attribute">transport_protocol</span>: <span class="string">"tcp"</span></span><br><span class="line">       <span class="attribute">preferred_ip_protocol</span>: <span class="string">"ip4"</span></span><br><span class="line">       <span class="attribute">query_name</span>: <span class="string">"kubernetes.default.svc.cloud.ctrm"</span>  # 利用这个域名来检查 dns 服务器</span><br><span class="line">       <span class="attribute">query_type</span>: <span class="string">"A"</span>  # 如果是 kube-dns ，一定要加入这个</span><br></pre></td></tr></table></figure></p><p>在Prometheus的配置文件中配置使用ping module：<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'ping_all'</span></span><br><span class="line"></span>    scrape_interval: 1m</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    params:</span><br><span class="line">      module: [ping]</span><br><span class="line">    static_configs:</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>        -<span class="ruby"> <span class="number">192.168</span>.<span class="number">1.2</span></span><br><span class="line"></span>       labels:</span><br><span class="line">         instance: node2</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>        -<span class="ruby"> <span class="number">192.168</span>.<span class="number">1.3</span></span><br><span class="line"></span>       labels:</span><br><span class="line">         instance: node3</span><br><span class="line">    relabel_configs:</span><br><span class="line">      -<span class="ruby"> <span class="symbol">source_labels:</span> [__address_<span class="number">_</span>]</span><br><span class="line"></span>        target_label: __param_target</span><br><span class="line">      -<span class="ruby"> <span class="symbol">target_label:</span> __address_<span class="number">_</span></span><br><span class="line"></span>        replacement: 127.0.0.1:9115 # black_exporter服务器的地址</span><br></pre></td></tr></table></figure></p><p>测试<br>curl “<a href="http://127.0.0.1:9115/probe?module=ping&amp;target=192.168.1.2" target="_blank" rel="external">http://127.0.0.1:9115/probe?module=ping&amp;target=192.168.1.2</a>“<br>http检测<br>Blackbox 配置了 http_2xx 模块，所以这里只需要在 Prometheus的配置文件中配置使用http_2xx module<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'blackbox'</span></span><br><span class="line"></span>  metrics_path: /probe</span><br><span class="line">  params:</span><br><span class="line">    module: [http_2xx]  # Look for a HTTP 200 response.</span><br><span class="line">  static_configs:</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="symbol">http:</span>/<span class="regexp">/prometheus.io    # Target to probe with http.</span><br><span class="line"></span></span>      -<span class="ruby"><span class="regexp"> https:/</span><span class="regexp">/prometheus.io   # Target to probe with https.</span><br><span class="line"></span></span>      -<span class="ruby"><span class="regexp"> http:/</span><span class="regexp">/example.com:8080 # Target to probe with http on port 8080.</span><br><span class="line"></span></span>  relabel_configs:</span><br><span class="line">    -<span class="ruby"><span class="regexp"> source_labels: [__address__]</span><br><span class="line"></span></span>      target_label: __param_target</span><br><span class="line">    -<span class="ruby"><span class="regexp"> source_labels: [__param_target]</span><br><span class="line"></span></span>      target_label: instance</span><br><span class="line">    -<span class="ruby"><span class="regexp"> target_label: __address__</span><br><span class="line"></span></span>      replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port</span><br></pre></td></tr></table></figure></p><p>dns监控<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">"kubernetes-service-dns"</span></span><br><span class="line"></span>  metrics_path: /probe # 不是 metrics，是 probe</span><br><span class="line">  params:</span><br><span class="line">    module: [dns] # DNS 模块</span><br><span class="line">  static_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>    -<span class="ruby"> kube-<span class="symbol">dns:</span><span class="number">53</span> <span class="comment"># 不要省略端口号</span></span><br><span class="line"></span>  relabel_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__address_<span class="number">_</span>]</span><br><span class="line"></span>    target_label: __param_target</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__param_target]</span><br><span class="line"></span>    target_label: instance</span><br><span class="line">  -<span class="ruby"> <span class="symbol">target_label:</span> __address_<span class="number">_</span></span><br><span class="line"></span>    replacement: blackbox # 服务地址，和上面的 Service 定义保持一致</span><br></pre></td></tr></table></figure></p><p>/-/reload(curl -XPOST ip:prom端口/-/reload）使配置生效<br>可以使用 probe_success{job=”kubernetes-service-dns”} 查看结果<br>如果HTTP服务启用了安全认证，Blockbox Exporter内置了对basic_auth的支持，可以直接设置相关的认证信息即可：<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http_basic_auth_example</span>:</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">timeout</span>: <span class="number">5s</span></span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">method</span>: POST</span><br><span class="line">      <span class="attribute">headers</span>:</span><br><span class="line">        <span class="attribute">Host</span>: <span class="string">"login.example.com"</span></span><br><span class="line">      <span class="attribute">basic_auth</span>:</span><br><span class="line">        <span class="attribute">username</span>: <span class="string">"username"</span></span><br><span class="line">        <span class="attribute">password</span>: <span class="string">"mysecret"</span></span><br></pre></td></tr></table></figure></p><p>对于使用了Bear Token的服务也可以通过bearer_token配置项直接指定令牌字符串，或者通过bearer_token_file指定令牌文件。</p><p>对于一些启用了HTTPS的服务，但是需要自定义证书的服务，可以通过tls_config指定相关的证书信息：<br><figure class="hljs highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http_custom_ca_example:</span><br><span class="line">   prober: http</span><br><span class="line">   http:</span><br><span class="line">     <span class="keyword">method</span>: <span class="type">GET</span></span><br><span class="line">     tls_config:</span><br><span class="line">       ca_file: <span class="string">"/certs/my_cert.crt"</span></span><br></pre></td></tr></table></figure></p><p>自带 metrics 端点的服务<br>有的服务，例如 prometheus 或者 blackbox，以及 kube-dns、etcd 等， 都是自有 /metrics 提供指标输出的，这种服务对 Blackbox + Prometheus 组合是非常方便的。<br>只要给服务的注解部分加入几个标签：<br>kubernetes-pods<br>对于pod的监测也是需要加注解：<br><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">prometheus.io/host</span>: <span class="string">calico-etcd # 服务名称</span></span><br><span class="line"><span class="attribute">prometheus.io/port</span>: <span class="string">"6666" # metrics 端口</span></span><br><span class="line"><span class="attribute">prometheus.io/scrape</span>: <span class="string">"true" # 抓取开关</span></span><br><span class="line"><span class="attribute">prometheus.io/path</span>: <span class="string">"/metrics"默认为/metric</span></span><br></pre></td></tr></table></figure></p><h1 id="u5B8C_u6574_u7684kubernetes_u90E8_u7F72_u6587_u4EF6"><a href="#u5B8C_u6574_u7684kubernetes_u90E8_u7F72_u6587_u4EF6" class="headerlink" title="完整的kubernetes部署文件"></a>完整的kubernetes部署文件</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">blackbox-exporter-deploy.yaml </span><br><span class="line"><span class="string">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="string">kind:</span> Deployment</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  namespace:</span> monitoring</span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  selector:</span></span><br><span class="line"><span class="label">    matchLabels:</span></span><br><span class="line"><span class="label">      app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="label">  template:</span></span><br><span class="line"><span class="label">    metadata:</span></span><br><span class="line"><span class="label">      labels:</span></span><br><span class="line"><span class="label">        app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">    spec:</span></span><br><span class="line"><span class="label">      restartPolicy:</span> Always</span><br><span class="line"><span class="label">      containers:</span></span><br><span class="line">      - <span class="string">name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">        image:</span> prom/blackbox-<span class="string">exporter:</span>v0<span class="number">.12</span><span class="number">.0</span></span><br><span class="line"><span class="label">        imagePullPolicy:</span> IfNotPresent</span><br><span class="line"><span class="label">        ports:</span></span><br><span class="line">        - <span class="string">name:</span> blackbox-port</span><br><span class="line"><span class="label">          containerPort:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">        readinessProbe:</span></span><br><span class="line"><span class="label">          tcpSocket:</span></span><br><span class="line"><span class="label">            port:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">          initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="label">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="label">        resources:</span></span><br><span class="line"><span class="label">          requests:</span></span><br><span class="line"><span class="label">            memory:</span> <span class="number">50</span>Mi</span><br><span class="line"><span class="label">            cpu:</span> <span class="number">100</span>m</span><br><span class="line"><span class="label">          limits:</span></span><br><span class="line"><span class="label">            memory:</span> <span class="number">60</span>Mi</span><br><span class="line"><span class="label">            cpu:</span> <span class="number">200</span>m</span><br><span class="line"><span class="label">        volumeMounts:</span></span><br><span class="line">        - <span class="string">name:</span> config</span><br><span class="line"><span class="label">          mountPath:</span> <span class="regexp">/etc/</span>blackbox_exporter</span><br><span class="line"><span class="label">        args:</span></span><br><span class="line">        - --config.file=<span class="regexp">/etc/</span>blackbox_exporter/blackbox.yml</span><br><span class="line">        - --log.level=debug</span><br><span class="line">        - --web.listen-address=:<span class="number">9115</span></span><br><span class="line"><span class="label">      volumes:</span></span><br><span class="line">      - <span class="string">name:</span> config</span><br><span class="line"><span class="label">        configMap:</span></span><br><span class="line"><span class="label">          name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">      nodeSelector:</span></span><br><span class="line"><span class="label">        prometheus:</span> <span class="string">"core"</span></span><br><span class="line"><span class="label">      tolerations:</span></span><br><span class="line">      - <span class="string">key:</span> <span class="string">"node-role.kubernetes.io/master"</span></span><br><span class="line"><span class="label">        effect:</span> <span class="string">"NoSchedule"</span></span><br><span class="line">---</span><br><span class="line"><span class="string">apiVersion:</span> v1</span><br><span class="line"><span class="string">kind:</span> Service</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  labels:</span></span><br><span class="line"><span class="label">    app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  name:</span> blackbox-exporter</span><br><span class="line"><span class="label">  namespace:</span> monitoring</span><br><span class="line"><span class="label">  annotations:</span></span><br><span class="line">    prometheus.io/<span class="string">scrape:</span> <span class="string">'true'</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  type:</span> NodePort</span><br><span class="line"><span class="label">  selector:</span></span><br><span class="line"><span class="label">    app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  ports:</span></span><br><span class="line">  - <span class="string">name:</span> blackbox</span><br><span class="line"><span class="label">    port:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">    targetPort:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">    protocol:</span> TCP</span><br></pre></td></tr></table></figure><h1 id="prometheus_u7684_u914D_u7F6E_u6587_u4EF6"><a href="#prometheus_u7684_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="prometheus的配置文件"></a>prometheus的配置文件</h1><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'blackbox'</span></span><br><span class="line"></span>   metrics_path: /probe</span><br><span class="line">   params:</span><br><span class="line">     module: [http_2xx]  # Look for a HTTP 200 response.</span><br><span class="line">   static_configs:</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>       -<span class="ruby"> <span class="symbol">http:</span>/<span class="regexp">/prometheus.io    # Target to probe with http.</span><br><span class="line"></span></span>       -<span class="ruby"><span class="regexp"> https:/</span><span class="regexp">/prometheus.io   # Target to probe with https.</span><br><span class="line"></span></span>       -<span class="ruby"><span class="regexp"> http:/</span><span class="regexp">/example.com:8080 # Target to probe with http on port 8080.</span><br><span class="line"></span></span>   relabel_configs:</span><br><span class="line">     -<span class="ruby"><span class="regexp"> source_labels: [__address__]</span><br><span class="line"></span></span>       target_label: __param_target</span><br><span class="line">     -<span class="ruby"><span class="regexp"> source_labels: [__param_target]</span><br><span class="line"></span></span>       target_label: instance</span><br><span class="line">     -<span class="ruby"><span class="regexp"> target_label: __address__</span><br><span class="line"></span></span>       replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port</span><br></pre></td></tr></table></figure><p><img src="/img/20181028013940.png" alt="monitoring"></p><h1 id="prometheus_u7684_u914D_u7F6E_u6587_u4EF6alermanager_u62A5_u8B66_u89C4_u5219"><a href="#prometheus_u7684_u914D_u7F6E_u6587_u4EF6alermanager_u62A5_u8B66_u89C4_u5219" class="headerlink" title="prometheus的配置文件alermanager报警规则"></a>prometheus的配置文件alermanager报警规则</h1><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: sitealer</span><br><span class="line">  rules:</span><br><span class="line">  - alert: 网站异常</span><br><span class="line">    expr: up&#123;job=<span class="string">"blackbox"</span>&#125; == <span class="number">0</span>  or  probe_success&#123;job=<span class="string">"blackbox"</span>&#125; == <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">10</span>s</span><br><span class="line">    labels:</span><br><span class="line">      severity: critica</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"网站 &#123;&#123; $labels.target &#125;&#125; 访问异常"</span></span><br></pre></td></tr></table></figure><p><img src="/img/20181028012307.png" alt="monitoring"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/20181028004809.png&quot; alt=&quot;monitoring&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用Prometheus的blackbox_exporter进行网络监控&lt;br&gt;&lt;img src=&quot;http://showdoc.zhph.lan/Pub
      
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/prometheus/kubernetes/"/>
    
    
      <category term="blackbox-exporter" scheme="http://www.idcsec.com/tags/blackbox-exporter/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>使用Prometheus监控Oracle系统展示到Grafana</title>
    <link href="http://www.idcsec.com/2018/10/27/%E4%BD%BF%E7%94%A8Prometheus%E7%9B%91%E6%8E%A7Oracle%E7%B3%BB%E7%BB%9F%E5%B1%95%E7%A4%BA%E5%88%B0Grafana/"/>
    <id>http://www.idcsec.com/2018/10/27/使用Prometheus监控Oracle系统展示到Grafana/</id>
    <published>2018-10-27T13:58:00.000Z</published>
    <updated>2018-10-30T07:54:13.828Z</updated>
    
    <content type="html"><![CDATA[<p>oracledb_exporter参考：<br><a href="https://github.com/iamseth/oracledb_exporter" target="_blank" rel="external">https://github.com/iamseth/oracledb_exporter</a><br>本文直接把oracledb_exporter部署在k8s环境。docker部署方式更为简单<br>我们使用Prometheus在Grafana上为Oracle实现监控仪表板。由于Oracle不支持http通信，它由Oracle Exporter获取指标，它将Oracle的内容发送到Prometheus，并将Prometheus内容输出到Grafana。<br><img src="/img/oracle1.jpg" alt="crt"><br>Oracle DB→Oracle Exporter→Prometheus→Grafana</p><p>Oracle Exporter需要将Oracle与Prometheus连接。Oracle Exporter将有关Oracle的信息传递给Prometheus。<br>创建yaml对象</p><h1 id="u90E8_u7F72oracle-export"><a href="#u90E8_u7F72oracle-export" class="headerlink" title="部署oracle-export"></a>部署oracle-export</h1><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl create -f - </span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  name: oracle-<span class="keyword">export</span>-dm</span><br><span class="line">  <span class="keyword">namespace</span>: monitoring</span><br><span class="line">spec:</span><br><span class="line">  replicas: <span class="number">1</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  <span class="keyword">template</span>:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image:  wtingdocker/oracledb_exporter:latest</span><br><span class="line">        name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">        command:</span><br><span class="line">        - <span class="string">"/oracledb_exporter"</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: <span class="number">9161</span></span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: DATA_SOURCE_NAME</span><br><span class="line">          value: <span class="string">"system/oracle@ip:1521/sid"</span>  <span class="preprocessor">#改成自己的数据库信息 定义DATA_SOURCE_NAME变量</span></span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  <span class="keyword">namespace</span>: monitoring</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: <span class="number">9161</span></span><br><span class="line">    targetPort: <span class="number">9161</span></span><br><span class="line">  selector:</span><br><span class="line">    app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="u4FEE_u6539prometheus-yml_u6587_u4EF6"><a href="#u4FEE_u6539prometheus-yml_u6587_u4EF6" class="headerlink" title="修改prometheus.yml文件"></a>修改prometheus.yml文件</h1><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scrape_configs</span>:</span><br><span class="line">  - <span class="attribute">job_name</span>: <span class="string">'oracle-endpoint'</span></span><br><span class="line">    <span class="attribute">static_configs</span>:</span><br><span class="line">    - <span class="attribute">targets</span>:</span><br><span class="line">      - <span class="attribute">oracle-export-X-X</span>:<span class="number">9161</span></span><br><span class="line">      <span class="attribute">labels</span>:</span><br><span class="line">        <span class="attribute">target</span>: <span class="string">'192.168.1.X'</span></span><br><span class="line">        <span class="attribute">descr</span>: <span class="string">'XX数据库'</span></span><br></pre></td></tr></table></figure><p>重新加载prometheus配置文件<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl  apply <span class="operator">-f</span> configmap.yaml</span><br></pre></td></tr></table></figure></p><p>重新启动prometheus容器以使修改后的内容生效<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST <span class="string">http:</span><span class="comment">//192.168.7.X:30680/-/reload</span></span><br></pre></td></tr></table></figure></p><h1 id="Grafana_u5C55_u793A"><a href="#Grafana_u5C55_u793A" class="headerlink" title="Grafana展示"></a>Grafana展示</h1><p>访问oracle-export端口验证Oracle和Prometheus连接<br><img src="/img/20181027225036.png" alt="oracle1"><br><img src="/img/20181027225445.png" alt="oracle1"><br>Grafana添加Prometheus数据库源<br><img src="/img/0181027230136.png" alt="oracle2"></p><p>仪表板导入3333可以根据自己的需要添加export提供的metrics 展示以及通过alertmanager告警<br><img src="/img/20181027230648.png" alt="oracle2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;oracledb_exporter参考：&lt;br&gt;&lt;a href=&quot;https://github.com/iamseth/oracledb_exporter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/iamseth/
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="http://www.idcsec.com/tags/kubernetes/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes ingress配置HTTPS/TLS证书</title>
    <link href="http://www.idcsec.com/2018/09/29/kubernetes-ingress%E9%85%8D%E7%BD%AEHTTPS-TLS%E8%AF%81%E4%B9%A6/"/>
    <id>http://www.idcsec.com/2018/09/29/kubernetes-ingress配置HTTPS-TLS证书/</id>
    <published>2018-09-29T15:14:00.000Z</published>
    <updated>2018-09-29T15:15:31.953Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/" target="_blank" rel="external">Ingress是Kubernetes中的一个概念，用于</a>将入站连接路由到不同的服务。这可以通过不同方式实现。<br>生成证书文件<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days <span class="number">2920</span> -newkey rsa:<span class="number">2048</span> -keyout tls<span class="class">.key</span> -out tls<span class="class">.crt</span> -subj <span class="string">"/CN=*.idcsec.com/O=nginxsvc"</span></span><br></pre></td></tr></table></figure></p><p>导入证书文件到k8s secret<br><figure class="hljs highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">create</span> secret tls <span class="keyword">https</span>-secret <span class="comment">--key tls.key --cert tls.crt</span></span><br></pre></td></tr></table></figure></p><p>或者使用yaml<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">apiVersion:</span> v1</span><br><span class="line"><span class="string">kind:</span> Secret</span><br><span class="line"><span class="string">type:</span> kubernetes.io/tls</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> mytlssecret</span><br><span class="line"><span class="string">data:</span></span><br><span class="line">  tls.<span class="string">crt:</span> &lt;base64 encoded cert&gt;</span><br><span class="line">  tls.<span class="string">key:</span> &lt;base64 encoded key&gt;</span><br></pre></td></tr></table></figure></p><p>配置ingress<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: Ingress</span><br><span class="line"><span class="attribute">apiVersion</span>: extensions/v1beta1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: test</span><br><span class="line">  <span class="attribute">annotations</span>:</span><br><span class="line">    ingress.kubernetes.io/<span class="attribute">ssl-redirect</span>: <span class="string">"False"</span>  #设置是否强制跳转 false| true</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">tls</span>:</span><br><span class="line">  - <span class="attribute">hosts</span>: </span><br><span class="line">    - www.idcsec.com</span><br><span class="line">    <span class="attribute">secretName</span>: https-secret</span><br><span class="line">  <span class="attribute">rules</span>:</span><br><span class="line">  - <span class="attribute">host</span>:  www.idcsec.com</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">paths</span>:</span><br><span class="line">      - <span class="attribute">path</span>: /</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: test</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br></pre></td></tr></table></figure></p><p>校验证书信息<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> tls<span class="class">.crt</span>  -noout -text</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/auth/client-certs" target="_blank" rel="external">Client Certificate Authentication</a><br><a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/examples/PREREQUISITES.md#creating-the-ca-authentication-secret" target="_blank" rel="external">TLS证书</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/ingress/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ingress是Kubernetes中的一个概念，用于&lt;/a&gt;
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="ingress-nginx" scheme="http://www.idcsec.com/tags/ingress-nginx/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes ingres-nginx高级配置</title>
    <link href="http://www.idcsec.com/2018/09/29/kubernetes-ingres-nginx%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.idcsec.com/2018/09/29/kubernetes-ingres-nginx高级配置/</id>
    <published>2018-09-29T15:03:00.000Z</published>
    <updated>2018-11-02T06:33:57.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF"><a href="#u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF" class="headerlink" title="通过configmap修改nginx controller的一些全局变量"></a>通过configmap修改nginx controller的一些全局变量</h2><p>通过启动nginx controller的yaml文件，其实我们可以看出来，在启动controller的时候，向启动命令传递了一大堆参数，包括–default-backend-service以及–apiserver-host等。更多的参数，可以直接参考<a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/multiple-ingress.md" target="_blank" rel="external">相关文档</a></p><p>nginx controller本质上就是一个nginx代理，这个代理使用了一大堆nginx默认参数启动。而在某些特定场景下，这些我们需要定制这些参数以更适用于我们的需求。在controller启动的时候，提供了一个–configmap的参数，我们可以将需要定制的参数保存到一个configmap中，并在controller启动的时候，来读取这个configmap，获取其值，应用到controller中。具体哪些值可以通过configmap来传递，可以直接参考<a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md" target="_blank" rel="external">相关文档</a><br><a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md" target="_blank" rel="external">https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md</a></p><h1 id="u4E00_u3001_u4F7F_u7528ConfigMap"><a href="#u4E00_u3001_u4F7F_u7528ConfigMap" class="headerlink" title="一、使用ConfigMap"></a>一、使用ConfigMap</h1><p>确保指定启动Ingress控制器时要使用的configmaps资源。<br>需要注意-</p><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: ConfigMap </span><br><span class="line"><span class="attribute">apiVersion</span>: v1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: nginx-configuration</span><br><span class="line">  <span class="attribute">namespace</span>: ingress-nginx</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">app</span>: ingress-nginx</span><br><span class="line"><span class="attribute">data</span>:</span><br><span class="line">  <span class="attribute">client-header-buffer-size</span>: <span class="string">"4k"</span></span><br><span class="line">  <span class="attribute">proxy-connect-timeout</span>: <span class="string">"40"</span></span><br><span class="line">  <span class="attribute">proxy-read-timeout</span>: <span class="string">"110"</span></span><br><span class="line">  <span class="attribute">proxy-send-timeout</span>: <span class="string">"110"</span></span><br></pre></td></tr></table></figure><p>创建配置资源：<br><figure class="hljs highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> kubectl apply -f nginx-configuration.yaml</span><br><span class="line"> kubectl get cm nginx-configuration -<span class="keyword">n</span> ingress-nginx  -o yaml</span><br><span class="line">[root@k8s-<span class="keyword">m</span> ~]# kubectl  exec -it     nginx-ingress-controller-5f947cc79f-86cvc      -<span class="keyword">n</span> ingress-nginx -- <span class="keyword">cat</span> /etc/nginx/nginx.<span class="keyword">conf</span> | grep    client_header_buffer_size</span><br><span class="line">trueclient_header_buffer_size       4k;</span><br></pre></td></tr></table></figure></p><h3 id="u4FEE_u6539nginx-controller_u7684yml_u6587_u4EF6nginx-ingress-daemonset-yaml_u542F_u52A8_u53C2_u6570_u5982_u4E0B_uFF1A"><a href="#u4FEE_u6539nginx-controller_u7684yml_u6587_u4EF6nginx-ingress-daemonset-yaml_u542F_u52A8_u53C2_u6570_u5982_u4E0B_uFF1A" class="headerlink" title="修改nginx-controller的yml文件nginx-ingress-daemonset.yaml启动参数如下："></a>修改nginx-controller的yml文件nginx-ingress-daemonset.yaml启动参数如下：</h3><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">args:</span></span><br><span class="line"></span>    -<span class="ruby"> /nginx-ingress-controller</span><br><span class="line"></span>    -<span class="ruby"> --default-backend-service=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/default-http-backend</span><br><span class="line"></span>    -<span class="ruby"> --configmap=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/nginx-configuration /<span class="regexp">/例如</span><br><span class="line"></span></span>    -<span class="ruby"><span class="regexp"> --tcp-services-configmap=$(POD_NAMESPACE)/tcp</span>-services</span><br><span class="line"></span>    -<span class="ruby"> --udp-services-configmap=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/udp-services</span><br><span class="line"></span>    -<span class="ruby"> --publish-service=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/ingress-nginx</span><br><span class="line"></span>    -<span class="ruby"> --annotations-prefix=nginx.ingress.kubernetes.io</span></span><br></pre></td></tr></table></figure><ul><li>如需要生效重启nginx-ingress-controller pod *<h1 id="u4E8C_u3001_u4F7F_u7528Annotations"><a href="#u4E8C_u3001_u4F7F_u7528Annotations" class="headerlink" title="二、使用Annotations"></a>二、使用Annotations</h1>如果只想自定义特定Ingress资源的配置，可以使用Annotations。<figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: extensions/v1beta1</span><br><span class="line"><span class="attribute">kind</span>: Ingress</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: cafe-ingress-with-annotations</span><br><span class="line">  <span class="attribute">annotations</span>:</span><br><span class="line">    nginx.org/<span class="attribute">proxy-connect-timeout</span>: <span class="string">"30s"</span></span><br><span class="line">    nginx.org/<span class="attribute">proxy-read-timeout</span>: <span class="string">"20s"</span></span><br><span class="line">    nginx.org/<span class="attribute">client-max-body-size</span>: <span class="string">"4m"</span></span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">rules</span>:</span><br><span class="line">  - <span class="attribute">host</span>: cafe.example.com</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">paths</span>:</span><br><span class="line">      - <span class="attribute">path</span>: /tea</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: tea-svc</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br><span class="line">      - <span class="attribute">path</span>: /coffee</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: coffee-svc</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br></pre></td></tr></table></figure></li></ul><p>Annotations配置优先于ConfigMap<br><a href="https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization" target="_blank" rel="external">https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization</a><br><a href="https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization" target="_blank" rel="external">https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization</a></p><h1 id="u9650_u901F"><a href="#u9650_u901F" class="headerlink" title="限速"></a>限速</h1><p>Annotations<code>ingress.kubernetes.io/limit-connections</code>和<code>ingress.kubernetes.io/limit-rps</code>定义可由单个客户端IP地址打开的连接的限制。这可用于缓解<a href="https://www.nginx.com/blog/mitigating-ddos-attacks-with-nginx-and-nginx-plus" target="_blank" rel="external">DDoS攻击</a>。</p><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/limit-connections：单个IP地址允许的并发连接数。</span><br><span class="line"></span><br><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/limit-rps：每秒可从给定IP接受的连接数。</span><br><span class="line"></span><br><span class="line">如果在单个Ingress规则中指定两个Annotations，`limit-rps`则优先。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF&quot;&gt;&lt;a href=&quot;#u901A_u8FC7configmap_u4FEE_u65
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="ingress-nginx" scheme="http://www.idcsec.com/tags/ingress-nginx/"/>
    
  </entry>
  
  <entry>
    <title>etcdv3 集群基本操作使用</title>
    <link href="http://www.idcsec.com/2018/09/21/etcdv3-%E9%9B%86%E7%BE%A4%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.idcsec.com/2018/09/21/etcdv3-集群基本操作使用/</id>
    <published>2018-09-21T15:40:27.000Z</published>
    <updated>2018-09-21T15:40:59.478Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/coreos/etcd" target="_blank" rel="external">etcd</a>是一个开源的分布式键值对数据库，他的每一个节点都有一份数据的copy，当有节点故障时保证了高可用性。etcd使用<a href="https://raft.github.io/" target="_blank" rel="external">Raft</a>算法来保证一致性。</p><p>etcd的apiv3在使用命令时需要在前面加上ETCDCTL_API=3<br>集群成员<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ETCDCTL_API=<span class="number">3</span> etcdctl member <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>更新一个节点ip<br><figure class="hljs highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">etcdctl <span class="keyword">member</span> list</span><br><span class="line">etcdctl <span class="keyword">member</span> update memberID http:<span class="comment">//ip:2380</span></span><br></pre></td></tr></table></figure></p><p>删除一个节点<br><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">etcdctl member <span class="keyword">list</span>  </span><br><span class="line">etcdctl member <span class="built_in">remove</span> memberID  </span><br><span class="line">etcdctl member <span class="keyword">list</span>  </span><br><span class="line"><span class="keyword">ps</span> -ef|<span class="keyword">grep</span> etcd //在相关节点上kill掉etcd进程</span><br></pre></td></tr></table></figure></p><p>测试增加一个新节点<br>注意：添加已经删除的需要将etcd3的rm -rf /var/lib/etcd/*必须删除<br>移除节点<br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  list -w table</span><br><span class="line">ETCDCTL_API=3  etcdctl --endpoints=https:/</span><span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  remove 7d17ab970f6de141</span></span><br></pre></td></tr></table></figure></p><p>添加节点<br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member add  etcd3 --peer-urls="https:/</span><span class="regexp">/192.168.7.92:2380" /</span><span class="regexp">/查看新增成员列表，etcd3状态为unstarted</span><br><span class="line">rm -rf /var</span><span class="regexp">/lib/etcd</span><span class="regexp">/*  /</span><span class="regexp">/etcd3上面操作</span><br><span class="line">vi  /etc</span><span class="regexp">/systemd/system</span><span class="regexp">/etcd.service  /</span><span class="regexp">//etcd</span>3上面操作 修改--initial-cluster-state=existing 不改报错 streaming request ignored (<span class="constant">ID</span> mismatch got <span class="number">7</span>d17ab970f6de141 want <span class="number">58662</span>caff7c6e081)</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl  restart   etcd  /<span class="regexp">//etcd</span>3上面操作</span><br><span class="line"><span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  list -w table</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/coreos/etcd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;etcd&lt;/a&gt;是一个开源的分布式键值对数据库，他的每一个节点都有一份数据的copy，当有节点故障时保证了高可用性。etcd使用&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kubernetesk kubelet证书到期解决方法</title>
    <link href="http://www.idcsec.com/2018/09/21/kubernetesk-kubelet%E8%AF%81%E4%B9%A6%E5%88%B0%E6%9C%9F%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.idcsec.com/2018/09/21/kubernetesk-kubelet证书到期解决方法/</id>
    <published>2018-09-21T15:31:00.000Z</published>
    <updated>2018-09-21T15:36:40.515Z</updated>
    
    <content type="html"><![CDATA[<p>kubelete 证书默认有效期一年<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -s -L -o <span class="regexp">/bin/</span>cfssl-certinfo <span class="string">https:</span><span class="comment">//pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span></span><br><span class="line">chmod a+x <span class="regexp">/bin/</span>cfssl-certinfo</span><br><span class="line"> cfssl-certinfo -cert <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>kubelet.crt</span><br></pre></td></tr></table></figure></p><p><img src="/img/kubelet1.png" alt="crt"></p><h1 id="u65B9_u6CD5_u4E00"><a href="#u65B9_u6CD5_u4E00" class="headerlink" title="方法一"></a>方法一</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">备份 mkdir  <span class="regexp">~/sslback &amp;&amp; mv /</span>etc<span class="regexp">/kubernetes/</span>kubelet.kubeconfig  <span class="regexp">~/sslback/</span></span><br><span class="line">使用admin证书文件替换</span><br><span class="line">cp <span class="regexp">~/.kube/</span>config <span class="regexp">/etc/</span>kubernetes/kubelet.kubeconfig </span><br><span class="line">systemctl  restart kubelet &amp;&amp; systemctl  status  kubelet</span><br></pre></td></tr></table></figure><h1 id="u65B9_u6CD5_u4E8C_kubelet_u91CD_u65B0_u8BF7_u6C42_u8BC1_u4E66"><a href="#u65B9_u6CD5_u4E8C_kubelet_u91CD_u65B0_u8BF7_u6C42_u8BC1_u4E66" class="headerlink" title="方法二 kubelet重新请求证书"></a>方法二 kubelet重新请求证书</h1><p>手动签发<br>在 kubelet 首次启动后，如果用户 Token 没问题，并且 RBAC 也做了相应的设置，那么此时在集群内应该能看到 kubelet 发起的 CSR 请求 ，必须通过后kubernetes 系统才会将该 Node 加入到集群。<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在证书过期node删除kubelet相关证书文件</span><br><span class="line">rm -rf <span class="regexp">/etc/</span>kubernetes/kubelet.kubeconfig</span><br><span class="line">rm -rf <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>kubelet.*</span><br><span class="line">systemctl  restart kubelet &amp;&amp; systemctl  status  kubelet</span><br><span class="line">自动生成了kubelet kubeconfig 文件和公私钥</span><br><span class="line">查看未授权的CSR请求</span><br><span class="line">kubectl get csr</span><br><span class="line">通过CSR 请求：</span><br><span class="line">kubectl certificate approve csr-<span class="number">404</span>fc</span><br><span class="line">查看重新生成的证书文件</span><br><span class="line">ll <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>kubelet.*</span><br><span class="line">kubectl  get nodes --show-labels</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;kubelete 证书默认有效期一年&lt;br&gt;&lt;figure class=&quot;hljs highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="tls" scheme="http://www.idcsec.com/tags/tls/"/>
    
  </entry>
  
  <entry>
    <title>prometheus alertmanager邮件告警</title>
    <link href="http://www.idcsec.com/2018/09/19/prometheus-alertmanager%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6/"/>
    <id>http://www.idcsec.com/2018/09/19/prometheus-alertmanager邮件告警/</id>
    <published>2018-09-19T06:43:00.000Z</published>
    <updated>2018-10-30T07:50:58.680Z</updated>
    
    <content type="html"><![CDATA[<p>prometheus将监测到的异常事件发送给alertmanager，alertmanager发送异常事件的通知（邮件、webhook等）</p><ul><li>参考<br><a href="https://prometheus.io/docs/alerting/configuration/" target="_blank" rel="external">https://prometheus.io/docs/alerting/configuration/</a><br><a href="https://coreos.com/tectonic/docs/latest/tectonic-prometheus-operator/user-guides/configuring-prometheus-alertmanager.html" target="_blank" rel="external">https://coreos.com/tectonic/docs/latest/tectonic-prometheus-operator/user-guides/configuring-prometheus-alertmanager.html</a><br><a href="https://github.com/coreos/prometheus-operator/blob/master/contrib/kube-prometheus/manifests/prometheus-rules.yaml" target="_blank" rel="external">https://github.com/coreos/prometheus-operator/blob/master/contrib/kube-prometheus/manifests/prometheus-rules.yaml</a><br><a href="https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl" target="_blank" rel="external">https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl</a><br>k8s部署prometheus<br>略<br>k8s部署alertmanager<br>修改Prometheus配置文件我prometheus.yml<figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">global</span>:</span><br><span class="line">  <span class="attribute">scrape_interval</span>:     <span class="number">15s</span></span><br><span class="line">  <span class="attribute">evaluation_interval</span>: <span class="number">15s</span></span><br><span class="line"><span class="attribute">alerting</span>:</span><br><span class="line">  <span class="attribute">alertmanagers</span>:</span><br><span class="line">    - <span class="attribute">static_configs</span>:</span><br><span class="line">        - <span class="attribute">targets</span>: [<span class="string">"alertmanager:9093"</span>]#AlertManager 地址与端口</span><br></pre></td></tr></table></figure></li></ul><h1 id="configMap-yaml_u6587_u4EF6"><a href="#configMap-yaml_u6587_u4EF6" class="headerlink" title="configMap.yaml文件"></a>configMap.yaml文件</h1><p>随便注释一部分具体参数参考官方</p><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: v1</span><br><span class="line"><span class="attribute">kind</span>: ConfigMap</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">    <span class="attribute">name</span>: alertmanager</span><br><span class="line">    <span class="attribute">namespace</span>: monitoring</span><br><span class="line"><span class="attribute">data</span>:</span><br><span class="line">  config.<span class="attribute">yml</span>: |-</span><br><span class="line">    <span class="attribute">global</span>:</span><br><span class="line">      <span class="attribute">smtp_smarthost</span>:  <span class="string">'smtp.idcsec.com:25'</span> # Email SMTP 服务器信息</span><br><span class="line">      <span class="attribute">smtp_from</span>:  <span class="string">'root@idcsec.com'</span></span><br><span class="line">      <span class="attribute">smtp_auth_username</span>:   <span class="string">'root@idcsec.com'</span></span><br><span class="line">      <span class="attribute">smtp_auth_password</span>:  <span class="string">'pwd'</span></span><br><span class="line">      <span class="attribute">resolve_timeout</span>: <span class="number">10</span>m</span><br><span class="line">      <span class="attribute">smtp_require_tls</span>: false          #是否开启 TLS</span><br><span class="line">    <span class="attribute">route</span>:                       # 路由规则配置将不同告警发送给指定人</span><br><span class="line">      <span class="attribute">group_by</span>: [<span class="string">'alertname'</span>]         # 告警压缩规则</span><br><span class="line">      <span class="attribute">repeat_interval</span>: <span class="number">24</span>h</span><br><span class="line">      <span class="attribute">receiver</span>: monitoring       #默认发送到 <span class="built_in">`monitoring`</span>，该 monitoring 必须存在，否则报错退出</span><br><span class="line">       <span class="attribute">routes</span>:               # 子路由告警级别分别发给不同的接收器</span><br><span class="line">       - <span class="attribute">match</span>:</span><br><span class="line">          <span class="attribute">team</span>:dba      #匹配prometheus的rule_files文件中的labels</span><br><span class="line">         <span class="attribute">receiver</span>: db-team-email   receiver接收器名称 全局唯一</span><br><span class="line">         <span class="attribute">continue</span>: true               # 默认告警匹配成功第一个 receivers 会退出匹配，开启 continue 参数后会继续匹配 receivers 列表</span><br><span class="line">         </span><br><span class="line">    <span class="attribute">receivers</span>:                         # 接收器</span><br><span class="line">    - <span class="attribute">name</span>: <span class="string">'monitoring'</span></span><br><span class="line">      <span class="attribute">email_configs</span>:</span><br><span class="line">      - <span class="attribute">send_resolved</span>: true  #告警恢复后否发送通知，这里选择发送</span><br><span class="line">       <span class="attribute">to</span>: <span class="string">'test@idcsec.com'</span> #接收邮件<span class="string">'A@.com,B@com'</span></span><br><span class="line">    - <span class="attribute">name</span>: <span class="string">'db-team-email'</span></span><br><span class="line">      <span class="attribute">email_configs</span>:</span><br><span class="line">      - <span class="attribute">send_resolved</span>: true</span><br><span class="line">       <span class="attribute">to</span>:<span class="string">'xxx@xxx.com'</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="alertmanager-yaml_u6587_u4EF6"><a href="#alertmanager-yaml_u6587_u4EF6" class="headerlink" title="alertmanager.yaml文件"></a>alertmanager.yaml文件</h1><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    deployment.kubernetes.io/revision: <span class="string">"3"</span></span><br><span class="line">  creationTimestamp: <span class="number">2018</span>-<span class="number">07</span>-<span class="number">31</span>T13:<span class="number">08</span>:<span class="number">06</span>Z</span><br><span class="line">  generation: <span class="number">3</span></span><br><span class="line">  labels:</span><br><span class="line">    app: alertmanager</span><br><span class="line">  name: alertmanager</span><br><span class="line">  <span class="keyword">namespace</span>: monitoring</span><br><span class="line">  resourceVersion: <span class="string">"43603292"</span></span><br><span class="line">  selfLink: /apis/extensions/v1beta1/namespaces/monitoring/deployments/alertmanager</span><br><span class="line">  uid: c3c75e6c-<span class="number">94</span>c2-<span class="number">11e8</span>-b5ba-<span class="number">1866</span>daeddaa4</span><br><span class="line">spec:</span><br><span class="line">  replicas: <span class="number">1</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: alertmanager</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: <span class="number">1</span></span><br><span class="line">      maxUnavailable: <span class="number">1</span></span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  <span class="keyword">template</span>:</span><br><span class="line">    metadata:</span><br><span class="line">      creationTimestamp: null</span><br><span class="line">      labels:</span><br><span class="line">        app: alertmanager</span><br><span class="line">      name: alertmanager</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - -config.file=/etc/alertmanager/config.yml</span><br><span class="line">        - -storage.path=/alertmanager</span><br><span class="line">        image: alertmanager:v0<span class="number">.7</span><span class="number">.1</span></span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: alertmanager</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: <span class="number">9093</span></span><br><span class="line">          name: alertmanager</span><br><span class="line">          protocol: TCP</span><br><span class="line">        resources: &#123;&#125;</span><br><span class="line">        terminationMessagePath: /dev/termination-<span class="built_in">log</span></span><br><span class="line">        terminationMessagePolicy: File</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /etc/alertmanager</span><br><span class="line">          name: config-volume</span><br><span class="line">        - mountPath: /etc/alertmanager-templates</span><br><span class="line">          name: templates-volume</span><br><span class="line">        - mountPath: /alertmanager</span><br><span class="line">          name: alertmanager</span><br><span class="line">      dnsPolicy: ClusterFirst</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      schedulerName: <span class="keyword">default</span>-scheduler</span><br><span class="line">      securityContext: &#123;&#125;</span><br><span class="line">      terminationGracePeriodSeconds: <span class="number">30</span></span><br><span class="line">      volumes:</span><br><span class="line">      - configMap:</span><br><span class="line">          defaultMode: <span class="number">420</span></span><br><span class="line">          name: alertmanager</span><br><span class="line">        name: config-volume</span><br><span class="line">      - configMap:</span><br><span class="line">          defaultMode: <span class="number">420</span></span><br><span class="line">          name: alertmanager-templates</span><br><span class="line">        name: templates-volume</span><br><span class="line">      - emptyDir: &#123;&#125;</span><br><span class="line">        name: alertmanager</span><br><span class="line">status:</span><br><span class="line">  availableReplicas: <span class="number">1</span></span><br><span class="line">  conditions:</span><br><span class="line">  - lastTransitionTime: <span class="number">2018</span>-<span class="number">07</span>-<span class="number">31</span>T13:<span class="number">08</span>:<span class="number">06</span>Z</span><br><span class="line">    lastUpdateTime: <span class="number">2018</span>-<span class="number">07</span>-<span class="number">31</span>T13:<span class="number">08</span>:<span class="number">06</span>Z</span><br><span class="line">    message: Deployment has minimum availability.</span><br><span class="line">    reason: MinimumReplicasAvailable</span><br><span class="line">    status: <span class="string">"True"</span></span><br><span class="line">    type: Available</span><br><span class="line">  observedGeneration: <span class="number">3</span></span><br><span class="line">  readyReplicas: <span class="number">1</span></span><br><span class="line">  replicas: <span class="number">1</span></span><br><span class="line">  updatedReplicas: <span class="number">1</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>部署Prometheus alertmanager相关配置文件<br>在prometheus.yml中指定规则文件（可使用通配符，如rules/*.rules）这使用 rules.yaml</p><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> v1</span><br><span class="line"><span class="symbol">kind:</span> <span class="constant">ConfigMap</span></span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line">  <span class="symbol">name:</span> prometheus-config</span><br><span class="line">  <span class="symbol">labels:</span></span><br><span class="line">    <span class="symbol">name:</span>  prometheus-config</span><br><span class="line">  <span class="symbol">namespace:</span> monitoring</span><br><span class="line"><span class="symbol">data:</span></span><br><span class="line">  prometheus.<span class="symbol">yml:</span> |</span><br><span class="line">    <span class="symbol">global:</span></span><br><span class="line">      <span class="symbol">scrape_interval:</span>     <span class="number">15</span>s</span><br><span class="line">      <span class="symbol">evaluation_interval:</span> <span class="number">15</span>s</span><br><span class="line">    <span class="symbol">alerting:</span></span><br><span class="line">      <span class="symbol">alertmanagers:</span></span><br><span class="line">        - <span class="symbol">static_configs:</span></span><br><span class="line">            - <span class="symbol">targets:</span> [<span class="string">"alertmanager:9093"</span>] <span class="comment"># AlertManager 地址与端口</span></span><br><span class="line">    <span class="symbol">rule_files:</span></span><br><span class="line">     - <span class="string">"rules.yml"</span></span><br><span class="line">    <span class="symbol">scrape_configs:</span></span><br><span class="line">    ..........</span><br><span class="line">  </span><br><span class="line">rules.<span class="symbol">yml:</span> |-</span><br><span class="line">    <span class="symbol">groups:</span></span><br><span class="line">    - <span class="symbol">name:</span> noah_pod.rules</span><br><span class="line">      <span class="symbol">rules:</span></span><br><span class="line">      - <span class="symbol">alert:</span> <span class="constant">Pod_all_cpu_usage</span></span><br><span class="line">        <span class="symbol">expr:</span> (sum by(name)(rate(container_cpu_usage_seconds_total&#123;image!=<span class="string">""</span>&#125;[<span class="number">5</span>m]))*<span class="number">100</span>) &gt; <span class="number">10</span></span><br><span class="line">        <span class="symbol">for:</span> <span class="number">5</span>m</span><br><span class="line">        <span class="symbol">labels:</span></span><br><span class="line">          <span class="symbol">severity:</span> critical</span><br><span class="line">          <span class="symbol">service:</span> pods</span><br><span class="line">        <span class="symbol">annotations:</span></span><br><span class="line">          <span class="symbol">description:</span> 容器 <span class="expansion">&#123;&#123; <span class="variable">$labels</span>.name &#125;&#125;</span> <span class="constant">CPU</span> 资源利用率大于 <span class="number">75</span>% , (current value is <span class="expansion">&#123;&#123; <span class="variable">$value</span> &#125;&#125;</span>)</span><br><span class="line">          <span class="symbol">summary:</span> <span class="constant">Dev</span> <span class="constant">CPU</span> 负载告警</span><br><span class="line">      - <span class="symbol">alert:</span> <span class="constant">Pod_all_memory_usage</span></span><br><span class="line">        <span class="symbol">expr:</span> sort_desc(avg by(name)(irate(container_memory_usage_bytes&#123;name!=<span class="string">""</span>&#125;[<span class="number">5</span>m]))*<span class="number">100</span>) &gt; <span class="number">1024</span>*<span class="number">10</span>^<span class="number">3</span>*<span class="number">2</span></span><br><span class="line">        <span class="symbol">for:</span> <span class="number">10</span>m</span><br><span class="line">        <span class="symbol">labels:</span></span><br><span class="line">          <span class="symbol">severity:</span> critical</span><br><span class="line">        <span class="symbol">annotations:</span></span><br><span class="line">          <span class="symbol">description:</span> 容器 <span class="expansion">&#123;&#123; <span class="variable">$labels</span>.name &#125;&#125;</span> <span class="constant">Memory</span> 资源利用率大于 <span class="number">2</span>G , (current value is <span class="expansion">&#123;&#123; <span class="variable">$value</span> &#125;&#125;</span>)</span><br><span class="line">          <span class="symbol">summary:</span> <span class="constant">Dev</span> <span class="constant">Memory</span> 负载告警</span><br><span class="line">      - <span class="symbol">alert:</span> <span class="constant">Pod_all_network_receive_usage</span></span><br><span class="line">        <span class="symbol">expr:</span> sum by (name)(irate(container_network_receive_bytes_total&#123;container_name=<span class="string">"POD"</span>&#125;[<span class="number">1</span>m])) &gt; <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">50</span></span><br><span class="line">        <span class="symbol">for:</span> <span class="number">10</span>m</span><br><span class="line">        <span class="symbol">labels:</span></span><br><span class="line">          <span class="symbol">severity:</span> critical</span><br><span class="line">        <span class="symbol">annotations:</span></span><br><span class="line">          <span class="symbol">description:</span> 容器 <span class="expansion">&#123;&#123; <span class="variable">$labels</span>.name &#125;&#125;</span> network_receive 资源利用率大于 <span class="number">50</span>M , (current value is <span class="expansion">&#123;&#123; <span class="variable">$value</span> &#125;&#125;</span>)</span><br><span class="line">          <span class="symbol">summary:</span> network_receive 负载告警</span><br><span class="line">    - <span class="symbol">name:</span> <span class="constant">Oracle</span>.rules</span><br><span class="line">      <span class="symbol">rules:</span></span><br><span class="line">      - <span class="symbol">alert:</span> <span class="constant">Oracledb</span>-status</span><br><span class="line">        <span class="symbol">expr:</span> oracledb_up&#123;job=<span class="string">"oracle-198"</span>&#125;  == <span class="number">0</span></span><br><span class="line">        <span class="symbol">for:</span> <span class="number">60</span>s</span><br><span class="line">        <span class="symbol">labels:</span></span><br><span class="line">          <span class="symbol">severity:</span> critica</span><br><span class="line">          <span class="symbol">team:</span>dba</span><br><span class="line">        <span class="symbol">annotations:</span></span><br><span class="line">          <span class="symbol">summary:</span> 数据库 <span class="expansion">&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;</span> 告警</span><br><span class="line">          <span class="symbol">description:</span> <span class="string">"数据库 &#123;&#123; $labels.instance &#125;&#125; 异常 (当前值: &#123;&#123; $value &#125;&#125;"</span></span><br></pre></td></tr></table></figure><p>更新prometheus的配置需要让重新读取，有两种方法：<br>1、通过HTTP API向/-/reload发送POST请求，例：curl -X POST <a href="http://ip:9090/-/reload" target="_blank" rel="external">http://ip:9090/-/reload</a><br>2、向prometheus进程发送SIGHUP信号<br><img src="/img/p1.png" alt="crt"><br><img src="/img/p2.png" alt="crt"><br><img src="/img/p3.png" alt="crt"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;prometheus将监测到的异常事件发送给alertmanager，alertmanager发送异常事件的通知（邮件、webhook等）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考&lt;br&gt;&lt;a href=&quot;https://prometheus.io/docs/alerting/configuration/&quot;&gt;https://prometheus.io/docs/alerting/configuration/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://coreos.com/tectonic/docs/latest/tectonic-prometheus-operator/user-guides/configuring-prometheus-alertmanager.html&quot;&gt;https://coreos.com/tectonic/docs/latest/tectonic-prometheus-operator/user-guides/configuring-prometheus-alertmanager.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/coreos/prometheus-operator/blob/master/contrib/kube-prometheus/manifests/prometheus-rules.yaml&quot;&gt;https://github.com/coreos/prometheus-operator/blob/master/contrib/kube-prometheus/manifests/prometheus-rules.yaml&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl&quot;&gt;https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl&lt;/a&gt;&lt;br&gt;k8s部署prometheus&lt;br&gt;略&lt;br&gt;k8s部署alertmanager&lt;br&gt;修改Prometheus配置文件我prometheus.yml&lt;figure class=&quot;hljs highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;global&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;scrape_interval&lt;/span&gt;:     &lt;span class=&quot;number&quot;&gt;15s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;evaluation_interval&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;15s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;alerting&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;alertmanagers&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - &lt;span class=&quot;attribute&quot;&gt;static_configs&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &lt;span class=&quot;attribute&quot;&gt;targets&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;alertmanager:9093&quot;&lt;/span&gt;]#AlertManager 地址与端口&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;configMap-yaml_u6587_u4EF6&quot;&gt;&lt;a href=&quot;#configMap-yaml_u6587_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;configMap.yaml文件&quot;&gt;&lt;/a&gt;configMap.yaml文件&lt;/h1&gt;&lt;p&gt;随便注释一部分具体参数参考官方&lt;/p&gt;
&lt;figure class=&quot;hljs highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;apiVersion&lt;/span&gt;: v1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;kind&lt;/span&gt;: ConfigMap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;metadata&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: alertmanager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;namespace&lt;/span&gt;: monitoring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.&lt;span class=&quot;attribute&quot;&gt;yml&lt;/span&gt;: |-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;global&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;smtp_smarthost&lt;/span&gt;:  &lt;span class=&quot;string&quot;&gt;&#39;smtp.idcsec.com:25&#39;&lt;/span&gt; # Email SMTP 服务器信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;smtp_from&lt;/span&gt;:  &lt;span class=&quot;string&quot;&gt;&#39;root@idcsec.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;smtp_auth_username&lt;/span&gt;:   &lt;span class=&quot;string&quot;&gt;&#39;root@idcsec.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;smtp_auth_password&lt;/span&gt;:  &lt;span class=&quot;string&quot;&gt;&#39;pwd&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;resolve_timeout&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;smtp_require_tls&lt;/span&gt;: false          #是否开启 TLS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;route&lt;/span&gt;:                       # 路由规则配置将不同告警发送给指定人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;group_by&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;alertname&#39;&lt;/span&gt;]         # 告警压缩规则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;repeat_interval&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;receiver&lt;/span&gt;: monitoring       #默认发送到 &lt;span class=&quot;built_in&quot;&gt;`monitoring`&lt;/span&gt;，该 monitoring 必须存在，否则报错退出&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;routes&lt;/span&gt;:               # 子路由告警级别分别发给不同的接收器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       - &lt;span class=&quot;attribute&quot;&gt;match&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;attribute&quot;&gt;team&lt;/span&gt;:dba      #匹配prometheus的rule_files文件中的labels&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;receiver&lt;/span&gt;: db-team-email   receiver接收器名称 全局唯一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;continue&lt;/span&gt;: true               # 默认告警匹配成功第一个 receivers 会退出匹配，开启 continue 参数后会继续匹配 receivers 列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;receivers&lt;/span&gt;:                         # 接收器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;monitoring&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;email_configs&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - &lt;span class=&quot;attribute&quot;&gt;send_resolved&lt;/span&gt;: true  #告警恢复后否发送通知，这里选择发送&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;to&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;test@idcsec.com&#39;&lt;/span&gt; #接收邮件&lt;span class=&quot;string&quot;&gt;&#39;A@.com,B@com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;db-team-email&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attribute&quot;&gt;email_configs&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      - &lt;span class=&quot;attribute&quot;&gt;send_resolved&lt;/span&gt;: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;attribute&quot;&gt;to&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;xxx@xxx.com&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="alertmanager" scheme="http://www.idcsec.com/tags/alertmanager/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>解决ingress-nginx反向代理在监听非80端口时候跳转问题以及Nginx</title>
    <link href="http://www.idcsec.com/2018/09/16/%E8%A7%A3%E5%86%B3ingress-nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%9C%A8%E7%9B%91%E5%90%AC%E9%9D%9E80%E7%AB%AF%E5%8F%A3%E6%97%B6%E5%80%99%E8%B7%B3%E8%BD%AC%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8ANginx/"/>
    <id>http://www.idcsec.com/2018/09/16/解决ingress-nginx反向代理在监听非80端口时候跳转问题以及Nginx/</id>
    <published>2018-09-16T14:05:00.000Z</published>
    <updated>2018-09-16T15:00:45.783Z</updated>
    
    <content type="html"><![CDATA[<ul><li>解决方法比较多主要根据自己的环境找到合适的解决方式，ingress-nginx默认监听443,80，这里的环境主要是因为路由器映射到非80端口导致跳转的Heather的Request丢失端口跳转到了默认的80<br>参考<br><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect" target="_blank" rel="external">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect</a><br><a href="https://www.nginx.com/resources/wiki/start/topics/examples/fullexample2/" target="_blank" rel="external">https://www.nginx.com/resources/wiki/start/topics/examples/fullexample2/</a><br><a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#proxy-redirect" target="_blank" rel="external">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#proxy-redirect</a><h1 id="nginx_u914D_u7F6E"><a href="#nginx_u914D_u7F6E" class="headerlink" title="nginx配置"></a>nginx配置</h1><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">  upstream tomcat &#123;</span><br><span class="line">    server <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">9090</span> weight=<span class="number">1</span> max_fails=<span class="number">3</span> fail_timeout=<span class="number">30</span>s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name example.com *.example.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_next_upstream http_502 http_504 error timeout invalid_header;</span><br><span class="line"></span><br><span class="line">      proxy_set_header Host  <span class="variable">$host</span>:<span class="variable">$server</span>_port;</span><br><span class="line">      proxy_set_header X-Real-IP <span class="variable">$remote</span>_addr;</span><br><span class="line">      proxy_set_header X-Forwarded-For <span class="variable">$proxy</span>_add_x_forwarded_for;</span><br><span class="line">      proxy_redirect http://<span class="variable">$host</span> http://<span class="variable">$host</span>:<span class="variable">$server</span>_port;//由于是路由器上面配置映射非<span class="number">80</span>端口到<span class="number">80</span>端口这里就不能使用<span class="variable">$server</span>_port需要直接写端口号</span><br><span class="line">      proxy_redirect off;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="ingress-nginx_u914D_u7F6E"><a href="#ingress-nginx_u914D_u7F6E" class="headerlink" title="ingress-nginx配置"></a>ingress-nginx配置</h1><p>默认ingress-nginx 代理重定向是OFF<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-master ~]<span class="preprocessor"># kubectl exec -it nginx-ingress-controller-<span class="number">1971110253</span>-<span class="number">0</span>rcjw  -n kube-system -- cat /etc/nginx/nginx.conf   | grep <span class="string">"proxy_redirect"</span> | head -n <span class="number">1</span></span></span><br><span class="line">            proxy_redirect                          off;</span><br></pre></td></tr></table></figure></p><h1 id="ingress_u4EE3_u7406_u91CD_u5B9A_u5411_u914D_u7F6E"><a href="#ingress_u4EE3_u7406_u91CD_u5B9A_u5411_u914D_u7F6E" class="headerlink" title="ingress代理重定向配置"></a>ingress代理重定向配置</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kind:</span> Ingress</span><br><span class="line"><span class="string">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> $&#123;projectSvc&#125;</span><br><span class="line"><span class="label">  annotations:</span></span><br><span class="line">    nginx.ingress.kubernetes.io/proxy-redirect-<span class="string">from:</span> <span class="string">"test.cn:9090"</span></span><br><span class="line">    nginx.ingress.kubernetes.io/proxy-redirect-<span class="string">to:</span> <span class="string">"test.cn:9090"</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  rules:</span></span><br><span class="line">  - <span class="string">host:</span>  $&#123;projectUrl&#125;</span><br><span class="line"><span class="label">    http:</span></span><br><span class="line"><span class="label">      paths:</span></span><br><span class="line">      - <span class="string">path:</span> /</span><br><span class="line"><span class="label">        backend:</span></span><br><span class="line"><span class="label">          serviceName:</span> $&#123;projectSvc&#125;</span><br><span class="line"><span class="label">          servicePort:</span> <span class="number">80</span></span><br><span class="line">  - <span class="string">host:</span> $&#123;projectUrl<span class="regexp">/test.loca/</span>test.cn&#125;</span><br><span class="line"><span class="label">    http:</span> </span><br><span class="line"><span class="label">      paths:</span> </span><br><span class="line">      - <span class="string">path:</span> /</span><br><span class="line"><span class="label">        backend:</span></span><br><span class="line"><span class="label">          serviceName:</span> $&#123;projectSvc&#125;</span><br><span class="line"><span class="label">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>重点</li></ul><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/proxy-redirect-from: <span class="string">"idcsec.com"</span></span><br><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/proxy-redirect-to: <span class="string">"idcsec.com"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;解决方法比较多主要根据自己的环境找到合适的解决方式，ingress-nginx默认监听443,80，这里的环境主要是因为路由器映射到非80端口导致跳转的Heather的Request丢失端口跳转到了默认的80&lt;br&gt;参考&lt;br&gt;&lt;a href=&quot;http://n
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="ingress-nginx" scheme="http://www.idcsec.com/tags/ingress-nginx/"/>
    
      <category term="nginx" scheme="http://www.idcsec.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>HARBOR仓库安装部署</title>
    <link href="http://www.idcsec.com/2018/09/14/HARBOR%E4%BB%93%E5%BA%93%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.idcsec.com/2018/09/14/HARBOR仓库安装部署/</id>
    <published>2018-09-14T11:45:00.000Z</published>
    <updated>2018-11-29T12:46:22.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Harbor__u4ECB_u7ECD"><a href="#Harbor__u4ECB_u7ECD" class="headerlink" title="<strong> Harbor 介绍</strong>"></a><strong> Harbor 介绍</strong></h1><p>Harbor 是 Vmwar 公司开源的 企业级的 Docker Registry 管理项目<br>它主要 提供 Dcoker Registry 管理UI，可基于角色访问控制, AD/LDAP 集成，日志审核等功能，完全的支持中文。<br>Harbor 的所有组件都在 Dcoker 中部署，所以 Harbor 可使用 Docker Compose 快速部署。<br>安装方式:<br>-在线安装程序：安装程序从Docker hub下载Harbor的图像。因此，安装程序的尺寸非常小。</p><p>-脱机安装程序：当主机没有Internet连接时使用此安装程序。安装程序包含预先构建的图像，因此其大小更大。</p><h2 id="harbor__u90E8_u7F72"><a href="#harbor__u90E8_u7F72" class="headerlink" title="harbor 部署"></a>harbor 部署</h2><p>开源项目地址：<a href="https://github.com/vmware/harbor" target="_blank" rel="external">https://github.com/vmware/harbor</a><br>官方安装说明：<a href="https://github.com/vmware/harbor/blob/master/docs/installation_guide.md" target="_blank" rel="external">https://github.com/vmware/harbor/blob/master/docs/installation_guide.md</a></p><h1 id="Docker_u5B89_u88C5"><a href="#Docker_u5B89_u88C5" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="u5378_u8F7D_u8001docker_u7248_u672C"><a href="#u5378_u8F7D_u8001docker_u7248_u672C" class="headerlink" title="卸载老docker版本"></a>卸载老docker版本</h2><figure class="hljs highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker <span class="string">\</span></span><br><span class="line">                  docker-client <span class="string">\</span></span><br><span class="line">                  docker-client-latest <span class="string">\</span></span><br><span class="line">                  docker-common <span class="string">\</span></span><br><span class="line">                  docker-latest <span class="string">\</span></span><br><span class="line">                  docker-latest-logrotate <span class="string">\</span></span><br><span class="line">                  docker-logrotate <span class="string">\</span></span><br><span class="line">                  docker-selinux <span class="string">\</span></span><br><span class="line">                  docker-engine-selinux <span class="string">\</span></span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h3 id="u5B89_u88C5_docker_repository"><a href="#u5B89_u88C5_docker_repository" class="headerlink" title="安装 docker repository"></a>安装 docker repository</h3><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -<span class="keyword">y</span> yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line">$ sudo yum-config-manager \</span><br><span class="line">    --<span class="built_in">add</span>-repo \</span><br><span class="line">    http<span class="variable">s:</span>//download.docker.<span class="keyword">com</span>/linux/centos/docker-<span class="keyword">ce</span>.repo</span><br><span class="line">$ yum <span class="keyword">list</span> docker-<span class="keyword">ce</span> --showduplicates | <span class="built_in">sort</span> -<span class="keyword">r</span></span><br><span class="line">$ sudo yum install docker-<span class="keyword">ce</span> -<span class="keyword">y</span></span><br><span class="line">$ systemctl   start docker</span><br></pre></td></tr></table></figure><p>安装docker-compose<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Pro harbor-<span class="number">1.5</span><span class="number">.3</span>]<span class="preprocessor"># yum install python2-pip -y &amp;&amp; yum install docker-compose -y</span></span><br></pre></td></tr></table></figure></p><h4 id="u4FEE_u6539docker_u52A0_u901F"><a href="#u4FEE_u6539docker_u52A0_u901F" class="headerlink" title="修改docker加速"></a>修改docker加速</h4><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [ <span class="string">"https://registry.docker-cn.com"</span>,], </span><br><span class="line">  <span class="string">"max-concurrent-downloads"</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-level"</span>: <span class="string">"warn"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"10m"</span>,</span><br><span class="line">    <span class="string">"max-file"</span>: <span class="string">"3"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="u90E8_u7F72harbor"><a href="#u90E8_u7F72harbor" class="headerlink" title="部署harbor"></a>部署harbor</h1><h2 id="u4E0B_u8F7D_u5B89_u88C5_u5305_u5E76_u89E3_u538B_uFF1A"><a href="#u4E0B_u8F7D_u5B89_u88C5_u5305_u5E76_u89E3_u538B_uFF1A" class="headerlink" title="下载安装包并解压："></a>下载安装包并解压：</h2><figure class="hljs highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@Pro</span> ~]<span class="preprocessor"># wget https://storage.googleapis.com/harbor-releases/release-1.6.0/harbor-online-installer-v1.6.0.tgz</span></span><br><span class="line">[root<span class="constant">@Pro</span> ~]<span class="preprocessor"># tar -zxvf harbor-online-installer-v1.6.0.tgz</span></span><br><span class="line">[root<span class="constant">@Pro</span> ~]<span class="preprocessor"># vi harbor/harbor.cfg</span></span><br></pre></td></tr></table></figure><h3 id="u4FEE_u6539harbor_u914D_u7F6E"><a href="#u4FEE_u6539harbor_u914D_u7F6E" class="headerlink" title="修改harbor配置"></a>修改harbor配置</h3><figure class="hljs highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[root@Pro ~]</span><span class="comment"># vi harbor/harbor.cfg </span></span><br><span class="line"><span class="comment"># hostname 设置访问地址，支持IP，域名，主机名，禁止设置127.0.0.1</span></span><br><span class="line"><span class="setting">hostname =<span class="value">harbor.idcsec.com</span></span></span><br><span class="line"><span class="comment"># 访问协议，可设置 http,https</span></span><br><span class="line"><span class="setting">ui_url_protocol = <span class="value">http</span></span></span><br><span class="line"><span class="comment"># harbor WEB UI登陆使用的密码</span></span><br><span class="line"><span class="setting">harbor_admin_password = <span class="value">Harbor12345</span></span></span><br><span class="line"><span class="comment"># 认证方式，这里支持多种认证方式，默认是 db_auth ，mysql数据库存储认证。</span></span><br><span class="line"><span class="comment"># 支持 ldap 以及 本地文件存储方式。</span></span><br><span class="line"><span class="setting">auth_mode = <span class="value">db_auth</span></span></span><br><span class="line"><span class="comment"># mysql root 账户的 密码</span></span><br><span class="line"><span class="setting">db_password = <span class="value">root123</span></span></span><br><span class="line"><span class="setting">self_registration= <span class="value"><span class="keyword">on</span></span></span></span><br><span class="line"><span class="setting">use_compressed_js= <span class="value"><span class="keyword">on</span></span></span></span><br><span class="line"><span class="setting">max_job_workers= <span class="value"><span class="number">10</span></span></span></span><br><span class="line"><span class="setting">verify_remote_cert= <span class="value"><span class="keyword">on</span></span></span></span><br><span class="line"><span class="setting">customize_crt= <span class="value"><span class="keyword">on</span></span></span></span><br><span class="line"><span class="comment">#其他的参数可以保持默认</span></span><br></pre></td></tr></table></figure><p><strong> 配置存储后端（可选）</strong><br>默认情况下，Harbor将图像存储在本地文件系统中。在生产环境中，您可以考虑使用其他存储后端而不是本地文件系统，如S3，OpenStack Swift，Ceph等。您需要更新的是storage文件中的部分common/templates/registry/config.yml</p><h4 id="u5B89_u88C5harbor"><a href="#u5B89_u88C5harbor" class="headerlink" title="安装harbor"></a>安装harbor</h4><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Pro ~]<span class="preprocessor"># ./harbor/install.sh </span></span><br><span class="line">[root@Pro harbor]<span class="preprocessor"># docker-compose ps</span></span><br><span class="line">       Name                     Command               State                                Ports                              </span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">harbor-adminserver   /harbor/start.sh                 Up                                                                      </span><br><span class="line">harbor-db            /entrypoint.sh postgres          Up      <span class="number">5432</span>/tcp                                                        </span><br><span class="line">harbor-jobservice    /harbor/start.sh                 Up                                                                      </span><br><span class="line">harbor-<span class="built_in">log</span>           /bin/sh -c /usr/local/bin/ ...   Up      <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">1514</span>-&gt;<span class="number">10514</span>/tcp                                       </span><br><span class="line">harbor-ui            /harbor/start.sh                 Up                                                                      </span><br><span class="line">nginx                nginx -g daemon off;             Up      <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">443</span>-&gt;<span class="number">443</span>/tcp, <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">4443</span>-&gt;<span class="number">4443</span>/tcp, <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span>-&gt;<span class="number">80</span>/tcp</span><br><span class="line">redis                docker-entrypoint.sh redis ...   Up      <span class="number">6379</span>/tcp                                                        </span><br><span class="line">registry             /entrypoint.sh /etc/regist ...   Up      <span class="number">5000</span>/tcp</span><br></pre></td></tr></table></figure><h5 id="u767B_u5F55_u4ED3_u5E93"><a href="#u767B_u5F55_u4ED3_u5E93" class="headerlink" title="登录仓库"></a>登录仓库</h5><figure class="hljs highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="property">@Pro</span> harbor]<span class="comment"># docker login  http://harbor.idcsec.com</span></span><br><span class="line"><span class="attribute">Username</span>: admin</span><br><span class="line"><span class="attribute">Password</span>: </span><br><span class="line">Error response <span class="keyword">from</span> <span class="attribute">daemon</span>: Get <span class="attribute">https</span>:<span class="pi">//harbor.idcsec.com/v2/: dial tcp 47.94.253.198:443: connect: connection refused</span><br><span class="line">//</span>配置的是http，docker login默认走的是https.</span><br><span class="line">[root<span class="property">@Pro</span> ~]<span class="comment"># cat /etc/docker/daemon.json </span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://registry.docker-cn.com"</span>, <span class="string">"https://docker.mirrors.ustc.edu.cn"</span>], </span><br><span class="line"> <span class="string">"insecure-registries"</span>:[<span class="string">"harbor.idcsec.com"</span>],</span><br><span class="line">  <span class="string">"max-concurrent-downloads"</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-level"</span>: <span class="string">"warn"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"10m"</span>,</span><br><span class="line">    <span class="string">"max-file"</span>: <span class="string">"3"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root<span class="property">@Pro</span> harbor]<span class="comment"># systemctl daemon-reload &amp;&amp; systemctl restart docker</span></span><br></pre></td></tr></table></figure><h1 id="u6D4B_u8BD5push_u955C_u50CF_u5230harbor"><a href="#u6D4B_u8BD5push_u955C_u50CF_u5230harbor" class="headerlink" title="测试push镜像到harbor"></a>测试push镜像到harbor</h1><figure class="hljs highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Pro harbor]<span class="preprocessor"># docker login harbor.idcsec.com</span></span><br><span class="line"><span class="label">Username:</span> admin</span><br><span class="line"><span class="label">Password:</span> </span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line"><span class="label">https:</span>//docs.docker.com/engine/reference/commandline/login/<span class="preprocessor">#credentials-store</span></span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br><span class="line">[root@Pro harbor]<span class="preprocessor"># docker pull busybox</span></span><br><span class="line">Using default tag: latest</span><br><span class="line"><span class="label">latest:</span> Pulling from library/busybox</span><br><span class="line"><span class="number">8</span>c5a7da1afbc: Pull complete </span><br><span class="line"><span class="label">Digest:</span> sha256:cb63aa0641a885f54de20f61d152187419e8f6b159ed11a251a09d115fdff9bd</span><br><span class="line"><span class="label">Status:</span> Downloaded newer image for busybox:latest</span><br><span class="line">[root@Pro harbor]<span class="preprocessor"># docker tag  busybox:latest harbor.idcsec.com/pro/busybox:latest</span></span><br><span class="line">[root@Pro harbor]<span class="preprocessor"># docker push   harbor.idcsec.com/pro/busybox:latest</span></span><br><span class="line">The <span class="keyword">push</span> refers to repository [harbor.idcsec.com/pro/busybox]</span><br><span class="line"><span class="label">f9d9e4e6e2f0:</span> Pushed </span><br><span class="line"><span class="label">latest:</span> digest: sha256:<span class="number">5e8</span>e0509e829bb8f990249135a36e81a3ecbe94294e7a185cc14616e5fad96bd size: <span class="number">527</span></span><br></pre></td></tr></table></figure><p><img src="/img/harbor1.png" alt="crt"></p><h1 id="u914D_u7F6E_u5B58_u50A8"><a href="#u914D_u7F6E_u5B58_u50A8" class="headerlink" title="配置存储"></a>配置存储</h1><p>默认情况下，harbor把镜像存储在本地文件系统，在生产环境中，你可能考虑用其他的存储替代本地存储，比如S3, Openstack Swift, Ceph等等。你需要修改 common/templates/registry/config.yml 中的 storage 段。默认情况下，registrys数据被持久化在宿主机的/data/目录下可以修改docker-compose.yml /data/registry:/storage:z。甚至你删除harbor容器或者重新被创建，这部分数据也不会改变。</p><h1 id="u6E05_u7406_u955C_u50CF_u7A7A_u95F4"><a href="#u6E05_u7406_u955C_u50CF_u7A7A_u95F4" class="headerlink" title="清理镜像空间"></a>清理镜像空间</h1><p>首先去ui界面删除不要需要的镜像，这个时候这个镜像并不会从磁盘上面清除还需要通过GC来删除。<br>要启用垃圾回收（GC），首先要关闭Harbor服务，然后再执行清理命令<br>在harbor宿主机上执行如下的命令：<br>使用–dry-run参数运行容器，查看到将要删除的镜像，不删除任何数据<br>也是直接使用docker-compose.yml里面的镜像goharbor/registry-photon:v2.6.2-v1.6.2<br><figure class="hljs highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du -sh <span class="regexp">/data/</span>registry<span class="regexp">/docker/</span>registry<span class="regexp">/v2/</span></span><br><span class="line">docker-compose stop</span><br><span class="line">docker run -it --name gc --rm --volumes-<span class="keyword">from</span> registry vmware<span class="regexp">/registry:2.6.1-photon garbage-collect --dry-run /</span>etc<span class="regexp">/registry/</span>config.yml</span><br></pre></td></tr></table></figure></p><p>不使用–dry-run参数，将删除相关镜像<br><figure class="hljs highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="command">run</span> -<span class="keyword">it</span> <span class="comment">--name gc --rm --volumes-from registry vmware/registry:2.6.1-photon garbage-collect  /etc/registry/config.ym</span></span><br><span class="line">docker-compose start</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/goharbor/harbor/blob/master/docs/user_guide.md" target="_blank" rel="external">https://github.com/goharbor/harbor/blob/master/docs/user_guide.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Harbor__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#Harbor__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;&lt;strong&gt; Harbor 介绍&lt;/strong&gt;&quot;&gt;&lt;/a&gt;&lt;strong&gt; Harbor 介绍&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Harbor 是 Vmwar 公司开源的 企业级的 Docker Registry 管理项目&lt;br&gt;它主要 提供 Dcoker Registry 管理UI，可基于角色访问控制, AD/LDAP 集成，日志审核等功能，完全的支持中文。&lt;br&gt;Harbor 的所有组件都在 Dcoker 中部署，所以 Harbor 可使用 Docker Compose 快速部署。&lt;br&gt;安装方式:&lt;br&gt;-在线安装程序：安装程序从Docker hub下载Harbor的图像。因此，安装程序的尺寸非常小。&lt;/p&gt;
&lt;p&gt;-脱机安装程序：当主机没有Internet连接时使用此安装程序。安装程序包含预先构建的图像，因此其大小更大。&lt;/p&gt;
&lt;h2 id=&quot;harbor__u90E8_u7F72&quot;&gt;&lt;a href=&quot;#harbor__u90E8_u7F72&quot; class=&quot;headerlink&quot; title=&quot;harbor 部署&quot;&gt;&lt;/a&gt;harbor 部署&lt;/h2&gt;&lt;p&gt;开源项目地址：&lt;a href=&quot;https://github.com/vmware/harbor&quot;&gt;https://github.com/vmware/harbor&lt;/a&gt;&lt;br&gt;官方安装说明：&lt;a href=&quot;https://github.com/vmware/harbor/blob/master/docs/installation_guide.md&quot;&gt;https://github.com/vmware/harbor/blob/master/docs/installation_guide.md&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Docker_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Docker_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Docker安装&quot;&gt;&lt;/a&gt;Docker安装&lt;/h1&gt;&lt;h2 id=&quot;u5378_u8F7D_u8001docker_u7248_u672C&quot;&gt;&lt;a href=&quot;#u5378_u8F7D_u8001docker_u7248_u672C&quot; class=&quot;headerlink&quot; title=&quot;卸载老docker版本&quot;&gt;&lt;/a&gt;卸载老docker版本&lt;/h2&gt;&lt;figure class=&quot;hljs highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo yum remove docker &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-client &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-client-latest &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-common &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-latest &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-latest-logrotate &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-logrotate &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-selinux &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-engine-selinux &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5B89_u88C5_docker_repository&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_docker_repository&quot; class=&quot;headerlink&quot; title=&quot;安装 docker repository&quot;&gt;&lt;/a&gt;安装 docker repository&lt;/h3&gt;&lt;figure class=&quot;hljs highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install -&lt;span class=&quot;keyword&quot;&gt;y&lt;/span&gt; yum-utils \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  device-mapper-persistent-data \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lvm2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum-config-manager \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    --&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;-repo \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//download.docker.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/linux/centos/docker-&lt;span class=&quot;keyword&quot;&gt;ce&lt;/span&gt;.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ yum &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt; docker-&lt;span class=&quot;keyword&quot;&gt;ce&lt;/span&gt; --showduplicates | &lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install docker-&lt;span class=&quot;keyword&quot;&gt;ce&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl   start docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装docker-compose&lt;br&gt;&lt;figure class=&quot;hljs highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@Pro harbor-&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;]&lt;span class=&quot;preprocessor&quot;&gt;# yum install python2-pip -y &amp;amp;&amp;amp; yum install docker-compose -y&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;u4FEE_u6539docker_u52A0_u901F&quot;&gt;&lt;a href=&quot;#u4FEE_u6539docker_u52A0_u901F&quot; class=&quot;headerlink&quot; title=&quot;修改docker加速&quot;&gt;&lt;/a&gt;修改docker加速&lt;/h4&gt;&lt;figure class=&quot;hljs highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim /etc/docker/daemon.json &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;registry-mirrors&quot;&lt;/span&gt;: [ &lt;span class=&quot;string&quot;&gt;&quot;https://registry.docker-cn.com&quot;&lt;/span&gt;,], &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;max-concurrent-downloads&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;log-driver&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;json-file&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;log-level&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;warn&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;log-opts&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;max-size&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;10m&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;max-file&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="docker" scheme="http://www.idcsec.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.idcsec.com/tags/docker/"/>
    
      <category term="harbor" scheme="http://www.idcsec.com/tags/harbor/"/>
    
      <category term="k8s" scheme="http://www.idcsec.com/tags/k8s/"/>
    
  </entry>
  
</feed>
