<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wang&#39;T博客</title>
  
  <subtitle>_入网络深似海,从此节操是路人.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.idcsec.com/"/>
  <updated>2019-01-23T06:38:38.248Z</updated>
  <id>http://www.idcsec.com/</id>
  
  <author>
    <name>Wang&#39;T</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Haproxy快速编译安装以及配置详解</title>
    <link href="http://www.idcsec.com/2019/01/23/Haproxy%E5%BF%AB%E9%80%9F%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.idcsec.com/2019/01/23/Haproxy快速编译安装以及配置详解/</id>
    <published>2019-01-23T02:50:22.000Z</published>
    <updated>2019-01-23T06:38:38.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="haproxy_u5B89_u88C5_u811A_u672Ccentos7-x"><a href="#haproxy_u5B89_u88C5_u811A_u672Ccentos7-x" class="headerlink" title="haproxy安装脚本centos7.x"></a>haproxy安装脚本centos7.x</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="comment">#description: configure and install haproxy software</span></span><br><span class="line"></span><br><span class="line">SOFTDIR=/usr/<span class="built_in">local</span>/src</span><br><span class="line">H_SOFT=<span class="string">"haproxy-1.7.10.tar.gz"</span></span><br><span class="line">H_SOFT_DIR=<span class="string">"haproxy-1.7.10"</span></span><br><span class="line">H_PREFIX=<span class="string">"/usr/local/haproxy"</span></span><br><span class="line">H_CONFIG_DIR=<span class="string">"/etc/haproxy"</span></span><br><span class="line">H_WORK_DIR=<span class="string">"/var/lib/haproxy"</span></span><br><span class="line">USER=<span class="string">"haproxy"</span></span><br><span class="line">GROUP=<span class="string">"haproxy"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! id <span class="variable">$USER</span> &amp;&gt;/dev/null;<span class="keyword">then</span></span><br><span class="line">groupadd -g <span class="number">3320</span> -r <span class="variable">$GROUP</span></span><br><span class="line">useradd -u <span class="number">3320</span> -g <span class="variable">$GROUP</span> -M <span class="operator">-s</span> /sbin/nologin <span class="variable">$USER</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#install haproxy</span></span><br><span class="line">yum groupinstall -y  <span class="string">"Development tools"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$SOFTDIR</span> &amp;&amp; [ ! <span class="operator">-f</span> <span class="variable">$&#123;H_SOFT&#125;</span> ] &amp;&amp; wget https://www.haproxy.org/download/<span class="number">1.7</span>/src/<span class="variable">$&#123;H_SOFT&#125;</span></span><br><span class="line">[ ! <span class="operator">-d</span> <span class="variable">$&#123;H_SOFT_DIR&#125;</span> ] &amp;&amp; tar xf <span class="variable">$&#123;H_SOFT&#125;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;SOFTDIR&#125;</span>/<span class="variable">$&#123;H_SOFT_DIR&#125;</span> &amp;&amp; make TARGET=linux2628 ARCH=x86_64 PREFIX=<span class="variable">$&#123;H_PREFIX&#125;</span> &amp;&amp; make install PREFIX=<span class="variable">$&#123;H_PREFIX&#125;</span></span><br><span class="line"><span class="keyword">if</span> [ $? <span class="operator">-ne</span> <span class="number">0</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"install haproxy fail"</span></span><br><span class="line"><span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#create haproxy configure file</span></span><br><span class="line">[ ! <span class="operator">-d</span> <span class="variable">$&#123;H_WORK_DIR&#125;</span> ] &amp;&amp; mkdir -p <span class="variable">$&#123;H_WORK_DIR&#125;</span> &amp;&amp; chown -R <span class="variable">$&#123;USER&#125;</span>.<span class="variable">$&#123;GROUP&#125;</span> <span class="variable">$&#123;H_WORK_DIR&#125;</span></span><br><span class="line">[ ! <span class="operator">-d</span> <span class="variable">$&#123;H_CONFIG_DIR&#125;</span> ] &amp;&amp; mkdir -p <span class="variable">$&#123;H_CONFIG_DIR&#125;</span></span><br><span class="line">cat &gt; /etc/haproxy/haproxy.cfg &lt;&lt;EOF</span><br><span class="line">global</span><br><span class="line">    <span class="built_in">log</span>         <span class="number">127.0</span>.<span class="number">0.1</span> <span class="built_in">local</span>2</span><br><span class="line">    chroot       <span class="variable">$&#123;H_WORK_DIR&#125;</span></span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     <span class="number">4000</span></span><br><span class="line">    user        haproxy</span><br><span class="line">    group       haproxy</span><br><span class="line">    daemon</span><br><span class="line">    stats socket <span class="variable">$&#123;H_WORK_DIR&#125;</span>/stats</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">    mode                    tcp</span><br><span class="line">    <span class="built_in">log</span>                     global</span><br><span class="line">    option                  tcplog</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 <span class="number">3</span></span><br><span class="line">    timeout queue           <span class="number">1</span>m</span><br><span class="line">    timeout connect         <span class="number">10</span>s</span><br><span class="line">    timeout client          <span class="number">1</span>m</span><br><span class="line">    timeout server          <span class="number">1</span>m</span><br><span class="line">    timeout check           <span class="number">10</span>s</span><br><span class="line">    maxconn                 <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line"><span class="built_in">bind</span> *:<span class="number">10800</span></span><br><span class="line">mode http</span><br><span class="line">option httplog</span><br><span class="line"><span class="built_in">log</span> <span class="number">127.0</span>.<span class="number">0.1</span> <span class="built_in">local</span>3</span><br><span class="line">stats refresh <span class="number">30</span>s</span><br><span class="line">stats <span class="built_in">enable</span></span><br><span class="line">stats uri /haproxyadmin?stats</span><br><span class="line">stats realm Haproxy\ Statistics</span><br><span class="line">stats auth Haproxyadmin:Aa123456</span><br><span class="line">stats hide-version</span><br><span class="line">stats admin <span class="keyword">if</span> TRUE</span><br><span class="line"></span><br><span class="line">frontend k8s-https-api</span><br><span class="line">    <span class="built_in">bind</span> *:<span class="number">8443</span></span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    tcp-request inspect-delay <span class="number">5</span>s</span><br><span class="line">    tcp-request content accept <span class="keyword">if</span> &#123; req.ssl_hello_<span class="built_in">type</span> <span class="number">1</span> &#125;</span><br><span class="line">    default_backend k8s-https-api</span><br><span class="line"></span><br><span class="line">backend k8s-https-api</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    option tcp-check</span><br><span class="line">    balance roundrobin</span><br><span class="line">    default-server inter <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">2000</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">    server k8s-https-api-<span class="number">1</span> <span class="number">192.168</span>.<span class="number">1.137</span>:<span class="number">6443</span> check</span><br><span class="line">    server k8s-https-api-<span class="number">2</span> <span class="number">192.168</span>.<span class="number">1.138</span>:<span class="number">6443</span> check</span><br><span class="line"></span><br><span class="line">frontend k8s-http-api</span><br><span class="line">    <span class="built_in">bind</span> *:<span class="number">80</span></span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    default_backend k8s-http-api</span><br><span class="line"></span><br><span class="line">backend k8s-http-api</span><br><span class="line">    mode tcp</span><br><span class="line">    option tcplog</span><br><span class="line">    option tcp-check</span><br><span class="line">    balance roundrobin</span><br><span class="line">    default-server inter <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">2000</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">    server k8s-http-api-<span class="number">1</span> <span class="number">192.168</span>.<span class="number">1.137</span>:<span class="number">8080</span> check</span><br><span class="line">    server k8s-http-api-<span class="number">2</span> <span class="number">192.168</span>.<span class="number">1.138</span>:<span class="number">8080</span> check</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#copy haproxy start script</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;SOFTDIR&#125;</span>/<span class="variable">$&#123;H_SOFT_DIR&#125;</span></span><br><span class="line">cp examples/haproxy.init /etc/init.d/haproxy</span><br><span class="line"><span class="built_in">cd</span> /etc/init.d/ &amp;&amp; sed -i <span class="string">'s/\/usr\/sbin\/'</span>\<span class="variable">$BASENAME</span><span class="string">'/\/usr\/local\/haproxy\/sbin\/'</span>\<span class="variable">$BASENAME</span><span class="string">'/g'</span> haproxy</span><br><span class="line">chmod u+x /etc/init.d/haproxy</span><br><span class="line">chkconfig --add haproxy</span><br><span class="line">chkconfig haproxy on</span><br><span class="line">ln <span class="operator">-s</span> /usr/<span class="built_in">local</span>/haproxy/sbin/haproxy /usr/sbin/haproxy</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"ss -tunlp|grep 80|awk -F '[ :]+' '&#123;print <span class="variable">$6</span>&#125;'"</span> = <span class="string">"80"</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"haproxy start fail,port 80"</span></span><br><span class="line"><span class="built_in">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">service haproxy start</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#configure log</span></span><br><span class="line">sed -i <span class="string">'s/^#$ModLoad imudp/$ModLoad imudp/g'</span> /etc/rsyslog.conf</span><br><span class="line">sed -i <span class="string">'s/^#$UDPServerRun 514/$UDPServerRun 514/g'</span> /etc/rsyslog.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"local2.* /var/log/haproxy.log"</span> &gt;&gt; /etc/rsyslog.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"local3.* /var/log/haproxy_stats.log"</span> &gt;&gt; /etc/rsyslog.conf</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><p>基本配置说明记录<br><figure class="hljs highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br></pre></td><td class="code"><pre><span class="line">global               <span class="comment">#全局设置</span></span><br><span class="line">    log 127.0.0.1   local2  <span class="comment">#日志输出配置，所有日志都记录在本机，通过local2输出</span></span><br><span class="line">    <span class="comment">#log loghost    local0 info</span></span><br><span class="line">    maxconn 4096             <span class="comment">#最大连接数</span></span><br><span class="line">    chroot /usr/local/haproxy</span><br><span class="line">    uid 99                   <span class="comment">#所属运行的用户uid</span></span><br><span class="line">    gid 99                   <span class="comment">#所属运行的用户组</span></span><br><span class="line">    group haproxy            <span class="comment">#用户组</span></span><br><span class="line">    daemon                   <span class="comment">#后台运行haproxy</span></span><br><span class="line">    nbproc 1                 <span class="comment">#启动1个haproxy实例</span></span><br><span class="line">    pidfile /usr/local/haproxy/haproxy.pid  <span class="comment">#将所有进程PID写入pid文件</span></span><br><span class="line">    <span class="comment">#debug</span></span><br><span class="line">    <span class="comment">#quiet</span></span><br><span class="line"> </span><br><span class="line">defaults             <span class="comment">#默认设置</span></span><br><span class="line">    <span class="comment">#log    global</span></span><br><span class="line">    log     127.0.0.1       local3      <span class="comment">#日志文件的输出定向</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#默认的模式:tcp|http|health</span></span><br><span class="line">    mode   http         <span class="comment">#所处理的类别,默认采用http模式</span></span><br><span class="line"> </span><br><span class="line">    option  httplog      <span class="comment">#日志类别,采用http日志格式`</span></span><br><span class="line">    option  dontlognull</span><br><span class="line">    option  forwardfor   <span class="comment">#将客户端真实ip加到HTTP Header中供后端服务器读取</span></span><br><span class="line">    option  retries 3    <span class="comment">#三次连接失败则认证服务器不可用</span></span><br><span class="line">    option  httpclose    <span class="comment">#每次请求完毕后主动关闭http通道,haproxy不支持keep-alive,只&gt;能模拟这种模式的实现</span></span><br><span class="line">    retries 3            <span class="comment">#3次连接失败就认为服务器不可用，主要通过后面的check检查</span></span><br><span class="line">    option  redispatch   <span class="comment">#当serverid对应的服务器挂掉后，强制定向到其他健康服务器</span></span><br><span class="line">    option  abortonclose <span class="comment">#当服务器负载很高时，自动结束掉当前队列中处理比较久的链接</span></span><br><span class="line">    maxconn 2000         <span class="comment">#默认最大连接数</span></span><br><span class="line"> </span><br><span class="line">    timeout connect 5000  <span class="comment">#连接超时时间</span></span><br><span class="line">    timeout client  50000 <span class="comment">#客户端连接超时时间</span></span><br><span class="line">    timeout server  50000 <span class="comment">#服务器端连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    stats   enable</span><br><span class="line">    stats   uri /haproxy-stats   <span class="comment">#haproxy监控页面的访问地址</span></span><br><span class="line">    stats   auth test:test123    <span class="comment">#设置监控页面的用户和密码</span></span><br><span class="line">    stats   hide-version         <span class="comment">#隐藏统计页面的HAproxy版本信息</span></span><br><span class="line"> </span><br><span class="line">frontend http-in              <span class="comment">#前台</span></span><br><span class="line">    bind    *:81</span><br><span class="line">    mode    http</span><br><span class="line">    option  httplog</span><br><span class="line">    log     global</span><br><span class="line">    default_backend htmpool   <span class="comment">#静态服务器池</span></span><br><span class="line"> </span><br><span class="line">backend htmpool               <span class="comment">#后台</span></span><br><span class="line">    balance leastconn         <span class="comment">#负载均衡算法</span></span><br><span class="line">    option  httpchk HEAD /index.html HTTP/1.0    <span class="comment">#健康检查</span></span><br><span class="line">    server  web1 192.168.2.10:80 cookie 1 weight 5<span class="instruction"> check </span>inter 2000 rise 2 fall 3</span><br><span class="line">    server  web2 192.168.2.11:80 cookie 2 weight 3<span class="instruction"> check </span>inter 2000 rise 2 fall 3</span><br><span class="line">    <span class="comment"># web1/web2:自定义服务器别名</span></span><br><span class="line">    <span class="comment"># 192.168.2.10:80:服务器IP:Port</span></span><br><span class="line">    <span class="comment"># cookie 1/2:表示serverid</span></span><br><span class="line">    <span class="comment"># weight: 服务器权重，数字越大分配到的请求数越高</span></span><br><span class="line">    <span class="comment"># check: 接受定时健康检查 </span></span><br><span class="line">    <span class="comment"># inter 2000: 检查频率</span></span><br><span class="line">    <span class="comment"># rise 2: 两次检测正确认为服务器可用</span></span><br><span class="line">    <span class="comment"># fall 3: 三次失败认为服务器不可用</span></span><br><span class="line"> </span><br><span class="line">listen w.gdu.me 0.0.0.0:80</span><br><span class="line">    option  httpchk GET /index.html</span><br><span class="line">    server  s1 192.168.2.10:80 weight 3<span class="instruction"> check</span><br><span class="line"></span>    server  s3 192.168.2.11:80 weight 3<span class="instruction"> check</span><br><span class="line"></span> </span><br><span class="line"><span class="comment"># Haproxy统计页面</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line">listen haproxy_stats</span><br><span class="line">    bind 0.0.0.0:1080  <span class="comment">#侦听IP:Port</span></span><br><span class="line">    mode http</span><br><span class="line">    log  127.0.0.1 local 0 err <span class="comment">#err|warning|info|debug]</span></span><br><span class="line">    stats refresh 30s</span><br><span class="line">    stats uri /haproxy-stats</span><br><span class="line">    stats realm Haproxy\ Statistics</span><br><span class="line">    stats auth admin:admin</span><br><span class="line">    stats auth test:test</span><br><span class="line">    stats hide-version</span><br><span class="line">    stats admin<span class="instruction"> if </span>TRUE  <span class="comment">#手工启用/禁用后端服务器</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 网站检测listen配置</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line">listen site_status</span><br><span class="line">    bind 0.0.0.0:1081</span><br><span class="line">    mode http</span><br><span class="line">    log  127.0.0.1 local0 err</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#网站健康检查URI，用来检测Haproxy管理的网站是否可能，正常返回200、异常返回500</span></span><br><span class="line">   <span class="instruction"> monitor-uri </span>/site_status</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#定义网站down时的策略</span></span><br><span class="line">    <span class="comment">#当backend中的有效服务器数&lt;1时，返回true</span></span><br><span class="line">    acl site_dead<span class="function"> nbsrv(</span>denali_server<span class="function">)</span> lt 1</span><br><span class="line">    acl site_dead<span class="function"> nbsrv(</span>tm_server<span class="function">)</span> lt 1</span><br><span class="line">    acl site_dead<span class="function"> nbsrv(</span>mms_server<span class="function">)</span> lt 1</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#当满足策略的时候返回http-500，否则返回http-200</span></span><br><span class="line">   <span class="instruction"> monitor </span>fail<span class="instruction"> if </span>site_dead</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#声名一个监测请求的来源网络</span></span><br><span class="line">   <span class="instruction"> monitor-net </span>192.168.0.252/31</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># https的配置方法</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line">listen login_https_server</span><br><span class="line">    bind 0.0.0.0:443   <span class="comment">#绑定HTTPS的443端口</span></span><br><span class="line">    mode tcp           <span class="comment">#https必须使用tcp模式</span></span><br><span class="line">    log global</span><br><span class="line">    balance roundrobin</span><br><span class="line">    option httpchk GET /member/login.jhtml HTTP/1.1\r\nHost:login.daily.taobao.net</span><br><span class="line">    <span class="comment">#回送给server的端口也必须是443</span></span><br><span class="line">    server vm94f.sqa 192.168.212.94:443<span class="instruction"> check </span>port 80 inter 6000 rise 3 fall 3</span><br><span class="line">    server <span class="variable">v215120</span>.sqa 192.168.215.120:443<span class="instruction"> check </span>port 80 inter 6000 rise 3 fall 3</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># frontend配置</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line">frontend http_80_in</span><br><span class="line">    bind 0.0.0.0:80   <span class="comment">#监听端口</span></span><br><span class="line">    mode http         <span class="comment">#http的7层模式</span></span><br><span class="line">    log global        <span class="comment">#使用全局的日志配置</span></span><br><span class="line">    option httplog    <span class="comment">#启用http的log</span></span><br><span class="line">    option httpclose  <span class="comment">#每次请求完毕后主动关闭http通道,HA-Proxy不支持keep-alive模式</span></span><br><span class="line">    option forwardfor <span class="comment">##如果后端服务器需要获得客户端的真实IP需要配置次参数,将可以从Http Header中获得客户端IP</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#HAProxy的日志记录内容配置</span></span><br><span class="line">    capture request header Host len 40              <span class="comment"># 请求中的主机名</span></span><br><span class="line">    capture request header Content-Length len 10    <span class="comment"># 请求中的内容长度</span></span><br><span class="line">    capture request header Referer len 200          <span class="comment"># 请求中的引用地址</span></span><br><span class="line">    capture response header Server len 40           <span class="comment"># 响应中的server name</span></span><br><span class="line">    capture response header Content-Length len 10   <span class="comment"># 响应中的内容长度(可配合option logasap使用)</span></span><br><span class="line">    capture response header Cache-Control len 8     <span class="comment"># 响应中的cache控制</span></span><br><span class="line">    capture response header Location len 20         <span class="comment"># 响应中的重定向地址</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">#ACL策略规则定义</span></span><br><span class="line">    <span class="comment">#-------------------------------------------------</span></span><br><span class="line">   <span class="function"> #如果请求的域名满足正则表达式返回true(</span>-i:忽略大小写<span class="function">)</span></span><br><span class="line">    acl denali_policy<span class="function"> hdr_reg(</span>host<span class="function">)</span> -i<span class="function"> ^(</span>www.gemini.taobao.net|my.gemini.taobao.net|auction1.gemini.taobao.net<span class="function">)</span>$</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#如果请求域名满足trade.gemini.taobao.net返回true</span></span><br><span class="line">    acl tm_policy<span class="function"> hdr_dom(</span>host<span class="function">)</span> -i trade.gemini.taobao.net</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#在请求url中包含sip_apiname=,则此控制策略返回true,否则为false</span></span><br><span class="line">    acl invalid_req url_sub -i sip_apiname=</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#在请求url中存在timetask作为部分地址路径,则此控制策略返回true,否则返回false</span></span><br><span class="line">    acl timetask_req url_dir -i timetask</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#当请求的header中Content-length等于0时返回true</span></span><br><span class="line">    acl missing_cl<span class="function"> hdr_cnt(</span>Content-length<span class="function">)</span> eq 0</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">#ACL策略匹配相应</span></span><br><span class="line">    <span class="comment">#-------------------------------------------------</span></span><br><span class="line">    <span class="comment">#当请求中header中Content-length等于0阻止请求返回403</span></span><br><span class="line">    <span class="comment">#block表示阻止请求,返回403错误</span></span><br><span class="line">    block<span class="instruction"> if </span>missing_cl</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#如果不满足策略invalid_req,或者满足策略timetask_req,则阻止请求</span></span><br><span class="line">    block<span class="instruction"> if </span>!invalid_req || timetask_req</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#当满足denali_policy的策略时使用denali_server的backend</span></span><br><span class="line">    use_backend denali_server<span class="instruction"> if </span>denali_policy</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#当满足tm_policy的策略时使用tm_server的backend</span></span><br><span class="line">    use_backend tm_server<span class="instruction"> if </span>tm_policy</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#reqisetbe关键字定义,根据定义的关键字选择backend</span></span><br><span class="line">    reqisetbe ^Host:\ img           dynamic</span><br><span class="line">    reqisetbe ^<span class="keyword">[</span>^\ ]*\<span class="function"> /(</span>img|css<span class="function">)</span>/  dynamic</span><br><span class="line">    reqisetbe ^<span class="keyword">[</span>^\ ]*\ /admin/stats stats</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#以上都不满足的时候使用默认mms_server的backend</span></span><br><span class="line">    default_backend mms_server</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#HAProxy错误页面设置</span></span><br><span class="line">    errorfile 400 /home/admin/haproxy/errorfiles/400.http</span><br><span class="line">    errorfile 403 /home/admin/haproxy/errorfiles/403.http</span><br><span class="line">    errorfile 408 /home/admin/haproxy/errorfiles/408.http</span><br><span class="line">    errorfile 500 /home/admin/haproxy/errorfiles/500.http</span><br><span class="line">    errorfile 502 /home/admin/haproxy/errorfiles/502.http</span><br><span class="line">    errorfile 503 /home/admin/haproxy/errorfiles/503.http</span><br><span class="line">    errorfile 504 /home/admin/haproxy/errorfiles/504.http</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># backend的设置</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------------------------</span></span><br><span class="line">backend mms_server</span><br><span class="line">    mode http           <span class="comment">#http的7层模式</span></span><br><span class="line">    balance roundrobin  <span class="comment">#负载均衡的方式,roundrobin平均方式</span></span><br><span class="line">    cookie SERVERID     <span class="comment">#允许插入serverid到cookie中,serverid后面可以定义</span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">#心跳检测的URL,HTTP/1.1¥r¥nHost:XXXX,指定了心跳检测HTTP的版本,XXX为检测时请求</span></span><br><span class="line">    <span class="comment">#服务器的request中的域名是什么,这个在应用的检测URL对应的功能有对域名依赖的话需要设置</span></span><br><span class="line">    option httpchk GET /member/login.jhtml HTTP/1.1\r\nHost:member1.gemini.taobao.net</span><br><span class="line">     </span><br><span class="line">    <span class="comment">#服务器定义,cookie 1表示serverid为1,check inter 1500 是检测心跳频率</span></span><br><span class="line">    <span class="comment">#rise 3是3次正确认为服务器可用,fall 3是3次失败认为服务器不可用,weight代表权重</span></span><br><span class="line">    server mms1 10.1.5.134:80 cookie 1<span class="instruction"> check </span>inter 1500 rise 3 fall 3 weight 1</span><br><span class="line">    server mms2 10.1.6.118:80 cookie 2<span class="instruction"> check </span>inter 1500 rise 3 fall 3 weight 2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">backend denali_server</span><br><span class="line">    mode http</span><br><span class="line">    balance source     <span class="comment">#负载均衡的方式,source根据客户端IP进行哈希的方式</span></span><br><span class="line">    option allbackups  <span class="comment">#设置了backup的时候,默认第一个backup会优先,设置option allbackups后所有备份服务器权重一样</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#心跳检测URL设置</span></span><br><span class="line">    option httpchk GET /mytaobao/home/my_taobao.jhtml HTTP/1.1\r\nHost:my.gemini.taobao.net</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#可以根据机器的性能不同,指定连接数配置，如minconn 10 maxconn 20</span></span><br><span class="line">    server denlai1 10.1.5.114:80 minconn 4 maxconn 12<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line">    server denlai2 10.1.6.104:80 minconn 10 maxconn 20<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line">    <span class="comment">#备份机器配置,正常情况下备机不会使用,当主机的全部服务器都down的时候备机会启用</span></span><br><span class="line">    server dnali-back1 10.1.7.114:80<span class="instruction"> check </span>backup inter 1500 rise 3 fall 3</span><br><span class="line">    server dnali-back2 10.1.7.114:80<span class="instruction"> check </span>backup inter 1500 rise 3 fall 3</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">backend tm_server</span><br><span class="line">    mode http</span><br><span class="line">    balance leastconn   <span class="comment">#负载均衡的方式,leastcon选择当前请求数最少的服务器</span></span><br><span class="line">    option httpchk GET /trade/itemlist/prepayCard.htm HTTP/1.1\r\nHost:trade.gemini.taobao.net</span><br><span class="line">    server tm1 10.1.5.115:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line">    server tm2 10.1.6.105:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#reqisetbe自定义关键字匹配backend部分</span></span><br><span class="line">backend dynamic</span><br><span class="line">    mode http</span><br><span class="line">    balance source</span><br><span class="line">    option httpchk GET /welcome.html </span><br><span class="line">    server denlai1 10.3.5.114:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line">    server denlai2 10.4.6.104:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line"> </span><br><span class="line">backend stats</span><br><span class="line">    mode http</span><br><span class="line">    balance source</span><br><span class="line">    option httpchk GET /welcome.html </span><br><span class="line">    server denlai1 10.5.5.114:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br><span class="line">    server denlai2 10.6.6.104:80<span class="instruction"> check </span>inter 1500 rise 3 fall 3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;haproxy_u5B89_u88C5_u811A_u672Ccentos7-x&quot;&gt;&lt;a href=&quot;#haproxy_u5B89_u88C5_u811A_u672Ccentos7-x&quot; class=&quot;headerlink&quot; title=&quot;haproxy安装脚本c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kubernetes prometheus监控JMX</title>
    <link href="http://www.idcsec.com/2019/01/21/kubernetes-prometheus%E7%9B%91%E6%8E%A7JMX/"/>
    <id>http://www.idcsec.com/2019/01/21/kubernetes-prometheus监控JMX/</id>
    <published>2019-01-21T02:11:43.000Z</published>
    <updated>2019-01-23T06:43:08.843Z</updated>
    
    <content type="html"><![CDATA[<p>javaagent <a href="https://github.com/prometheus/jmx_exporter" target="_blank" rel="external">https://github.com/prometheus/jmx_exporter</a></p><h1 id="u4E0B_u8F7Djavaagent_uFF1A"><a href="#u4E0B_u8F7Djavaagent_uFF1A" class="headerlink" title="下载javaagent："></a>下载javaagent：</h1><p><a href="https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar" target="_blank" rel="external">https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar</a></p><p>kubernetes监控jvm<br>每个应用都通过javaagent向外提供一个http服务暴露出自己的JMX信息。prometheus通过kubernetes 自动发现就能把这个应用加入监控对象列表，进行数据收集并跟踪服务的状态。为JVM添加参数： -javaagent:jmx_prometheus_javaagent-0.3.1.jar=9180:config.yaml即可运行此Exporter。其中9180为暴露的端口号，config.yaml为配置文件路径。要采集指标，访问<a href="http://host:9180/metrics即可。" target="_blank" rel="external">http://host:9180/metrics即可。</a><br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> annotations:</span><br><span class="line">        prometheus.io/scrape: <span class="string">"true"</span></span><br><span class="line">        prometheus.io/port: <span class="string">"9180"</span></span><br><span class="line">        prometheus.io/path: /metrics</span><br><span class="line">```</span><br><span class="line">spec.<span class="keyword">template</span>.metadata.annotations.prometheus.io/scrape</span><br><span class="line">是否针对Discorvery</span><br><span class="line">spec.<span class="keyword">template</span>.metadata.annotations.prometheus.io/port</span><br><span class="line">发现目标端口</span><br><span class="line">spec.<span class="keyword">template</span>.metadata.annotations.prometheus.io/path</span><br><span class="line">发现目标路径</span><br><span class="line"></span><br><span class="line">创建一个configmap</span><br><span class="line">``` </span><br><span class="line">kubectl create cm prometheus-jmx-exporter-config --from-file=./config.yaml</span><br><span class="line">kubectl apply -f tomcat-monitoring-demo.yaml</span><br><span class="line">[root@centos-master jvm-exporter]<span class="preprocessor"># kubectl  get pod | grep demo </span></span><br><span class="line">tomcat-monitoring-demo-<span class="number">1780394632</span>-c96hz              <span class="number">1</span>/<span class="number">1</span>       Running            <span class="number">0</span>          <span class="number">1</span>h</span><br><span class="line">tomcat-monitoring-demo-<span class="number">1780394632</span>-sk09b              <span class="number">1</span>/<span class="number">1</span>       Running            <span class="number">0</span>          <span class="number">1</span>h</span><br></pre></td></tr></table></figure></p><p>把javaagent放nfs里面如果没有nfs可以考虑添加到基础镜像或者dockerfile时候添加<br>grafana 添加仪表盘id:7727</p><p>prometheus配置文件添加<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'kubernetes-pods'</span></span><br><span class="line"></span>  kubernetes_sd_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">role:</span> pod</span><br><span class="line"></span>  relabel_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span><br><span class="line"></span>    action: keep</span><br><span class="line">    regex: true</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line"></span>    action: replace</span><br><span class="line">    target_label: __metrics_path__</span><br><span class="line">    regex: (.+)</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__address_<span class="number">_</span>, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line"></span>    action: replace</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">    replacement: $1:$2</span><br><span class="line">    target_label: __address__</span><br><span class="line">  -<span class="ruby"> <span class="symbol">action:</span> labelmap</span><br><span class="line"></span>    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__meta_kubernetes_namespace]</span><br><span class="line"></span>    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__meta_kubernetes_pod_name]</span><br><span class="line"></span>    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br></pre></td></tr></table></figure></p><p>使用docker测试<br><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d   --name tomcat-jmx   -v ~/jvm-exporter:/jmx-exporter   -e CATALINA_OPTS=&#34;-Xms1G -Xmx1G -javaagent:/jmx-exporter/jmx_prometheus_javaagent-0.3.1.jar=6060:/jmx-exporter/config.yml&#34;   -p 6060:6060   -p 9090:8080   tomcat:latest</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;javaagent &lt;a href=&quot;https://github.com/prometheus/jmx_exporter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/prometheus/jmx_exporter&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kubernetes pod资源限制</title>
    <link href="http://www.idcsec.com/2019/01/21/kubernetes-pod%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/"/>
    <id>http://www.idcsec.com/2019/01/21/kubernetes-pod资源限制/</id>
    <published>2019-01-21T02:09:32.000Z</published>
    <updated>2019-01-23T06:19:22.126Z</updated>
    
    <content type="html"><![CDATA[<p>资源限制namespace 设置 ResouceQuota 和 LimitRange两种</p><h1 id="u8D44_u6E90_u9650_u989D_uFF08Resource_Quota_uFF09"><a href="#u8D44_u6E90_u9650_u989D_uFF08Resource_Quota_uFF09" class="headerlink" title="资源限额（Resource Quota）"></a>资源限额（Resource Quota）</h1><p>资源限额可以为每一个命名空间提供一个总体的资源使用的限制，限制命名空间某种类型的资源对象的总数目上线，限制pod可以使用到的计算资源的总上限<br>创建应该dev的命名空间<br><a id="more"></a><br><code>kubectl create  dev</code><br>创建Resource Quota对象资源文件<br><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> cat quota-mem-cpu.yaml&#10;apiVersion: v1&#10;kind: ResourceQuota&#10;metadata:&#10;  name: mem-cpu-demo&#10;spec:&#10;  hard:&#10;    requests.cpu: &#34;2&#34;&#10;    requests.memory: 2Gi&#10;    limits.cpu: &#34;4&#34;&#10;    limits.memory: 4Gi</span><br></pre></td></tr></table></figure></p><p>创建Resource Quota对象<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl  apply -f  quota-mem-cpu<span class="class">.yaml</span>  -n dev</span><br></pre></td></tr></table></figure></p><p>创建应该pod测试<br><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat pod-quota-mem-cpu.yaml&#10;apiVersion: v1&#10;kind: Pod&#10;metadata:&#10;  name: quota-mem-cpu-demo&#10;spec:&#10;  containers:&#10;  - name: quota-mem-cpu-demo-ctr&#10;    image: nginx&#10;    resources:&#10;      limits:&#10;        memory: &#34;800Mi&#34;&#10;        cpu: &#34;800m&#34; &#10;      requests:&#10;        memory: &#34;600Mi&#34;&#10;        cpu: &#34;400m&#34;</span><br></pre></td></tr></table></figure></p><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe  resourcequota  mem-cpu-demo   -n dev quota-mem-cpu&#10;Name:            mem-cpu-demo&#10;Namespace:       dev&#10;Resource         Used   Hard&#10;--------         ----   ----&#10;limits.cpu       800m   4&#10;limits.memory    800Mi  4Gi&#10;requests.cpu     400m   2&#10;requests.memory  600Mi  2Gi</span><br></pre></td></tr></table></figure><p>当开启了resource quota时，用户创建pod，必须指定cpu、内存的 requests or limits ，否则创建失败</p><h1 id="LimitRange_u914D_u7F6E_u9ED8_u8BA4CPU_u548C_u5185_u5B58"><a href="#LimitRange_u914D_u7F6E_u9ED8_u8BA4CPU_u548C_u5185_u5B58" class="headerlink" title="LimitRange配置默认CPU和内存"></a>LimitRange配置默认CPU和内存</h1><p>LimitRange分为默认请求和限额和限制大小，如果在一个拥有默认内存限额的命名空间中创建一个容器，并且这个容器未指定它自己的内存限额， 它会被分配这个默认的内存限额值<br>以下是一个 LimitRange 对象的配置文件。该配置指定了默认的内存请求与默认的内存限额。<br><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /root/quota-mem-cpu/limit-range.yaml &#10;apiVersion: v1&#10;kind: LimitRange&#10;metadata:&#10;  name: mem-cpu-limit-range&#10;spec:&#10;  limits:&#10;  - default:&#10;      memory: 4Gi&#10;      cpu: 4&#10;    defaultRequest:&#10;      memory: 4Gi&#10;      cpu: 2&#10;    type: Container</span><br></pre></td></tr></table></figure></p><p>限制可用最大最小配置文件,podLimitRange必须配置在最大资源的范围内。<br><figure class="hljs highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1&#10;kind: LimitRange&#10;metadata:&#10;  name: cpu-min-max-demo-lr&#10;spec:&#10;  limits:&#10;  - max:&#10;      cpu: &#34;4&#34;&#10;    min:&#10;      cpu: &#34;2&#34;&#10;    type: Container</span><br></pre></td></tr></table></figure></p><h1 id="u6D4B_u8BD5"><a href="#u6D4B_u8BD5" class="headerlink" title="测试"></a>测试</h1><p>创建一个Pod尝试分配超过其限制的内存，下面的这个Pod的配置文档，它申请50M的内存， 内存限制设置为100M。在配置文件里的args段里，可以看到容器尝试分配250M的内存，超过了限制的100M。<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: v1</span><br><span class="line"><span class="attribute">kind</span>: Pod</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: memory-limits-demo</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">containers</span>:</span><br><span class="line">  - <span class="attribute">name</span>: memory-demo-<span class="number">2</span>-ctr</span><br><span class="line">    <span class="attribute">image</span>: vish/stress</span><br><span class="line">    <span class="attribute">resources</span>:</span><br><span class="line">      <span class="attribute">requests</span>:</span><br><span class="line">        <span class="attribute">memory</span>: <span class="number">50</span>Mi</span><br><span class="line">      <span class="attribute">limits</span>:</span><br><span class="line">        <span class="attribute">memory</span>: <span class="string">"100Mi"</span></span><br><span class="line">    <span class="attribute">args</span>:</span><br><span class="line">    - -mem-total</span><br><span class="line">    - <span class="number">250</span>Mi</span><br><span class="line">    - -mem-alloc-size</span><br><span class="line">    - <span class="number">10</span>Mi</span><br><span class="line">    - -mem-alloc-sleep</span><br><span class="line">    - <span class="number">1s</span></span><br></pre></td></tr></table></figure></p><p>memory-limits-demo                                   0/1       OOMKilled          6</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源限制namespace 设置 ResouceQuota 和 LimitRange两种&lt;/p&gt;
&lt;h1 id=&quot;u8D44_u6E90_u9650_u989D_uFF08Resource_Quota_uFF09&quot;&gt;&lt;a href=&quot;#u8D44_u6E90_u9650_u989D_uFF08Resource_Quota_uFF09&quot; class=&quot;headerlink&quot; title=&quot;资源限额（Resource Quota）&quot;&gt;&lt;/a&gt;资源限额（Resource Quota）&lt;/h1&gt;&lt;p&gt;资源限额可以为每一个命名空间提供一个总体的资源使用的限制，限制命名空间某种类型的资源对象的总数目上线，限制pod可以使用到的计算资源的总上限&lt;br&gt;创建应该dev的命名空间&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kubernetes apiserver高可用</title>
    <link href="http://www.idcsec.com/2019/01/20/kubernetes-apiserver%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>http://www.idcsec.com/2019/01/20/kubernetes-apiserver高可用/</id>
    <published>2019-01-20T15:14:51.000Z</published>
    <updated>2019-01-24T07:39:47.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u5B89_u88C5Haproxy_keepalived"><a href="#u5B89_u88C5Haproxy_keepalived" class="headerlink" title="安装Haproxy keepalived"></a>安装Haproxy keepalived</h1><p>两台HA haproxy同样的配置<br><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">$ yum <span class="operator"><span class="keyword">install</span> -y haproxy</span><br><span class="line">$<span class="keyword">at</span> /etc/haproxy/haproxy.cfg</span><br><span class="line"><span class="keyword">global</span></span><br><span class="line">    <span class="keyword">log</span>         <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local2</span><br><span class="line">    chroot      /<span class="keyword">var</span>/lib/haproxy</span><br><span class="line">    pidfile     /<span class="keyword">var</span>/run/haproxy.pid</span><br><span class="line">    maxconn     <span class="number">4000</span></span><br><span class="line">    <span class="keyword">user</span>        haproxy</span><br><span class="line">    <span class="keyword">group</span>       haproxy</span><br><span class="line">    daemon</span><br><span class="line">    stats socket /<span class="keyword">var</span>/lib/haproxy/stats</span><br><span class="line"></span><br><span class="line"><span class="keyword">defaults</span></span><br><span class="line">    <span class="keyword">mode</span>                    tcp</span><br><span class="line">    <span class="keyword">log</span>                     <span class="keyword">global</span></span><br><span class="line">    <span class="keyword">option</span>                  tcplog</span><br><span class="line">    <span class="keyword">option</span>                  dontlognull</span><br><span class="line">    <span class="keyword">option</span>                  redispatch</span><br><span class="line">    retries                 <span class="number">3</span></span><br><span class="line">    <span class="keyword">timeout</span> queue           <span class="number">1</span><span class="keyword">m</span></span><br><span class="line">    <span class="keyword">timeout</span> <span class="keyword">connect</span>         <span class="number">10</span>s</span><br><span class="line">    <span class="keyword">timeout</span> <span class="keyword">client</span>          <span class="number">1</span><span class="keyword">m</span></span><br><span class="line">    <span class="keyword">timeout</span> <span class="keyword">server</span>          <span class="number">1</span><span class="keyword">m</span></span><br><span class="line">    <span class="keyword">timeout</span> <span class="keyword">check</span>           <span class="number">10</span>s</span><br><span class="line">    maxconn                 <span class="number">3000</span></span><br><span class="line">listen stats</span><br><span class="line">  bind    *:<span class="number">9000</span></span><br><span class="line">  <span class="keyword">mode</span>    <span class="keyword">http</span></span><br><span class="line">  stats   <span class="keyword">enable</span></span><br><span class="line">  stats   hide-<span class="keyword">version</span></span><br><span class="line">  stats   uri       /stats</span><br><span class="line">  stats   <span class="keyword">refresh</span>   <span class="number">30</span>s</span><br><span class="line">  stats   realm     Haproxy\ <span class="keyword">Statistics</span></span><br><span class="line">  stats   auth      <span class="keyword">Admin</span>:<span class="keyword">Password</span></span><br><span class="line"></span><br><span class="line">frontend <span class="keyword">in</span>-apiserver-cluster</span><br><span class="line">    bind *:<span class="number">8443</span></span><br><span class="line">    <span class="keyword">mode</span> tcp</span><br><span class="line">    <span class="keyword">option</span> tcplog</span><br><span class="line">    tcp-request inspect-delay <span class="number">5</span>s</span><br><span class="line">    tcp-request <span class="keyword">content</span> <span class="keyword">accept</span> <span class="keyword">if</span> &#123; req.ssl_hello_type <span class="number">1</span> &#125;</span><br><span class="line">    default_backend https-apiserver-cluster</span><br><span class="line"></span><br><span class="line">backend https-apiserver-cluster</span><br><span class="line">    <span class="keyword">mode</span> tcp</span><br><span class="line">    <span class="keyword">option</span> tcplog</span><br><span class="line">    <span class="keyword">option</span> httpchk <span class="keyword">GET</span> /healthz</span><br><span class="line">    balance roundrobin</span><br><span class="line">    <span class="keyword">default</span>-<span class="keyword">server</span> inter <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">2000</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">    <span class="keyword">server</span> k8s-https-api-<span class="number">1</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.137</span>:<span class="number">6443</span> <span class="keyword">check</span> <span class="keyword">check</span>-ssl <span class="keyword">verify</span> <span class="keyword">none</span></span><br><span class="line">    <span class="keyword">server</span> k8s-https-api-<span class="number">2</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.138</span>:<span class="number">6443</span> <span class="keyword">check</span> <span class="keyword">check</span>-ssl <span class="keyword">verify</span> <span class="keyword">none</span></span><br><span class="line"></span><br><span class="line">#frontend k8s-<span class="keyword">http</span>-api</span><br><span class="line">#    bind *:<span class="number">80</span></span><br><span class="line">#    <span class="keyword">mode</span> tcp</span><br><span class="line">#    <span class="keyword">option</span> tcplog</span><br><span class="line">#    default_backend k8s-<span class="keyword">http</span>-api</span><br><span class="line"></span><br><span class="line">#backend k8s-<span class="keyword">http</span>-api</span><br><span class="line">#    <span class="keyword">mode</span> tcp</span><br><span class="line">#    <span class="keyword">option</span> tcplog</span><br><span class="line">#    <span class="keyword">option</span> tcp-<span class="keyword">check</span></span><br><span class="line">#    balance roundrobin</span><br><span class="line">#    <span class="keyword">default</span>-<span class="keyword">server</span> inter <span class="number">10</span>s downinter <span class="number">5</span>s rise <span class="number">2</span> fall <span class="number">2</span> slowstart <span class="number">60</span>s maxconn <span class="number">2000</span> maxqueue <span class="number">256</span> weight <span class="number">100</span></span><br><span class="line">#    <span class="keyword">server</span> k8s-<span class="keyword">http</span>-api-<span class="number">1</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.137</span>:<span class="number">8080</span> <span class="keyword">check</span></span><br><span class="line">#    <span class="keyword">server</span> k8s-<span class="keyword">http</span>-api-<span class="number">2</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.138</span>:<span class="number">8080</span> <span class="keyword">check</span></span></span><br></pre></td></tr></table></figure></p><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动haproxy</span><br><span class="line"><span class="variable">$ </span>sudo systemctl start haproxy</span><br><span class="line"><span class="variable">$ </span>sudo systemctl enable haproxy</span><br><span class="line"><span class="variable">$ </span>sudo systemctl status haproxy</span><br></pre></td></tr></table></figure><h1 id="keepalived_u5B89_u88C5"><a href="#keepalived_u5B89_u88C5" class="headerlink" title="keepalived安装"></a>keepalived安装</h1><figure class="hljs highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">开启路由转发，这里我们定义虚拟<span class="type">IP</span>为：<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span></span><br><span class="line">$ vi /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 添加以下内容</span></span><br><span class="line">net.ipv4.ip_forward = <span class="number">1</span></span><br><span class="line">net.ipv4.ip_nonlocal_bind = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证并生效</span></span><br><span class="line">$ sysctl -p</span><br><span class="line"><span class="comment"># 验证是否生效</span></span><br><span class="line">$ cat /<span class="keyword">proc</span>/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="number">1</span></span><br><span class="line"> yum install -y keepalived</span><br></pre></td></tr></table></figure><p>将masterA设置为Master，masterB设置为Backup，修改配置：<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">   &#125;</span><br><span class="line">   router_id kube_api</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_apiserver &#123;</span><br><span class="line">    script <span class="string">"curl -o /dev/null -s -w %&#123;http_code&#125; -k  https://192.168.1.4:6443"</span></span><br><span class="line">    interval <span class="number">3</span></span><br><span class="line">    timeout <span class="number">3</span></span><br><span class="line">    fall <span class="number">2</span></span><br><span class="line">    rise <span class="number">2</span></span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">vrrp_instance haproxy-vip &#123;</span><br><span class="line">    <span class="preprocessor"># 使用单播通信，默认是组播通信</span></span><br><span class="line">    unicast_src_ip <span class="number">192.168</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.5</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="preprocessor"># 初始化状态</span></span><br><span class="line">    state MASTER</span><br><span class="line">    <span class="preprocessor"># 虚拟ip 绑定的网卡 （这里根据你自己的实际情况选择网卡）</span></span><br><span class="line">    interface eth0</span><br><span class="line">    <span class="preprocessor"># 此ID 要与Backup 配置一致</span></span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    <span class="preprocessor"># 默认启动优先级，要比Backup 大点，但要控制量，保证自身状态检测生效</span></span><br><span class="line">    priority <span class="number">100</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="preprocessor"># 虚拟ip 地址</span></span><br><span class="line">        <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_apiserver</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span> <span class="number">80</span> &#123;</span><br><span class="line">  delay_loop <span class="number">5</span></span><br><span class="line">  lvs_sched wlc</span><br><span class="line">  lvs_method NAT</span><br><span class="line">  persistence_timeout <span class="number">1800</span></span><br><span class="line">  protocol TCP</span><br><span class="line"></span><br><span class="line">  real_server <span class="number">192.168</span><span class="number">.1</span><span class="number">.4</span> <span class="number">8080</span> &#123;</span><br><span class="line">    weight <span class="number">1</span></span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">      connect_port <span class="number">8080</span></span><br><span class="line">      connect_timeout <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span> <span class="number">8443</span> &#123;</span><br><span class="line">  delay_loop <span class="number">5</span></span><br><span class="line">  lvs_sched wlc</span><br><span class="line">  lvs_method NAT</span><br><span class="line">  persistence_timeout <span class="number">1800</span></span><br><span class="line">  protocol TCP</span><br><span class="line"></span><br><span class="line">  real_server <span class="number">192.168</span><span class="number">.1</span><span class="number">.4</span> <span class="number">6443</span> &#123;</span><br><span class="line">    weight <span class="number">1</span></span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">      connect_port <span class="number">6443</span></span><br><span class="line">      connect_timeout <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>或者使用健康检查脚本<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">haproxy检查脚本：/etc/keepalived/haproxy_check.sh</span><br><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ `ps -C haproxy --no-header |wc <span class="operator">-l</span>` <span class="operator">-eq</span> <span class="number">0</span> ] ; <span class="keyword">then</span></span><br><span class="line">    docker restart k8s-haproxy</span><br><span class="line">    sleep <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> [ `ps -C haproxy --no-header |wc <span class="operator">-l</span>` <span class="operator">-eq</span> <span class="number">0</span> ] ; <span class="keyword">then</span></span><br><span class="line">        service keepalived stop</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;u5B89_u88C5Haproxy_keepalived&quot;&gt;&lt;a href=&quot;#u5B89_u88C5Haproxy_keepalived&quot; class=&quot;headerlink&quot; title=&quot;安装Haproxy keepalived&quot;&gt;&lt;/a&gt;安装Haprox
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>EFK+Filebeat收集日志到kafka和logstash转发</title>
    <link href="http://www.idcsec.com/2019/01/09/EFK+Filebeat%E6%94%B6%E9%9B%86%E6%97%A5%E5%BF%97/"/>
    <id>http://www.idcsec.com/2019/01/09/EFK+Filebeat收集日志/</id>
    <published>2019-01-09T08:26:00.000Z</published>
    <updated>2019-01-18T09:06:54.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u4E00_u3001filebeat"><a href="#u4E00_u3001filebeat" class="headerlink" title="一、filebeat"></a>一、filebeat</h1><p>k8s日志收集方案使用官方推荐的EFK方案F（fluentd），部分宿主机日志使用filebeat<br>filebeat是一个日志文件托运工具，在你的服务器上安装客户端后，filebeat会监控日志目录或者指定的日志文件，追踪读取这些文件（追踪文件的变化，不停的读），并且转发这些信息到elasticsearch或者logstarsh、kafka、redis中存放。Filebeat 所占系统的 CPU 和内存几乎可以忽略不计，filebeat使用Go语言开发运行不依赖环境。<br><img src="https://i.loli.net/2019/01/10/5c36b7e69f537.png" alt="filebeat.png"></p><p>EFK 环境应该部署好,这里主要记录filrbeat-kafka-logstash-es-kibana</p><h1 id="u4E0B_u8F7D_u5B89_u88C5filebeat"><a href="#u4E0B_u8F7D_u5B89_u88C5filebeat" class="headerlink" title="下载安装filebeat"></a>下载安装filebeat</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-<span class="number">6.5</span>.<span class="number">4</span>-x86_64.rpm</span><br><span class="line">rpm -ivh filebeat-<span class="number">1.3</span>.<span class="number">1</span>-x86_64.rpm</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="filebeat_u914D_u7F6E_u6587_u4EF6"><a href="#filebeat_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h1><p>cat filebeat.yml<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############################# Filebeat inputs #########################################</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- input_<span class="built_in">type</span>: <span class="built_in">log</span>  </span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /opt/tomcat7credit/clsp/Application.*         <span class="comment">#日志文件路径可以使用正则表匹配</span></span><br><span class="line">  encoding: GB2312                            <span class="comment">#编码解决tomcat使用非utf-8乱码问题</span></span><br><span class="line">  tags: [<span class="string">"tomcatlogs"</span>]</span><br><span class="line">  multiline.pattern: ^\d&#123;<span class="number">4</span>&#125;                      <span class="comment">#多行合并解决tomcat错误堆栈日志</span></span><br><span class="line">  multiline.negate: <span class="literal">true</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: <span class="number">800</span></span><br><span class="line">  multiline.timeout: <span class="number">1</span></span><br><span class="line">  document_<span class="built_in">type</span>: xxxapplication                     <span class="comment">#新版本已经取消资格type</span></span><br><span class="line"><span class="comment"># 如果设置为trueFilebeat从文件尾开始监控文件新增内容把新增的每一行文件作为一个事件依次发送而不是从文件开始处重新发送所有内容。</span></span><br><span class="line">  tail_files: <span class="literal">true</span></span><br><span class="line">  backoff: <span class="number">1</span>s</span><br><span class="line">  fields:                              <span class="comment">#添加一个标签fields.appname</span></span><br><span class="line">    appname: xxxapplication</span><br><span class="line">- input_<span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    -  /opt/tomcat7thirdtask/thirdtask/apilog.log     </span><br><span class="line">  encoding: GB2312</span><br><span class="line">  multiline.pattern: ^\d&#123;<span class="number">4</span>&#125;</span><br><span class="line">  multiline.negate: <span class="literal">true</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: <span class="number">800</span></span><br><span class="line">  multiline.timeout: <span class="number">1</span></span><br><span class="line">  document_<span class="built_in">type</span>: thirdtaskapilog</span><br><span class="line"><span class="comment"># 如果设置为trueFilebeat从文件尾开始监控文件新增内容把新增的每一行文件作为一个事件依次发送而不是从文件开始处重新发送所有内容。</span></span><br><span class="line">  tail_files: <span class="literal">true</span></span><br><span class="line">  backoff: <span class="number">1</span>s</span><br><span class="line">  fields:</span><br><span class="line">    appname: thirdtaskapilog</span><br><span class="line"><span class="comment">############################# output kafka #########################################</span></span><br><span class="line">output.kafka:</span><br><span class="line">  <span class="comment"># initial brokers for reading cluster metadata</span></span><br><span class="line">   hosts: [<span class="string">"192.168.200.102:9092"</span>,<span class="string">"192.168.200.102:9093"</span>,<span class="string">"192.168.200.102:9094"</span>]</span><br><span class="line">   enabled: <span class="literal">true</span></span><br><span class="line">   <span class="comment"># message topic selection + partitioning</span></span><br><span class="line">   topic: <span class="string">'Applicationlogs'</span></span><br><span class="line">   partition.round_robin:</span><br><span class="line">     reachable_only: <span class="literal">false</span></span><br><span class="line">   required_acks: <span class="number">1</span></span><br><span class="line">   compression: gzip</span><br><span class="line">   max_message_bytes: <span class="number">1000000</span></span><br></pre></td></tr></table></figure></p><p>之前版本使用filebeat.prospectors:</p><h1 id="u914D_u7F6Elogstash_u6D88_u8D39kafka_u7684topic_uFF1AApplicationlogs_u4FE1_u606F"><a href="#u914D_u7F6Elogstash_u6D88_u8D39kafka_u7684topic_uFF1AApplicationlogs_u4FE1_u606F" class="headerlink" title="配置logstash消费kafka的topic：Applicationlogs信息"></a>配置logstash消费kafka的topic：Applicationlogs信息</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  kafka&#123;</span><br><span class="line">        bootstrap_servers =&gt; [<span class="string">"XXXX:9092,XXXX:9093,XXXX:9094"</span>]</span><br><span class="line">        client_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        group_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        auto_offset_reset =&gt; <span class="string">"latest"</span> </span><br><span class="line">        consumer_threads =&gt; <span class="number">1</span></span><br><span class="line">        decorate_events =&gt; <span class="literal">false</span></span><br><span class="line">        topics =&gt; [<span class="string">"k8s-logs"</span>]</span><br><span class="line">truecodec =&gt;[<span class="string">"json"</span>]&#125;</span><br><span class="line">  kafka&#123;</span><br><span class="line">        bootstrap_servers =&gt; [<span class="string">"XXXX:9092,XXXX:9093,XXX:9094"</span>]</span><br><span class="line">        client_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        group_id =&gt; <span class="string">"logs"</span></span><br><span class="line">        consumer_threads =&gt; <span class="number">1</span></span><br><span class="line">        decorate_events =&gt; <span class="literal">false</span></span><br><span class="line">        topics =&gt; [<span class="string">"Applicationlogs"</span>]&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">"Application"</span>&#123;</span><br><span class="line">       date &#123; </span><br><span class="line">truematch =&gt; [ <span class="string">"timestamp"</span>,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>]</span><br><span class="line">        target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">        remove_field =&gt; [<span class="string">"timestamp"</span>]</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">output&#123; </span><br><span class="line"><span class="keyword">if</span> [topics] == [<span class="string">"Applicationlogs"</span>]&#123;</span><br><span class="line">      elasticsearch &#123;</span><br><span class="line">         hosts =&gt; [<span class="string">"XXXX:9200"</span>]</span><br><span class="line">         index =&gt; <span class="string">"nfs-%&#123;[fields][appname]&#125;%&#123;+YYYY-MM-dd&#125;"</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;  </span><br><span class="line"><span class="keyword">if</span> [topics] == [<span class="string">"k8s-logs"</span>]&#123;</span><br><span class="line">  elasticsearch&#123;  </span><br><span class="line">    hosts =&gt; [<span class="string">"XXXX:9200"</span>,<span class="string">"XXXX:9200"</span>]  </span><br><span class="line">    index =&gt; <span class="string">"%&#123;[kubernetes][container_name]&#125;-%&#123;+YYYY-MM&#125;"</span>      </span><br><span class="line">    action =&gt; <span class="string">"index"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果kibana创建index完成。</p><h1 id="u83B7_u53D6_u65E5_u5FD7_u65F6_u95F4_u5B57_u6BB5_u66FF_u6362es_u91CC_u9762_u7684@timestamp_u5B57_u6BB5"><a href="#u83B7_u53D6_u65E5_u5FD7_u65F6_u95F4_u5B57_u6BB5_u66FF_u6362es_u91CC_u9762_u7684@timestamp_u5B57_u6BB5" class="headerlink" title="获取日志时间字段替换es里面的@timestamp字段"></a>获取日志时间字段替换es里面的@timestamp字段</h1><p>例如日志格式<br><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019<span class="tag">-01-09</span> 17<span class="pseudo">:23</span><span class="pseudo">:27</span> <span class="attr_selector">[ http-bio-8080-exec-151:67436064 ]</span> <span class="tag">-</span> <span class="attr_selector">[ INFO ]</span> <span class="tag">com</span><span class="class">.crfchina</span><span class="class">.p2p</span><span class="class">.finance</span><span class="class">.service</span><span class="class">.dao</span><span class="class">.hibernate</span><span class="class">.P2pAccountInfoDaoImpl</span><span class="class">.queryReserver</span>(<span class="tag">P2pAccountInfoDaoImpl</span><span class="class">.java</span><span class="pseudo">:2613)</span> 查询状态为1的结果!</span><br></pre></td></tr></table></figure></p><p>通过<a href="http://grokdebug.herokuapp.com/" target="_blank" rel="external">http://grokdebug.herokuapp.com/</a> 测试解析字段<br><figure class="hljs highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;TIMESTAMP_ISO8601:time&#125;\s\[\s<span class="keyword">*</span>%&#123;JAVAFILE:class&#125;:%&#123;NUMBER:lineNumber&#125;\s<span class="keyword">*</span>\]\s<span class="keyword">*</span>-\s<span class="keyword">*</span>\[\s<span class="keyword">*</span>%&#123;LOGLEVEL:level&#125;\s<span class="keyword">*</span>\]\s(?<span class="variable">&lt;msg&gt;</span>([\s\S]<span class="keyword">*</span>))</span><br></pre></td></tr></table></figure></p><p>配置logstash通过filter-grok解析字段<br>安装插件<br><figure class="hljs highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/logstash/bin/logstash-plugin  install logstash-<span class="built_in">filter</span>-grok  logstash-<span class="built_in">filter</span>-<span class="built_in">date</span></span><br></pre></td></tr></table></figure></p><p>添加filter配置从字段里分析日期格式，然后放入@timestamp字段里。<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### FILTERS</span></span><br><span class="line">filter &#123;</span><br><span class="line">  <span class="keyword">if</span> [fields][appname] == <span class="string">"xxxapplication"</span>&#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">      <span class="comment">#获取xxxapplication 日志字段</span></span><br><span class="line">      match =&gt; &#123;</span><br><span class="line">        <span class="string">"message"</span> =&gt; [</span><br><span class="line">          <span class="comment">#xxxapplication格式</span></span><br><span class="line">            <span class="string">'%&#123;TIMESTAMP_ISO8601:time&#125;\s\[\s*%&#123;JAVAFILE:class&#125;:%&#123;NUMBER:lineNumber&#125;\s*\]\s*-\s*\[\s*%&#123;LOGLEVEL:level&#125;\s*\]\s(?&lt;msg&gt;([\s\S]*))'</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">true&#125;</span><br><span class="line">    date &#123; </span><br><span class="line">truematch =&gt; [ <span class="string">"time"</span>,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>]</span><br><span class="line">        target =&gt; <span class="string">"@timestamp"</span></span><br><span class="line">true&#125;</span><br><span class="line">true     <span class="comment">#移除原有数据</span></span><br><span class="line">      <span class="comment">#remove_field =&gt; ["timestamp"]</span></span><br><span class="line">      <span class="comment">#remove_field =&gt; [ "message" ]</span></span><br><span class="line">   mutate &#123;</span><br><span class="line">       remove_field =&gt;[<span class="string">"message"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>tomcatcatalina日志<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">01</span>-<span class="number">10</span> <span class="number">04</span>:<span class="number">51</span>:<span class="number">59.589</span> <span class="keyword">default</span> [scheduler_Worker-<span class="number">1</span>] INFO  com.zhph.third.utils.BatchCheck - 第<span class="number">0</span>次请求跑批记录控制请求参数：&#123;<span class="string">"startTime"</span>:<span class="string">"2019-01-10 04:00:22"</span>,<span class="string">"runResult"</span>:<span class="string">"0"</span>,<span class="string">"batchName"</span>:<span class="string">"magicReportDaily"</span>,<span class="string">"sysName"</span>:<span class="string">"thirdtask"</span>,<span class="string">"comment"</span>:<span class="string">"成功执行跑批"</span>,<span class="string">"endTime"</span>:<span class="string">"2019-01-10 04:51:59"</span>&#125;</span><br></pre></td></tr></table></figure></p><p>对应grok<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;<span class="tag">TIMESTAMP_ISO8601</span><span class="pseudo">:time</span>&#125;\<span class="tag">s</span>(?&lt;default&gt;[a-z]&#123;<span class="tag">7</span>&#125;)\<span class="tag">s</span>\<span class="attr_selector">[%&#123;JAVAFILE:class&#125;\]</span>\<span class="tag">s%</span>&#123;<span class="tag">LOGLEVEL</span><span class="pseudo">:level</span>&#125;\<span class="tag">s</span>\<span class="tag">s%</span>&#123;<span class="attribute">GREEDYDATA</span>:message&#125;</span><br></pre></td></tr></table></figure></p><p>tomcatcatalina日志<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span>-<span class="number">10</span>-<span class="number">22</span> <span class="number">20</span>:<span class="number">59</span>:<span class="number">22</span>,<span class="number">877</span> INFO com.zjzc.interceptor.ClientAuthInterceptor - authInfo servletPath=/validate/code/send,clientSn=null,access=<span class="literal">true</span><span class="string">",</span></span><br></pre></td></tr></table></figure></p><p>对应grok<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%&#123;TIMESTAMP_ISO8601:time&#125;\s+(?&lt;Level&gt;(\S+))%&#123;GREEDYDATA:message&#125;</span><br></pre></td></tr></table></figure></p><h1 id="tomcat_logs_u65E5_u5FD7"><a href="#tomcat_logs_u65E5_u5FD7" class="headerlink" title="tomcat logs日志"></a>tomcat logs日志</h1><p>filebea配置<br><figure class="hljs highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- input_type: <span class="built_in">log</span></span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    -  /<span class="built_in">opt</span>/tomcat8/localhost_access_log.*</span><br><span class="line"><span class="preprocessor"># 如果设置为trueFilebeat从文件尾开始监控文件新增内容把新增的每一行文件作为一个事件依次发送而不是从文件开始处重新发送所有内容。</span></span><br><span class="line">  tail_files: <span class="literal">true</span></span><br><span class="line">  backoff: <span class="number">1</span>s</span><br><span class="line">  fields:</span><br><span class="line">    appname: tomcataccess</span><br></pre></td></tr></table></figure></p><p>修改tomcat配置文件server.xml<br><figure class="hljs highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  &lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span></span><br><span class="line">         directory=<span class="string">"logs"</span> prefix=<span class="string">"access_log"</span></span><br><span class="line">         suffix=<span class="string">".log"</span> rotatable=<span class="string">"true"</span> resolveHosts=<span class="string">"false"</span></span><br><span class="line">         pattern=<span class="string">"<span class="variable">%h</span> <span class="variable">%l</span> <span class="variable">%u</span> <span class="variable">%t</span> [<span class="variable">%r</span>] <span class="variable">%s</span> [<span class="variable">%&#123;Referer&#125;</span>i] [%&#123;User-Agent&#125;i] <span class="variable">%b</span> <span class="variable">%T</span>"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/Host&gt;</span></span><br></pre></td></tr></table></figure></p><p>日志参数说明<br><a href="http://tomcat.apache.org/tomcat-8.5-doc/config/valve.html#Access_Logging" target="_blank" rel="external">http://tomcat.apache.org/tomcat-8.5-doc/config/valve.html#Access_Logging</a><br><figure class="hljs highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="perl"><span class="variable">%h</span> 访问的用户IP地址</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%l</span> 访问逻辑用户名，通常返回<span class="string">'-'</span></span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%u</span> 访问验证用户名，通常返回<span class="string">'-'</span></span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%t</span> 访问日时</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%r</span> 访问的方式(post或者是get)，访问的资源和使用的http协议版本</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%s</span> 访问返回的http状态</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%b</span> 访问资源返回的流量</span><span class="xml"></span><br><span class="line"></span><span class="perl"><span class="variable">%T</span> 访问所使用的时间</span><span class="xml"></span><br><span class="line">[%&#123;Referer&#125;i] </span><br><span class="line">[%&#123;User-Agent&#125;i]</span></span><br></pre></td></tr></table></figure></p><p>格式<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10.10</span><span class="number">.0</span><span class="number">.100</span> - - [<span class="number">04</span>/Sep/<span class="number">2018</span>:<span class="number">19</span>:<span class="number">54</span>:<span class="number">07</span> +<span class="number">0800</span>] [GET / HTTP/<span class="number">1.1</span>] <span class="number">200</span> [-] [Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">60.0</span><span class="number">.3112</span><span class="number">.113</span> Safari/<span class="number">537.36</span>] <span class="number">5</span> <span class="number">0.104</span></span><br></pre></td></tr></table></figure></p><p>grok过滤<br><figure class="hljs highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">JETTYAUDIT</span> <span class="string">%&#123;IP:clent_ip&#125;</span> (?<span class="symbol">:-|<span class="string">%&#123;USER:logic_user&#125;</span></span>) (?<span class="symbol">:-|<span class="string">%&#123;USER:verification_user&#125;</span></span>) \[<span class="string">%&#123;HTTPDATE:timestamp&#125;</span>\] \[(?<span class="symbol">:<span class="string">%&#123;WORD:http_verb&#125;</span></span> <span class="string">%&#123;NOTSPACE:request_url&#125;</span>(?<span class="symbol">:</span> <span class="constant">HTTP</span>/<span class="string">%&#123;NUMBER:httpversion&#125;</span>)?|<span class="string">%&#123;DATA:rawrequest&#125;</span>)\] <span class="string">%&#123;NUMBER:status&#125;</span> \[(?<span class="symbol">:-|<span class="string">%&#123;NOTSPACE:request_url_2&#125;</span></span>)\] \[<span class="string">%&#123;GREEDYDATA:agent&#125;</span>\] (?<span class="symbol">:-|<span class="string">%&#123;NUMBER:curl_size&#125;</span></span>) (?<span class="symbol">:-|<span class="string">%&#123;NUMBER:responsetime&#125;</span></span>)</span><br></pre></td></tr></table></figure></p><figure class="hljs highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grok &#123;</span><br><span class="line">      patterns_dir =&gt; <span class="string">"/etc/logstash/patterns.d"</span></span><br><span class="line">      <span class="keyword">match</span> =&gt; &#123; <span class="string">"message"</span> =&gt; <span class="string">"%&#123;JETTYAUDIT&#125;"</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>如果默认tomcatgrok格式<br><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line">    if [fields][appname] == <span class="string">"tomcataccess"</span>&#123;</span><br><span class="line">    grok &#123;</span><br><span class="line">        match =&gt; &#123;</span><br><span class="line">            <span class="string">"message"</span> =&gt; [<span class="string">"message"</span>,<span class="string">"%&#123;IPORHOST:clientip&#125; %&#123;USER:ident&#125; %&#123;DATA:auth&#125; \[%&#123;HTTPDATE:timestamp&#125;\] \"</span>(%&#123;WORD:verb&#125; %&#123;NOTSPACE:request&#125; (HTTP/%&#123;NUMBER:httpversion&#125;)?|%&#123;DATA:rawrequest&#125;)\<span class="string">" %&#123;NUMBER:response&#125; (%&#123;NUMBER:bytes&#125;)"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    date &#123;</span><br><span class="line">       match =&gt; [<span class="string">"timestamp"</span>, <span class="string">"dd/MMM/yyyy:HH:mm:ss Z"</span>]</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u4E00_u3001filebeat&quot;&gt;&lt;a href=&quot;#u4E00_u3001filebeat&quot; class=&quot;headerlink&quot; title=&quot;一、filebeat&quot;&gt;&lt;/a&gt;一、filebeat&lt;/h1&gt;&lt;p&gt;k8s日志收集方案使用官方推荐的EFK方案F（fluentd），部分宿主机日志使用filebeat&lt;br&gt;filebeat是一个日志文件托运工具，在你的服务器上安装客户端后，filebeat会监控日志目录或者指定的日志文件，追踪读取这些文件（追踪文件的变化，不停的读），并且转发这些信息到elasticsearch或者logstarsh、kafka、redis中存放。Filebeat 所占系统的 CPU 和内存几乎可以忽略不计，filebeat使用Go语言开发运行不依赖环境。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2019/01/10/5c36b7e69f537.png&quot; alt=&quot;filebeat.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;EFK 环境应该部署好,这里主要记录filrbeat-kafka-logstash-es-kibana&lt;/p&gt;
&lt;h1 id=&quot;u4E0B_u8F7D_u5B89_u88C5filebeat&quot;&gt;&lt;a href=&quot;#u4E0B_u8F7D_u5B89_u88C5filebeat&quot; class=&quot;headerlink&quot; title=&quot;下载安装filebeat&quot;&gt;&lt;/a&gt;下载安装filebeat&lt;/h1&gt;&lt;figure class=&quot;hljs highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-&lt;span class=&quot;number&quot;&gt;6.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh filebeat-&lt;span class=&quot;number&quot;&gt;1.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;-x86_64.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="EFK" scheme="http://www.idcsec.com/categories/EFK/"/>
    
    
      <category term="filebeat" scheme="http://www.idcsec.com/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控网络设备展示Grafana</title>
    <link href="http://www.idcsec.com/2019/01/04/zabbix%E7%9B%91%E6%8E%A7%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2019/01/04/zabbix监控网络设备展示Grafana/</id>
    <published>2019-01-04T06:54:00.000Z</published>
    <updated>2019-01-10T08:57:42.343Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="http://docs.grafana.org/reference/templating/" target="_blank" rel="external">http://docs.grafana.org/reference/templating/</a><br>     <a href="http://docs.grafana.org/features/panels/singlestat/" target="_blank" rel="external">http://docs.grafana.org/features/panels/singlestat/</a></p><h1 id="New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8"><a href="#New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8" class="headerlink" title="New dashboard创建仪表盘"></a>New dashboard创建仪表盘</h1><p><img src="https://i.loli.net/2019/01/04/5c2f055466397.png" alt="zabbix"><br><a id="more"></a><br>设置变-settings-variables</p><h2 id="u83B7_u53D6zabbix_u7EC4"><a href="#u83B7_u53D6zabbix_u7EC4" class="headerlink" title="获取zabbix组"></a>获取zabbix组</h2><p><img src="https://i.loli.net/2019/01/04/5c2f0686c7e6a.png" alt="g2.png"></p><h2 id="u8FC7_u6EE4_u7EC4_u91CC_u9762_u7684_u4E3B_u673A"><a href="#u8FC7_u6EE4_u7EC4_u91CC_u9762_u7684_u4E3B_u673A" class="headerlink" title="过滤组里面的主机"></a>过滤组里面的主机</h2><p>$Group.*<br><img src="https://i.loli.net/2019/01/04/5c2f07276254b.png" alt="g3.png"></p><h2 id="u8FC7_u6EE4_u4E3B_u673A_u63A5_u53E3_u4F7F_u7528_u6B63_u5219_u83B7_u53D6GigabitEthernet_u63A5_u53E3"><a href="#u8FC7_u6EE4_u4E3B_u673A_u63A5_u53E3_u4F7F_u7528_u6B63_u5219_u83B7_u53D6GigabitEthernet_u63A5_u53E3" class="headerlink" title="过滤主机接口使用正则获取GigabitEthernet接口"></a>过滤主机接口使用正则获取GigabitEthernet接口</h2><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query:<span class="variable">$Group</span>.<span class="variable">$Hosts</span>.Interfaces.*</span><br><span class="line">Reagex:/(GigabitEthernet\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;|GigabitEthernet\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;|GigabitEthernet \d&#123;<span class="number">1</span>,&#125;/\d&#123;<span class="number">1</span>,&#125;)/</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/01/04/5c2f09ed05e6e.png" alt="g4.png"></p><h1 id="u521B_u5EFA_Panel"><a href="#u521B_u5EFA_Panel" class="headerlink" title="创建   Panel"></a>创建   Panel</h1><p>1、点击 New Panel 下的 Singlestat 配置采集交换机名<br><img src="https://i.loli.net/2019/01/04/5c2f0b05c6bab.png" alt="获取设备名称.png"><br>2、Panel 下的 Singlestat 配置采集交换机在线时间<br><img src="https://i.loli.net/2019/01/04/5c2f0c42b0ac8.png" alt="获取设备运行时长1.png"><br><img src="https://i.loli.net/2019/01/04/5c2f0ed4c1edf.png" alt="获取设备运行时长2.png"><br>3、New Panel 下的 Singlestat 配置采集交换机 ping 值以确认交换机是否运行正常里选项页的阀值设置为0，1；配置将颜色选项卡的颜色倒置，也即0对应红色(WARNING)，1对应绿色(HEALTHY)。]<br><img src="https://i.loli.net/2019/01/04/5c2f0ef187364.png" alt="设备状1.png"><br><img src="https://i.loli.net/2019/01/04/5c2f0f7039315.png" alt="设备状2.png"><br>4、New Panel 下的 Graph 配置采集流量</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考：&lt;a href=&quot;http://docs.grafana.org/reference/templating/&quot;&gt;http://docs.grafana.org/reference/templating/&lt;/a&gt;&lt;br&gt;     &lt;a href=&quot;http://docs.grafana.org/features/panels/singlestat/&quot;&gt;http://docs.grafana.org/features/panels/singlestat/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8&quot;&gt;&lt;a href=&quot;#New_dashboard_u521B_u5EFA_u4EEA_u8868_u76D8&quot; class=&quot;headerlink&quot; title=&quot;New dashboard创建仪表盘&quot;&gt;&lt;/a&gt;New dashboard创建仪表盘&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/01/04/5c2f055466397.png&quot; alt=&quot;zabbix&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="zabbix Grafana" scheme="http://www.idcsec.com/tags/zabbix-Grafana/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus Node_Exporter监控主机性能展示Grafana</title>
    <link href="http://www.idcsec.com/2018/12/29/Prometheus-Node-Exporter%E7%9B%91%E6%8E%A7%E4%B8%BB%E6%9C%BA%E6%80%A7%E8%83%BD%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2018/12/29/Prometheus-Node-Exporter监控主机性能展示Grafana/</id>
    <published>2018-12-29T03:18:00.000Z</published>
    <updated>2019-01-10T08:58:27.045Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/12/29/5c26e87a05bad.png" alt="Consul"><br><a id="more"></a></p><h1 id="node_exporter_u5B89_u88C5"><a href="#node_exporter_u5B89_u88C5" class="headerlink" title="node_exporter安装"></a>node_exporter安装</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">useradd prometheus -s <span class="regexp">/sbin/</span>nologin</span><br><span class="line"><span class="string">https:</span><span class="comment">//github.com/prometheus/node_exporter/releases/download/v0.16.0/node_exporter-0.16.0.linux-amd64.tar.gz</span></span><br><span class="line">tar -zxvf node_exporter-<span class="number">0.16</span><span class="number">.0</span>.linux-amd64.tar.gz -C <span class="regexp">/home/</span>prometheus<span class="regexp">/ &amp;&amp; mv /</span>home<span class="regexp">/prometheus/</span>node_exporter-<span class="number">0.16</span><span class="number">.0</span>.linux-amd64 <span class="regexp">/home/</span>prometheus/node_exporter</span><br><span class="line"> vi <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>node_exporter.service</span><br><span class="line"> [Unit]</span><br><span class="line">Description=Node Exporter</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=prometheus</span><br><span class="line">ExecStart=<span class="regexp">/home/</span>prometheus/node_exporter</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=<span class="keyword">default</span>.target</span><br></pre></td></tr></table></figure><p>重启服务<br><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">systemctl</span> <span class="tag">daemon-reload</span> &amp;&amp; <span class="tag">systemctl</span> <span class="tag">enable</span> <span class="tag">node_exporter</span><span class="class">.service</span> &amp;&amp; <span class="tag">systemctl</span> <span class="tag">start</span> <span class="tag">node_exporter</span><span class="class">.service</span></span><br></pre></td></tr></table></figure></p><p><a href="http://your_server_ip:9100/metrics" target="_blank" rel="external">http://your_server_ip:9100/metrics</a><br>修改prometheus文件<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi  prometheus.yml</span><br><span class="line"><span class="string">scrape_configs:</span></span><br><span class="line">  - <span class="string">job_name:</span> <span class="string">"node"</span></span><br><span class="line"><span class="label">    scrape_interval:</span> <span class="string">"15s"</span></span><br><span class="line"><span class="label">    target_groups:</span></span><br><span class="line">    - <span class="string">targets:</span> [<span class="string">'NODE_IP:9100'</span>]</span><br></pre></td></tr></table></figure></p><h1 id="Prometheus_u9488_u5BF9nodes_u544A_u8B66_u89C4_u5219_u914D_u7F6E"><a href="#Prometheus_u9488_u5BF9nodes_u544A_u8B66_u89C4_u5219_u914D_u7F6E" class="headerlink" title="Prometheus针对nodes告警规则配置"></a>Prometheus针对nodes告警规则配置</h1><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">groups:</span><br><span class="line">- name: example</span><br><span class="line">  rules:</span><br><span class="line"> </span><br><span class="line">  - alert: 实例丢失</span><br><span class="line">    expr: up&#123;job=<span class="string">"node-exporter"</span>&#125; == <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">1</span>m</span><br><span class="line">    labels:</span><br><span class="line">      severity: page</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 丢失"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 上的任务 &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125; 已经停止了 1 分钟已上了"</span></span><br><span class="line"> </span><br><span class="line">  - alert: 磁盘容量小于 <span class="number">5</span>%</span><br><span class="line">    expr: <span class="number">100</span> - ((node_filesystem_avail_bytes&#123;job=<span class="string">"node-exporter"</span>,mountpoint=~<span class="string">".*"</span>,fstype=~<span class="string">"ext4|xfs|ext2|ext3"</span>&#125; * <span class="number">100</span>) / node_filesystem_size_bytes &#123;job=<span class="string">"node-exporter"</span>,mountpoint=~<span class="string">".*"</span>,fstype=~<span class="string">"ext4|xfs|ext2|ext3"</span>&#125;) &gt; <span class="number">95</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 磁盘不足 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;磁盘 &#123;&#123; <span class="variable">$labels</span>.device &#125;&#125; 资源 已不足 5%, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"内存容量小于 20%"</span></span><br><span class="line">    expr: ((node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Buffers_bytes - node_memory_Cached_bytes) / (node_memory_MemTotal_bytes )) * <span class="number">100</span> &gt; <span class="number">80</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 内存不足 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;内存资源已不足 20%,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"CPU 平均负载大于 4 个"</span></span><br><span class="line">    expr: node_load5 &gt; <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; CPU 负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;CPU 平均负载(5 分钟) 已超过 4 ,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"磁盘读 I/O 超过 30MB/s"</span></span><br><span class="line">    expr: irate(node_disk_<span class="built_in">read</span>_bytes_total&#123;device=<span class="string">"sda"</span>&#125;[<span class="number">1</span>m]) &gt; <span class="number">30000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; I/O 读负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;I/O 每分钟读已超过 30MB/s,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"磁盘写 I/O 超过 30MB/s"</span></span><br><span class="line">    expr: irate(node_disk_written_bytes_total&#123;device=<span class="string">"sda"</span>&#125;[<span class="number">1</span>m]) &gt; <span class="number">30000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; I/O 写负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;I/O 每分钟写已超过 30MB/s,当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"网卡流出速率大于 10MB/s"</span></span><br><span class="line">    expr: (irate(node_network_transmit_bytes_total&#123;device!~<span class="string">"lo"</span>&#125;[<span class="number">1</span>m]) / <span class="number">1000</span>) &gt; <span class="number">1000000</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; 网卡流量负载 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;网卡 &#123;&#123; <span class="variable">$labels</span>.device &#125;&#125; 流量已经超过 10MB/s, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br><span class="line"> </span><br><span class="line">  - alert: <span class="string">"CPU 使用率大于 90%"</span></span><br><span class="line">    expr: <span class="number">100</span> - ((avg by (instance,job,env)(irate(node_cpu_seconds_total&#123;mode=<span class="string">"idle"</span>&#125;[<span class="number">30</span>s]))) *<span class="number">100</span>) &gt; <span class="number">90</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">30</span>s</span><br><span class="line">    annotations:</span><br><span class="line">      sumary: <span class="string">"服务器实例 &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125; CPU 使用率 告警通知"</span></span><br><span class="line">      description: <span class="string">"&#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;CPU 使用率已超过 90%, 当前值: &#123;&#123; <span class="variable">$value</span> &#125;&#125;"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/12/29/5c26e87a05bad.png&quot; alt=&quot;Consul&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="node_exporter" scheme="http://www.idcsec.com/tags/node-exporter/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus+Consul实现自动服务发现</title>
    <link href="http://www.idcsec.com/2018/12/29/Prometheus-Consul%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/"/>
    <id>http://www.idcsec.com/2018/12/29/Prometheus-Consul实现自动服务发现/</id>
    <published>2018-12-29T02:55:00.000Z</published>
    <updated>2019-01-10T08:58:52.612Z</updated>
    
    <content type="html"><![CDATA[<p>prometheus+Consul自动服务发现减少修改修改prometheus.yml重启prometheus等操作</p><h1 id="Consul__u4ECB_u7ECD"><a href="#Consul__u4ECB_u7ECD" class="headerlink" title="Consul 介绍"></a>Consul 介绍</h1><p>Consul有多个组件，但总体而言，它是基础架构中的一款服务发现和配置的工具。 它提供了几个关键功能：<br>服务发现：Consul client 可以提供服务，例如api或mysql，也可以使用Consul client来发现指定服务的提供者。 使用DNS或HTTP，应用程序可以轻松找到他们所依赖的服务。<br>健康检查：Consul client 可以提供任何数量的健康检查，或者与给定的服务（“Web服务器是否返回200 OK”），或与本地节点（“内存利用率是否低于90％”）相关联。 可以使用此信息来监控集群运行状况，服务发现组件使用此信息将流量从有问题的主机中移除出去。<br>KV Store：应用程序可以使用Consul的分层键/值存储，包括动态配置，功能标记，协调，leader选举等等。 简单的HTTP API使其易于使用。<br>多数据中心：Consul支持多个数据中心。 这意味着Consul的用户不必担心构建额外的抽象层以扩展到多个区域。<br>官方架构图<br><img src="https://i.loli.net/2018/12/29/5c26e3aa40037.png" alt="Consul"><br><a id="more"></a><br>端口介绍<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8500</span>，客户端http api接口</span><br><span class="line"><span class="number">8600</span>，客户端DNS服务端口</span><br><span class="line"><span class="number">8400</span>，客户端RPC通信端口</span><br><span class="line"><span class="number">8300</span>，集群server RPC通信接口</span><br><span class="line"><span class="number">8301</span>，集群DC内部通信接口</span><br><span class="line"><span class="number">8302</span>，集群DC之间通信接口</span><br></pre></td></tr></table></figure></p><h1 id="prometheus_u670D_u52A1_u53D1_u73B0_Service_Discovery"><a href="#prometheus_u670D_u52A1_u53D1_u73B0_Service_Discovery" class="headerlink" title="prometheus服务发现 Service Discovery"></a>prometheus服务发现 Service Discovery</h1><p>Prometheus支持多种服务发现机制：文件，DNS，Consul,Kubernetes,OpenStack,EC2等等。基于服务发现的过程并不复杂，通过第三方提供的接口，Prometheus查询到需要监控的Target列表，然后轮训这些Target获取监控数据。</p><h1 id="u672C_u5730_u6D4B_u8BD5_u73AF_u5883_u7684Docker_Compose"><a href="#u672C_u5730_u6D4B_u8BD5_u73AF_u5883_u7684Docker_Compose" class="headerlink" title="本地测试环境的Docker Compose"></a>本地测试环境的Docker Compose</h1><p>使用gliderlabs/registrator监听Docker进程，对于暴露了端口的容器，registrator会自动将该容器暴露的服务地址注册到Consul中。<br>使用NodeExporter采集当前主机数据，cAdvisor采集容器相关数据之prometheus自动发现相关服务<br><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="haml">services:</span><br><span class="line">  consul:</span><br><span class="line">    image: consul</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8600</span><span class="symbol">:</span><span class="number">53</span>/udp</span><br><span class="line"></span>    command: agent -server -client=0.0.0.0 -dev -node=node0 -bootstrap-expect=1 -data-dir=/tmp/consul</span><br><span class="line">    labels:</span><br><span class="line">      SERVICE_IGNORE: 'true'</span><br><span class="line">  registrator:</span><br><span class="line">    image: gliderlabs/registrator</span><br><span class="line">    depends_on:</span><br><span class="line">      -<span class="ruby"> consul</span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /var/<span class="symbol">run:</span>/<span class="symbol">tmp:</span>rw</span><br><span class="line"></span>    command: consul://consul:8500</span><br><span class="line">  prometheus:</span><br><span class="line">    image: quay.io/prometheus/prometheus</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9090</span><span class="symbol">:</span><span class="number">9090</span></span><br><span class="line"></span>  node_exporter:</span><br><span class="line">    image: quay.io/prometheus/node-exporter</span><br><span class="line">    pid: "host"</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9100</span><span class="symbol">:</span><span class="number">9100</span></span><br><span class="line"></span>  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8080</span><span class="symbol">:</span><span class="number">8080</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /<span class="symbol">:/rootfs</span><span class="symbol">:ro</span> </span><br><span class="line"></span>      -<span class="ruby"> /var/<span class="symbol">run:</span>/var/<span class="symbol">run:</span>rw</span><br><span class="line"></span>      -<span class="ruby"> /var/lib/docker/<span class="symbol">:/var/lib/docker</span><span class="symbol">:ro</span></span></span></span><br></pre></td></tr></table></figure></p><h1 id="promethues-yml_u914D_u7F6E_3A"><a href="#promethues-yml_u914D_u7F6E_3A" class="headerlink" title="promethues.yml配置:"></a>promethues.yml配置:</h1><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">global</span>:</span><br><span class="line">  <span class="attribute">scrape_interval</span>: <span class="number">5s</span></span><br><span class="line">  <span class="attribute">scrape_timeout</span>: <span class="number">5s</span></span><br><span class="line">  <span class="attribute">evaluation_interval</span>: <span class="number">15s</span></span><br><span class="line"><span class="attribute">scrape_configs</span>:</span><br><span class="line">  - <span class="attribute">job_name</span>: consul_sd</span><br><span class="line">    <span class="attribute">metrics_path</span>: /metrics</span><br><span class="line">    <span class="attribute">scheme</span>: http</span><br><span class="line">    <span class="attribute">consul_sd_configs</span>:</span><br><span class="line">      - <span class="attribute">server</span>: <span class="attribute">consul</span>:<span class="number">8500</span></span><br><span class="line">        <span class="attribute">scheme</span>: http</span><br><span class="line">        <span class="attribute">services</span>:</span><br><span class="line">          - node_exporter</span><br><span class="line">          - cadvisor</span><br><span class="line">          - prometheus-node</span><br></pre></td></tr></table></figure><h1 id="u9759_u6001_u6CE8_u518C_u65B9_u5F0F_3A"><a href="#u9759_u6001_u6CE8_u518C_u65B9_u5F0F_3A" class="headerlink" title="静态注册方式:"></a>静态注册方式:</h1><p>使用配置文件注册服务，创建文件夹/etc/consul.d 启动指定配置文件目录-config-dir /etc/consul.d<br><figure class="hljs highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> cat consul/nodes-export.json </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"service"</span>:&#123;</span><br><span class="line">    <span class="string">"id"</span>: <span class="string">"node"</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"prometheus-node"</span>,</span><br><span class="line">    <span class="string">"address"</span>: <span class="string">"172.18.241.194"</span>,</span><br><span class="line">    <span class="string">"port"</span>: <span class="number">9100</span>,</span><br><span class="line">    <span class="string">"tags"</span>: [<span class="string">"prometheus-target"</span>],</span><br><span class="line">    <span class="string">"checks"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"http"</span>: <span class="string">"http://172.18.241.194:9100/metrics"</span>,</span><br><span class="line">            <span class="string">"interval"</span>: <span class="string">"15s"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重新加载配置：<br><figure class="hljs highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it <span class="number">7</span>fa7d7e9ead9 consul <span class="built_in">reload</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/12/29/5c26e57674794.png" alt="Consul"><br><img src="https://i.loli.net/2018/12/29/5c26e5768dad8.png" alt="Consul"></p><h1 id="api_u670D_u52A1_u6CE8_u518C_u65B9_u5F0F_uFF1A"><a href="#api_u670D_u52A1_u6CE8_u518C_u65B9_u5F0F_uFF1A" class="headerlink" title="api服务注册方式："></a>api服务注册方式：</h1><p>用http的方式，直接调用/v1/agent/service/register接口注册：<br><figure class="hljs highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -<span class="keyword">d</span> '&#123;<span class="string">"id"</span>: <span class="string">"node"</span>,<span class="string">"name"</span>: <span class="string">"prometheus-node"</span>,<span class="string">"address"</span>: <span class="string">"172.18.241.194"</span>,<span class="string">"port"</span>: 9100,<span class="string">"tags"</span>: [<span class="string">"node-exporter"</span>],<span class="string">"checks"</span>: [&#123;<span class="string">"http"</span>: <span class="string">"http://172.18.241.194:9100/"</span>,<span class="string">"interval"</span>: <span class="string">"5s"</span>&#125;]&#125;'     http:<span class="comment">//localhost:8500/v1/agent/service/register</span></span><br></pre></td></tr></table></figure></p><h1 id="u4FEE_u6539_u540E_u7684compose_u6587_u4EF6"><a href="#u4FEE_u6539_u540E_u7684compose_u6587_u4EF6" class="headerlink" title="修改后的compose文件"></a>修改后的compose文件</h1><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="haml">services:</span><br><span class="line">  consul:</span><br><span class="line">    image: consul</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8400</span><span class="symbol">:</span><span class="number">8400</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8500</span><span class="symbol">:</span><span class="number">8500</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="number">8600</span><span class="symbol">:</span><span class="number">53</span>/udp</span><br><span class="line"></span>    command: agent -server -client=0.0.0.0 -dev -node=node0 -bootstrap-expect=1 -config-dir=/consul/consul.d -data-dir=/tmp/consul</span><br><span class="line">    labels:</span><br><span class="line">      SERVICE_IGNORE: 'true'</span><br><span class="line">    volumes:</span><br><span class="line">      -<span class="ruby"> ./<span class="symbol">consul:</span>/consul/consul.d</span><br><span class="line"></span>  registrator:</span><br><span class="line">    image: gliderlabs/registrator</span><br><span class="line">    depends_on:</span><br><span class="line">      -<span class="ruby"> consul</span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /var/<span class="symbol">run:</span>/<span class="symbol">tmp:</span>rw</span><br><span class="line"></span>    command: consul://consul:8500</span><br><span class="line">  prometheus:</span><br><span class="line">    image: quay.io/prometheus/prometheus</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9090</span><span class="symbol">:</span><span class="number">9090</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">       -<span class="ruby"> ./prometheus.<span class="symbol">yml:</span>/etc/prometheus/prometheus.yml</span><br><span class="line"></span>    command: --config.file=/etc/prometheus/prometheus.yml</span><br><span class="line">  node_exporter:</span><br><span class="line">    image: quay.io/prometheus/node-exporter</span><br><span class="line">    pid: "host"</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">9100</span><span class="symbol">:</span><span class="number">9100</span></span><br><span class="line"></span>  cadvisor:</span><br><span class="line">    image: google/cadvisor:latest</span><br><span class="line">    ports:</span><br><span class="line">      -<span class="ruby"> <span class="number">8080</span><span class="symbol">:</span><span class="number">8080</span></span><br><span class="line"></span>    volumes:</span><br><span class="line">      -<span class="ruby"> /<span class="symbol">:/rootfs</span><span class="symbol">:ro</span> </span><br><span class="line"></span>      -<span class="ruby"> /var/<span class="symbol">run:</span>/var/<span class="symbol">run:</span>rw</span><br><span class="line"></span>      -<span class="ruby"> /var/lib/docker/<span class="symbol">:/var/lib/docker</span><span class="symbol">:ro</span></span></span></span><br></pre></td></tr></table></figure><p><a href="http://consul.la/intro/what-is-consul" target="_blank" rel="external">http://consul.la/intro/what-is-consul</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;prometheus+Consul自动服务发现减少修改修改prometheus.yml重启prometheus等操作&lt;/p&gt;
&lt;h1 id=&quot;Consul__u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#Consul__u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;Consul 介绍&quot;&gt;&lt;/a&gt;Consul 介绍&lt;/h1&gt;&lt;p&gt;Consul有多个组件，但总体而言，它是基础架构中的一款服务发现和配置的工具。 它提供了几个关键功能：&lt;br&gt;服务发现：Consul client 可以提供服务，例如api或mysql，也可以使用Consul client来发现指定服务的提供者。 使用DNS或HTTP，应用程序可以轻松找到他们所依赖的服务。&lt;br&gt;健康检查：Consul client 可以提供任何数量的健康检查，或者与给定的服务（“Web服务器是否返回200 OK”），或与本地节点（“内存利用率是否低于90％”）相关联。 可以使用此信息来监控集群运行状况，服务发现组件使用此信息将流量从有问题的主机中移除出去。&lt;br&gt;KV Store：应用程序可以使用Consul的分层键/值存储，包括动态配置，功能标记，协调，leader选举等等。 简单的HTTP API使其易于使用。&lt;br&gt;多数据中心：Consul支持多个数据中心。 这意味着Consul的用户不必担心构建额外的抽象层以扩展到多个区域。&lt;br&gt;官方架构图&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2018/12/29/5c26e3aa40037.png&quot; alt=&quot;Consul&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="consul" scheme="http://www.idcsec.com/tags/consul/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus系统监控redis展示Grafana</title>
    <link href="http://www.idcsec.com/2018/12/12/Prometheus%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7redis%E5%B1%95%E7%A4%BAGrafana/"/>
    <id>http://www.idcsec.com/2018/12/12/Prometheus系统监控redis展示Grafana/</id>
    <published>2018-12-12T02:54:00.000Z</published>
    <updated>2019-01-10T08:59:11.839Z</updated>
    
    <content type="html"><![CDATA[<p>使用redis_exporter采集Redis指标通过prometheus抓取数据展示Grafana<br><img src="/img/20181212112819.png" alt="pro"><br><a id="more"></a></p><h1 id="exporter_u5B89_u88C5"><a href="#exporter_u5B89_u88C5" class="headerlink" title="exporter安装"></a>exporter安装</h1><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//github.com/oliver006/redis_exporter/releases/download/v0.23.0/redis_exporter-v0.23.0.linux-amd64.tar.gz</span></span><br><span class="line">tar -zxvf redis_exporter-v0.<span class="number">23.0</span><span class="class">.linux-amd64</span><span class="class">.tar</span><span class="class">.gz</span>  -C /opt/redis</span><br></pre></td></tr></table></figure><h1 id="u542F_u52A8redis_exporter_3A"><a href="#u542F_u52A8redis_exporter_3A" class="headerlink" title="启动redis_exporter:"></a>启动redis_exporter:</h1><figure class="hljs highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7000</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9121</span></span><br><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7001</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9122</span></span><br><span class="line"><span class="tag">redis_exporter</span> <span class="tag">-redis</span><span class="class">.addr</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:7002</span> <span class="tag">-redis</span><span class="class">.password</span> 123456 <span class="tag">-web</span><span class="class">.listen-address</span> 192<span class="class">.168</span><span class="class">.2</span><span class="class">.1</span><span class="pseudo">:9123</span></span><br></pre></td></tr></table></figure><p>grafana的redis的模板id763：<a href="https://grafana.com/dashboards/763" target="_blank" rel="external">https://grafana.com/dashboards/763</a><br>prometheus.yml加入redis节点，然后重启prometheus：<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> redis</span><br><span class="line"></span>  static_configs:</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9121'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7000</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9122'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7001</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span> [<span class="string">'192.168.2.1:9123'</span>]</span><br><span class="line"></span>      labels:</span><br><span class="line">        instance: redis-7002</span><br></pre></td></tr></table></figure></p><p>curl -XPOST <a href="http://ip/-/reload" target="_blank" rel="external">http://ip/-/reload</a><br><img src="/img/20181212112749.png" alt="pro"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用redis_exporter采集Redis指标通过prometheus抓取数据展示Grafana&lt;br&gt;&lt;img src=&quot;/img/20181212112819.png&quot; alt=&quot;pro&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
    
      <category term="redis" scheme="http://www.idcsec.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes之minikub安装</title>
    <link href="http://www.idcsec.com/2018/12/01/kubernetes%E4%B9%8Bminikub%E5%AE%89%E8%A3%85/"/>
    <id>http://www.idcsec.com/2018/12/01/kubernetes之minikub安装/</id>
    <published>2018-11-30T17:39:18.000Z</published>
    <updated>2019-01-10T08:59:33.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Minikub_u662F_u4EC0_u4E48_uFF1F"><a href="#Minikub_u662F_u4EC0_u4E48_uFF1F" class="headerlink" title="Minikub是什么？"></a>Minikub是什么？</h1><p>Minikub是一个能够在虚拟（VirtualBox或者Hyper-V）中运行单节点Kubernetes集群的工具，方便开发者可以在本地环境中进行开发和调试Kubernetes。这个工具默认安装和配置了一个Linux VM，Docker和Kubernetes的相关组件，并且提供Dashboard。目前支持在Linux, OS X及Windows上安装<br>安装kubectl</p><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//dl.k8s.io/v1.10.11/kubernetes-client-windows-amd64.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="Minikub_u5B89_u88C5"><a href="#Minikub_u5B89_u88C5" class="headerlink" title="Minikub安装"></a>Minikub安装</h1><p>Minitube是一个独立的Go应用，下载运行就可以<br>Windows 平台<br>下载 minikube-windows-amd64.exe 文件，并重命名为 minikube.exe，然后加入到环境变量路径下即可<br><a id="more"></a><br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube</span><span class="regexp">/releases/v</span>0.<span class="number">24.1</span>/minikube-windows-amd64.exe</span><br></pre></td></tr></table></figure></p><h1 id="u542F_u52A8minikub"><a href="#u542F_u52A8minikub" class="headerlink" title="启动minikub"></a>启动minikub</h1><p>默认启动使用的是 VirtualBox 驱动，使用 –vm-driver 参数可以指定其它驱动。<br><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">设置 docker 加速镜像</span><br><span class="line">minikube <span class="operator"><span class="keyword">start</span> <span class="comment">--registry-mirror=https://registry.docker-cn.com</span></span><br><span class="line">minikube <span class="keyword">status</span> \\查看状态</span><br><span class="line">minikube dashboard \\启动dashbpard</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/20181201102723.png" alt="minikube"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Minikub_u662F_u4EC0_u4E48_uFF1F&quot;&gt;&lt;a href=&quot;#Minikub_u662F_u4EC0_u4E48_uFF1F&quot; class=&quot;headerlink&quot; title=&quot;Minikub是什么？&quot;&gt;&lt;/a&gt;Minikub是什么？&lt;/h1&gt;&lt;p&gt;Minikub是一个能够在虚拟（VirtualBox或者Hyper-V）中运行单节点Kubernetes集群的工具，方便开发者可以在本地环境中进行开发和调试Kubernetes。这个工具默认安装和配置了一个Linux VM，Docker和Kubernetes的相关组件，并且提供Dashboard。目前支持在Linux, OS X及Windows上安装&lt;br&gt;安装kubectl&lt;/p&gt;
&lt;figure class=&quot;hljs highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//dl.k8s.io/v1.10.11/kubernetes-client-windows-amd64.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Minikub_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Minikub_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Minikub安装&quot;&gt;&lt;/a&gt;Minikub安装&lt;/h1&gt;&lt;p&gt;Minitube是一个独立的Go应用，下载运行就可以&lt;br&gt;Windows 平台&lt;br&gt;下载 minikube-windows-amd64.exe 文件，并重命名为 minikube.exe，然后加入到环境变量路径下即可&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>haproxy+kibana日志分析可视化展示平台</title>
    <link href="http://www.idcsec.com/2018/11/24/haproxy-kibana%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B1%95%E7%A4%BA%E5%B9%B3%E5%8F%B0/"/>
    <id>http://www.idcsec.com/2018/11/24/haproxy-kibana日志分析可视化展示平台/</id>
    <published>2018-11-24T12:15:00.000Z</published>
    <updated>2019-01-10T09:00:06.448Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20181124202151.png" alt="kibnan"><br><a id="more"></a></p><h1 id="haproxy_u914D_u7F6E"><a href="#haproxy_u914D_u7F6E" class="headerlink" title="haproxy配置"></a>haproxy配置</h1><p>json格式输出日志到rsyslog日志格式不一定要按照我这个配置。<br><figure class="hljs highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">haproxy.cfg</span><br><span class="line"></span><br><span class="line">global</span><br><span class="line">    <span class="comment"># to have these messages end up in /var/log/haproxy.log you will</span></span><br><span class="line">    <span class="comment"># need to:</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 1) configure syslog to accept network log events.  This is done</span></span><br><span class="line">    <span class="comment">#    by adding the '-r' option to the SYSLOGD_OPTIONS in</span></span><br><span class="line">    <span class="comment">#    /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 2) configure local2 events to go to the /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment">#   file. A line like the following can be added to</span></span><br><span class="line">    <span class="comment">#   /etc/sysconfig/syslog</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#    local2.*                       /var/log/haproxy.log</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="keyword">log</span>         <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span> local3</span><br><span class="line"><span class="keyword">log</span>-<span class="keyword">format</span> &#123;<span class="string">"haproxy_dateTime"</span>:<span class="string">"<span class="variable">%t</span>"</span>,<span class="string">"haproxy_clientIP"</span>:<span class="string">"<span class="variable">%ci</span>"</span>,<span class="string">"haproxy_backendSourceIP"</span>:<span class="string">"<span class="variable">%bi</span>"</span>,<span class="string">"http_request"</span>:<span class="string">"<span class="variable">%r</span>"</span>,<span class="string">"reponse_headers"</span>:<span class="string">"<span class="variable">%hrl</span>"</span>,<span class="string">"status_code"</span>:<span class="variable">%ST</span>,<span class="string">"haproxy_bytesRead"</span>:<span class="string">"<span class="variable">%B</span>"</span>,<span class="string">"haproxy_serverName"</span>:<span class="string">"<span class="variable">%s</span>"</span>,<span class="string">"haproxy_Tw"</span>:<span class="string">"<span class="variable">%Tw</span>"</span>,<span class="string">"haproxy_Tc"</span>:<span class="string">"<span class="variable">%Tc</span>"</span>,<span class="string">"haproxy_Tt"</span>:<span class="string">"<span class="variable">%Tt</span>"</span>&#125;</span><br><span class="line">---</span><br><span class="line"> cat /etc/rsyslog.conf </span><br><span class="line">local3.*     <span class="variable">@@</span><span class="number">192.168</span>.<span class="number">200.75</span>:<span class="number">516</span></span><br></pre></td></tr></table></figure></p><h1 id="lostash_u914D_u7F6E"><a href="#lostash_u914D_u7F6E" class="headerlink" title="lostash配置"></a>lostash配置</h1><figure class="hljs highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@loanaudit02 zhphuser]<span class="comment"># cat /etc/logstash/conf.d/haproxy.conf </span></span><br><span class="line"><span class="comment">#input &#123;</span></span><br><span class="line">input &#123;</span><br><span class="line">truesyslog&#123;</span><br><span class="line">truetruetype =&gt; <span class="string">"haproxy"</span></span><br><span class="line">truetrueport =&gt; <span class="string">"516"</span></span><br><span class="line">true&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">         json &#123;</span><br><span class="line">             source =&gt; <span class="string">"message"</span></span><br><span class="line">             <span class="comment">#target =&gt; "doc"</span></span><br><span class="line">             <span class="comment">#remove_field =&gt; ["message"]</span></span><br><span class="line">         &#125;        </span><br><span class="line">     &#125;</span><br><span class="line">filter &#123;</span><br><span class="line">truegeoip &#123;</span><br><span class="line">        source =&gt; <span class="string">"haproxy_clientIP"</span></span><br><span class="line">        target =&gt; <span class="string">"geoip"</span></span><br><span class="line">        database =&gt; <span class="string">"/usr/local/logstash/config/GeoLite2-City.mmdb"</span> <span class="comment">//ip数据库地址</span></span><br><span class="line">        add_field =&gt; [<span class="string">"[geoip][coordinates]"</span>,<span class="string">"%&#123;[geoip][longitude]&#125;"</span>] <span class="comment">//添加字段coordinates，值为经</span></span><br><span class="line">        add_field =&gt; [<span class="string">"[geoip][coordinates]"</span>,<span class="string">"%&#123;[geoip][latitude]&#125;"</span>] <span class="comment">//添加字段coordinates，值为纬度</span></span><br><span class="line">     &#125;</span><br><span class="line">        mutate &#123;</span><br><span class="line">        convert =&gt; [ <span class="string">"[geoip][coordinates]"</span>, <span class="string">"float"</span>]  </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#filter &#123;</span></span><br><span class="line"><span class="comment"># grok &#123;</span></span><br><span class="line"><span class="comment">#        match =&gt; &#123;</span></span><br><span class="line"><span class="comment">#            "message" =&gt; "%&#123;IPV4:cip&#125;"</span></span><br><span class="line"><span class="comment">#        &#125;</span></span><br><span class="line"><span class="comment">#    &#125;</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">output&#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts=&gt;[<span class="string">"192.168.1.100:9200"</span>]</span><br><span class="line">    index=&gt; <span class="string">"logstash-haproxy-%&#123;+YYYY-MM-DD&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index必须以logstash开头</p><h1 id="geoip_u914D_u7F6E"><a href="#geoip_u914D_u7F6E" class="headerlink" title="geoip配置"></a>geoip配置</h1><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在logstash服务器下载IP地址归类查询库</span><br><span class="line">wget http:<span class="comment">//geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz</span></span><br><span class="line">gunzip GeoLite2-City<span class="class">.mmdb</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure><h1 id="u914D_u7F6Ekibana"><a href="#u914D_u7F6Ekibana" class="headerlink" title="配置kibana"></a>配置kibana</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kibana使用地图统计ip访问地域</span><br><span class="line"></span><br><span class="line">安装logstash插件</span><br><span class="line"><span class="regexp">/usr/</span>share<span class="regexp">/logstash/</span>bin/logstash-plugin install logstash-filter-geoip</span><br><span class="line">kibana.yml最后一行添加使用高德地图</span><br><span class="line">tilemap.<span class="string">url:</span> <span class="string">'http://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;'</span></span><br></pre></td></tr></table></figure><p>下面是kibana自带的几种visualize类型</p><p>类型 　　　　　　　　　　　　　　用途<br>Area chart    　　　　　　用区块图来可视化多个不同序列的总体贡献。<br>Data table    　　　　　　用数据表来显示聚合的原始数据。其他可视化可以通过点击底部的方式显示数据表。<br>Line chart    　　　　　　 用折线图来比较不同序列。<br>Markdown widget    　　 用 Markdown 显示自定义格式的信息或和你仪表盘有关的用法说明。<br>Metric    　　　　　　　　用指标可视化在你仪表盘上显示单个数字。<br>Pie chart    　　　　　　  用饼图来显示每个来源对总体的贡献。<br>Tile map　　　　　　　用瓦片地图将聚合结果和经纬度联系起来。<br>Vertical bar chart    　　 用垂直条形图作为一个通用图形。</p><h2 id="top5ip_u7EDF_u8BA1"><a href="#top5ip_u7EDF_u8BA1" class="headerlink" title="top5ip统计"></a>top5ip统计</h2><p><img src="/img/top5ip统计.png" alt="kibnan"></p><h2 id="u5F53_u524D_u8BF7_u6C42pv"><a href="#u5F53_u524D_u8BF7_u6C42pv" class="headerlink" title="当前请求pv"></a>当前请求pv</h2><p><img src="/img/当前请求pv.png" alt="kibnan"></p><h2 id="u5F53_u524D_u8BF7_u6C42UV"><a href="#u5F53_u524D_u8BF7_u6C42UV" class="headerlink" title="当前请求UV"></a>当前请求UV</h2><p><img src="/img/当前请求UV.png" alt="kibnan"></p><h2 id="u516C_u7F51ip_u5730_u5740_u5206_u5E03"><a href="#u516C_u7F51ip_u5730_u5740_u5206_u5E03" class="headerlink" title="公网ip地址分布"></a>公网ip地址分布</h2><p><img src="/img/20181124205643.png" alt="kibnan"></p><h2 id="u8BF7_u6C42_u54CD_u5E94_u4EE3_u7801_u7EDF_u8BA1"><a href="#u8BF7_u6C42_u54CD_u5E94_u4EE3_u7801_u7EDF_u8BA1" class="headerlink" title="请求响应代码统计"></a>请求响应代码统计</h2><p><img src="/img/请求代码统计.png" alt="kibnan"></p><h2 id="u8BF7_u6C42URL_u7EDF_u8BA1"><a href="#u8BF7_u6C42URL_u7EDF_u8BA1" class="headerlink" title="请求URL统计"></a>请求URL统计</h2><p><img src="/img/请求URL统计.png" alt="kibnan"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/img/20181124202151.png&quot; alt=&quot;kibnan&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="EFK" scheme="http://www.idcsec.com/categories/EFK/"/>
    
    
      <category term="kibana" scheme="http://www.idcsec.com/tags/kibana/"/>
    
      <category term="logstash" scheme="http://www.idcsec.com/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>使用Let&#39;s Encrypt自动更新kubernetes ingressHTTPS</title>
    <link href="http://www.idcsec.com/2018/11/21/%E4%BD%BF%E7%94%A8Let-s-Encrypt%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0kubernetes-ingressHTTPS/"/>
    <id>http://www.idcsec.com/2018/11/21/使用Let-s-Encrypt自动更新kubernetes-ingressHTTPS/</id>
    <published>2018-11-21T07:57:25.000Z</published>
    <updated>2019-01-10T09:10:03.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1"><a href="#u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1" class="headerlink" title="用 <a href=" https:="" letsencrypt.org="" "="">Letsencrypt</a> 来签发凭证">用 <a href="https://letsencrypt.org/" target="_blank" rel="external">Letsencrypt</a> 来签发凭证</h1><p> 为我们管理SSL / TLS证书的组件是Cert manager。它将为每个入口端点自动创建新证书。此外，它将在证书过期时自动续订。<br><a href="https://certbot.eff.org/lets-encrypt/centosrhel7-nginx" target="_blank" rel="external">手动申请证书</a>安装 certbot,参考官方教程</p><h1 id="kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS"><a href="#kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS" class="headerlink" title="kubernetes 自动申请配置TLS"></a>kubernetes 自动申请配置TLS</h1><h2 id="u4F7F_u7528helm_u5B89_u88C5cert-manager"><a href="#u4F7F_u7528helm_u5B89_u88C5cert-manager" class="headerlink" title="使用helm安装cert-manager"></a>使用helm安装cert-manager</h2><p>如果群集未启用 RBAC，添加：–set rbac.create=false \<br>  –set serviceAccount.create=false<br><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">helm <span class="operator"><span class="keyword">install</span> \</span><br><span class="line">    <span class="comment">--name cert-manager \</span></span><br><span class="line">    <span class="comment">--namespace kube-system \</span></span><br><span class="line">    stable/cert-manager</span><br><span class="line">kubectl <span class="keyword">get</span> pod -<span class="keyword">n</span> ingress <span class="comment">--selector=app=cert-manage</span></span></span><br></pre></td></tr></table></figure></p><p>安装clusterissuers，指示Cert Manager使用Let的https。替换你的电子邮件地址<br>证书管理器必须有 Issuer 或 ClusterIssuer 资源，才能颁发证书。 这两种 Kubernetes 资源的功能完全相同，区别在于 Issuer 适用于单一命名空间，而 ClusterIssuer 适用于所有命名空间这里只讲ClusterIssuer</p><h1 id="ClusterIssuers"><a href="#ClusterIssuers" class="headerlink" title="ClusterIssuers"></a>ClusterIssuers</h1><p>cat certificate-issuer.yaml<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">apiVersion:</span> certmanager.k8s.io/v1alpha1</span><br><span class="line"><span class="string">kind:</span> ClusterIssuer</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> letsencrypt-prod</span><br><span class="line"><span class="label">  namespace:</span> <span class="keyword">default</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  acme:</span></span><br><span class="line"><span class="label">    email:</span> root<span class="annotation">@idcsec</span>.com</span><br><span class="line"><span class="label">    server:</span> <span class="string">https:</span><span class="comment">//acme-v01.api.letsencrypt.org/directory</span></span><br><span class="line"><span class="label">    privateKeySecretRef:</span></span><br><span class="line"><span class="label">      name:</span> letsencrypt-prod</span><br><span class="line"><span class="label">    http01:</span> &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>metadata.name 是我们创建的签发机构的名称，后面我们创建证书的时候会引用它<br>spec.acme.email 是你自己的邮箱，证书快过期的时候会有邮件提醒，不过 cert-manager 会利用 acme 协议自动给我们重新颁发证书来续期<br>spec.acme.server 是 acme 协议的服务端，我们这里用 Let’s Encrypt，这个地址就写死成这样就行<br>spec.acme.privateKeySecretRef 指示此签发机构的私钥将要存储到哪个 Secret 对象中，名称不重要<br>spec.acme.http01 这里指示签发机构使用 HTTP-01 的方式进行 acme 协议 (还可以用 DNS 方式，acme 协议的目的是证明这台机器和域名都是属于你的，然后才准许给你颁发证书)<br><a id="more"></a><br>kubectl apply -f certificate-issuer.yaml<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这使我们能够在任何命名空间中创建Ingress。</span><br><span class="line">只需更改<span class="number">1</span>个annotations:</span><br><span class="line">certmanager<span class="class">.k8s</span><span class="class">.io</span>/cluster-issuer: letsencrypt-prod</span><br></pre></td></tr></table></figure></p><h1 id="u521B_u5EFA_u8BC1_u4E66_u5BF9_u8C61"><a href="#u521B_u5EFA_u8BC1_u4E66_u5BF9_u8C61" class="headerlink" title="创建证书对象"></a>创建证书对象</h1><p>接下来，必须创建证书资源。 证书资源定义了必需的 X.509 证书。参考<a href="https://cert-manager.readthedocs.io/en/latest/reference/certificates.html" target="_blank" rel="external">cert-manager 证书</a><br>cert-manager具有“证书”的概念，用于定义所需的X.509证书。证书是一种命名空间资源，它引用Issuer或ClusterIssuer以获取有关如何获取证书的信息。<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: certmanager<span class="class">.k8s</span><span class="class">.io</span>/v1alpha1   </span><br><span class="line">kind: Certificate  </span><br><span class="line">meteadata:   </span><br><span class="line"> name: tls-idcsec<span class="class">.com</span>   </span><br><span class="line"> namespace: ingress-nginx   </span><br><span class="line">spec:   </span><br><span class="line"> secretName: tls-idcsec<span class="class">.com</span>  </span><br><span class="line"> issuerRef:  </span><br><span class="line"> name: letsencrypt-prod   </span><br><span class="line"> kind: ClusterIssuer   </span><br><span class="line"> commonName: www<span class="class">.mydomain</span><span class="class">.com</span>   </span><br><span class="line"> dnsNames:   </span><br><span class="line"> - www<span class="class">.idecsec</span><span class="class">.com</span>   </span><br><span class="line"> - test<span class="class">.idcsec</span><span class="class">.com</span>   </span><br><span class="line"> acme:   </span><br><span class="line">   config:  </span><br><span class="line">   - http01:   </span><br><span class="line">        ingressClass: <span class="attribute">none</span></span><br><span class="line">     domains:  </span><br><span class="line">     - www<span class="class">.idecsec</span><span class="class">.com</span>   </span><br><span class="line">     - test<span class="class">.idcsec</span><span class="class">.com</span> </span><br><span class="line">kubectl apply -f certificates.yaml</span><br></pre></td></tr></table></figure></p><h1 id="ingress-nginx_u914D_u7F6Ehttps"><a href="#ingress-nginx_u914D_u7F6Ehttps" class="headerlink" title="ingress-nginx配置https"></a>ingress-nginx配置https</h1><figure class="hljs highlight"><figcaption><span>Ingress</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions/v1beta1&#10;metadata:&#10;  name: $&#123;projectSvc&#125;&#10;  annotations:&#10;    certmanager.k8s.io/cluster-issuer: letsencrypt-prod&#10;    ingress.kubernetes.io/ssl-redirect: &#34;False&#34; &#26159;&#21542;&#24378;&#21046;&#36339;&#36716;https&#10;spec:&#10;  tls:&#10;  - hosts: &#10;    - $&#123;projectUrl&#125;&#10;    secretName: https-secret&#10;  rules:&#10;  - host:  $&#123;projectUrl&#125;&#10;    http:&#10;      paths:&#10;      - path: /&#10;        backend:&#10;          serviceName: $&#123;projectSvc&#125;&#10;          servicePort: 80</span><br></pre></td></tr></table></figure><h1 id="u6E05_u7406_u8D44_u6E90"><a href="#u6E05_u7406_u8D44_u6E90" class="headerlink" title="清理资源"></a>清理资源</h1><figure class="hljs highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="operator"><span class="keyword">delete</span> -<span class="keyword">f</span> certificates.yaml</span><br><span class="line">kubectl <span class="keyword">delete</span> -<span class="keyword">f</span> cluster-issuer.yaml</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1&quot;&gt;&lt;a href=&quot;#u7528_Letsencrypt__u6765_u7B7E_u53D1_u51ED_u8BC1&quot; class=&quot;headerlink&quot; title=&quot;用 &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Letsencrypt&lt;/a&gt; 来签发凭证&quot;&gt;&lt;/a&gt;用 &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Letsencrypt&lt;/a&gt; 来签发凭证&lt;/h1&gt;&lt;p&gt; 为我们管理SSL / TLS证书的组件是Cert manager。它将为每个入口端点自动创建新证书。此外，它将在证书过期时自动续订。&lt;br&gt;&lt;a href=&quot;https://certbot.eff.org/lets-encrypt/centosrhel7-nginx&quot;&gt;手动申请证书&lt;/a&gt;安装 certbot,参考官方教程&lt;/p&gt;
&lt;h1 id=&quot;kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS&quot;&gt;&lt;a href=&quot;#kubernetes__u81EA_u52A8_u7533_u8BF7_u914D_u7F6ETLS&quot; class=&quot;headerlink&quot; title=&quot;kubernetes 自动申请配置TLS&quot;&gt;&lt;/a&gt;kubernetes 自动申请配置TLS&lt;/h1&gt;&lt;h2 id=&quot;u4F7F_u7528helm_u5B89_u88C5cert-manager&quot;&gt;&lt;a href=&quot;#u4F7F_u7528helm_u5B89_u88C5cert-manager&quot; class=&quot;headerlink&quot; title=&quot;使用helm安装cert-manager&quot;&gt;&lt;/a&gt;使用helm安装cert-manager&lt;/h2&gt;&lt;p&gt;如果群集未启用 RBAC，添加：–set rbac.create=false \&lt;br&gt;  –set serviceAccount.create=false&lt;br&gt;&lt;figure class=&quot;hljs highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;helm &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;--name cert-manager \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;--namespace kube-system \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stable/cert-manager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kubectl &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; pod -&lt;span class=&quot;keyword&quot;&gt;n&lt;/span&gt; ingress &lt;span class=&quot;comment&quot;&gt;--selector=app=cert-manage&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装clusterissuers，指示Cert Manager使用Let的https。替换你的电子邮件地址&lt;br&gt;证书管理器必须有 Issuer 或 ClusterIssuer 资源，才能颁发证书。 这两种 Kubernetes 资源的功能完全相同，区别在于 Issuer 适用于单一命名空间，而 ClusterIssuer 适用于所有命名空间这里只讲ClusterIssuer&lt;/p&gt;
&lt;h1 id=&quot;ClusterIssuers&quot;&gt;&lt;a href=&quot;#ClusterIssuers&quot; class=&quot;headerlink&quot; title=&quot;ClusterIssuers&quot;&gt;&lt;/a&gt;ClusterIssuers&lt;/h1&gt;&lt;p&gt;cat certificate-issuer.yaml&lt;br&gt;&lt;figure class=&quot;hljs highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;apiVersion:&lt;/span&gt; certmanager.k8s.io/v1alpha1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;kind:&lt;/span&gt; ClusterIssuer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;metadata:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;  name:&lt;/span&gt; letsencrypt-prod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;  namespace:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;spec:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;  acme:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    email:&lt;/span&gt; root&lt;span class=&quot;annotation&quot;&gt;@idcsec&lt;/span&gt;.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    server:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;https:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//acme-v01.api.letsencrypt.org/directory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    privateKeySecretRef:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;      name:&lt;/span&gt; letsencrypt-prod&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    http01:&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;metadata.name 是我们创建的签发机构的名称，后面我们创建证书的时候会引用它&lt;br&gt;spec.acme.email 是你自己的邮箱，证书快过期的时候会有邮件提醒，不过 cert-manager 会利用 acme 协议自动给我们重新颁发证书来续期&lt;br&gt;spec.acme.server 是 acme 协议的服务端，我们这里用 Let’s Encrypt，这个地址就写死成这样就行&lt;br&gt;spec.acme.privateKeySecretRef 指示此签发机构的私钥将要存储到哪个 Secret 对象中，名称不重要&lt;br&gt;spec.acme.http01 这里指示签发机构使用 HTTP-01 的方式进行 acme 协议 (还可以用 DNS 方式，acme 协议的目的是证明这台机器和域名都是属于你的，然后才准许给你颁发证书)&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IPv6隧道技术轻松通过苹果ipv6-only审核</title>
    <link href="http://www.idcsec.com/2018/11/19/IPv6%E9%9A%A7%E9%81%93%E6%8A%80%E6%9C%AF%E8%BD%BB%E6%9D%BE%E9%80%9A%E8%BF%87%E8%8B%B9%E6%9E%9Cipv6-only%E5%AE%A1%E6%A0%B8/"/>
    <id>http://www.idcsec.com/2018/11/19/IPv6隧道技术轻松通过苹果ipv6-only审核/</id>
    <published>2018-11-19T14:54:00.000Z</published>
    <updated>2019-01-10T09:10:22.032Z</updated>
    
    <content type="html"><![CDATA[<p>如果使用阿里云的服务器并且域名备案接入商是阿里就购买阿里云提供的ipv6地址（通过ipv6转ipv4<br>）</p><p>以下是通过<a href="https://www.tunnelbroker.net提供的ipv6隧道方法" target="_blank" rel="external">https://www.tunnelbroker.net提供的ipv6隧道方法</a></p><h1 id="centos7_u5F00_u542Fipv6_u652F_u6301"><a href="#centos7_u5F00_u542Fipv6_u652F_u6301" class="headerlink" title="centos7开启ipv6支持"></a>centos7开启ipv6支持</h1><p>vim /etc/modprobe.d/disable_ipv6.conf<br><figure class="hljs highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword"><span class="common">options</span></span> ipv6 disable=0</span><br></pre></td></tr></table></figure></p><p>vim /etc/sysconfig/networ<br><figure class="hljs highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">NETWORKING_IPV6=<span class="value"><span class="keyword">yes</span></span></span></span><br></pre></td></tr></table></figure></p><p>vim /etc/sysctl.conf<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.all</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.default</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br><span class="line">net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.lo</span><span class="class">.disable_ipv6</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>配置完最好重启一下<br>reboot</p><h1 id="u6CE8_u518C_u8D26_u53F7"><a href="#u6CE8_u518C_u8D26_u53F7" class="headerlink" title="注册账号"></a>注册账号</h1><p><a href="https://www.tunnelbroker.net注册账号" target="_blank" rel="external">https://www.tunnelbroker.net注册账号</a><br>创建一个ipv6 tunnel<br><img src="/img/ipv61.png" alt="ipv6"><br><img src="/img/ipv62.png" alt="monitoring"><br>这centos7选择linux-net-tools按照命令执行完查看<br>添加dns<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/resolv.conf </span><br><span class="line">nameserver <span class="number">2001</span>:<span class="number">4860</span>:<span class="number">4860</span>::<span class="number">8888</span></span><br><span class="line">nameserver <span class="number">2001</span>:<span class="number">4860</span>:<span class="number">4860</span>::<span class="number">8844</span></span><br></pre></td></tr></table></figure></p><p>ping6 ipv6.google.com<br>nginx转发配置<br><figure class="hljs highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80<span class="comment">;</span></span><br><span class="line">listen  [<span class="number">::</span>]:80<span class="comment">;</span></span><br><span class="line">server_name  test.idcsec.com<span class="comment">;</span></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">#charset koi8-r<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"> #  access_log  logs/wangting.access.log  main<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    root   html<span class="comment">;</span></span><br><span class="line">    index  index  index.html index.htm<span class="comment">;</span></span><br><span class="line">    proxy_pass   http://test.idcsec.com.com<span class="comment">;</span></span><br><span class="line">    proxy_redirect off<span class="comment">;</span></span><br><span class="line">    # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span><br><span class="line">    proxy_set_header  Host  "test.idcsec.com"<span class="comment">;</span></span><br><span class="line">    proxy_set_header  X-Real-IP  $remote_addr<span class="comment">;</span></span><br><span class="line">    proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for<span class="comment">;</span></span><br><span class="line">    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>域名添加4A解析<br>验证<br> <a href="http://ipv6-test.com/validate.php" target="_blank" rel="external">http://ipv6-test.com/validate.php</a><br> 页面代理服务ipv6网站www.ipv6proxy.net/index.php</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果使用阿里云的服务器并且域名备案接入商是阿里就购买阿里云提供的ipv6地址（通过ipv6转ipv4&lt;br&gt;）&lt;/p&gt;
&lt;p&gt;以下是通过&lt;a href=&quot;https://www.tunnelbroker.net提供的ipv6隧道方法&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="linux" scheme="http://www.idcsec.com/categories/linux/"/>
    
    
      <category term="ipv6 linux" scheme="http://www.idcsec.com/tags/ipv6-linux/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus监控container的告警规则</title>
    <link href="http://www.idcsec.com/2018/11/05/Prometheus%E7%9B%91%E6%8E%A7container%E7%9A%84%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99/"/>
    <id>http://www.idcsec.com/2018/11/05/Prometheus监控container的告警规则/</id>
    <published>2018-11-05T11:44:00.000Z</published>
    <updated>2018-11-05T11:56:17.798Z</updated>
    
    <content type="html"><![CDATA[<p>修改Prometheus.yml文件<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">rules.yml: |</span><br><span class="line">   groups:</span><br><span class="line">   - name: container.rules</span><br><span class="line">     rules:</span><br><span class="line">     - alert: Container_Memory_RSS</span><br><span class="line">       expr: ((sum(container_memory_rss&#123;job=<span class="string">"kubernetes-cadvisor"</span>,pod_name!=<span class="string">""</span>&#125;) by (pod_name)) /(sum(container_spec_memory_limit_bytes&#123;job=<span class="string">"kubernetes-cadvisor"</span>,pod_name!=<span class="string">""</span>&#125;) by (pod_name)) * <span class="number">100</span>) &gt; <span class="number">95</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary: <span class="string">"检测内存使用率过高"</span></span><br><span class="line">         description:  <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;内存持续2分钟高于95%. 当前值: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_Network_RX_Average</span><br><span class="line">       expr: ((sum (rate (container_network_receive_bytes_total&#123;job=<span class="string">"kubernetes-nodes"</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) by (pod_name)) / <span class="number">1024</span>) &gt; <span class="number">102400</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测网络带宽使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;网络带宽持续2分钟高于 100M. RX带宽使用率: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_Network_TX_Average</span><br><span class="line">       expr: ((sum (rate (container_network_transmit_bytes_total&#123;job=<span class="string">"kubernetes-nodes"</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) by (pod_name)) / <span class="number">1024</span>) &gt; <span class="number">102400</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测网络带宽使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;网络带宽持续2分钟高于 100M. TX带宽使用率: &#123;&#123; $value &#125;&#125;"</span></span><br><span class="line">     - alert: Container_USAGE_CPU_Average</span><br><span class="line">       expr: ((sum(rate(container_cpu_usage_seconds_total&#123;job=<span class="string">"kubernetes-nodes"</span>,image!=<span class="string">""</span>,pod_name!=<span class="string">""</span>&#125;[<span class="number">1</span>m])) BY (pod_name)) * <span class="number">100</span>) &gt; <span class="number">95</span></span><br><span class="line">       <span class="keyword">for</span>: <span class="number">2</span>m</span><br><span class="line">       labels:</span><br><span class="line">         severity: critica</span><br><span class="line">       annotations:</span><br><span class="line">         summary:  <span class="string">"检测CPU平均使用率过高."</span></span><br><span class="line">         description: <span class="string">"&#123;&#123; $labels.pod_name &#125;&#125;CPU持续2分钟高于高于95% 当前值: &#123;&#123; $value &#125;&#125;"</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改Prometheus.yml文件&lt;br&gt;&lt;figure class=&quot;hljs highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="Prometheus" scheme="http://www.idcsec.com/tags/Prometheus/"/>
    
      <category term="alertmanager" scheme="http://www.idcsec.com/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes的Pod健康检查</title>
    <link href="http://www.idcsec.com/2018/11/02/kubernetes%E7%9A%84Pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/"/>
    <id>http://www.idcsec.com/2018/11/02/kubernetes的Pod健康检查/</id>
    <published>2018-11-02T06:38:00.000Z</published>
    <updated>2018-11-02T06:46:11.433Z</updated>
    
    <content type="html"><![CDATA[<p>参考<br><a href="https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/" target="_blank" rel="external">https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/</a></p><p>###进程健康检查<br>健康检查最简单的方式就是检查进程的状态。Kubelet 不断的询问 Docker daemon 这个容器进程是否还在运行，如果没有，这个容器就会被重启。目前在所有 Kubernetes 的案例中，这种健康检查是一直开启的。对与 Kubernetes 中所有运行的容器都是生效的。然而，在很多场景中这个低级别的健康检查是没有作用的：比如进程也一直在运行，但是从应用的角度看，代码已经死锁，而且不会有正确的响应。</p><p>###Pod健康检测机制<br>LivenessProbe探针：<br>用于判断容器是否存活，即Pod是否为running状态，如果LivenessProbe探针探测到容器不健康，则kubelet将kill掉容器，并根据容器的重启策略是否重启，如果一个容器不包含LivenessProbe探针，则Kubelet认为容器的LivenessProbe探针的返回值永远成功。<br>ReadinessProbe探针：<br>用于判断容器是否正常提供服务，即容器的Ready是否为True，是否可以接收请求，如果ReadinessProbe探测失败，则容器的Ready将为False，控制器将此Pod的Endpoint从对应的service的Endpoint列表中移除，从此不再将任何请求调度此Pod上，直到下次探测成功。（剔除此pod不参与接收请求不会将流量转发给此Pod）</p><p>目前，有三种类型的应用健康检查你可以选择：<br>exec：通过执行命令来检查服务是否正常，回值为0则表示容器健康<br>httpGet方式：通过发送http请求检查服务是否正常，返回200-399状态码则表明容器健康<br>tcpSocket：通过容器的IP和Port执行TCP检查，如果能够建立TCP连接，则表明容器健康</p><p>###探测的结果有以下三者之一：<br>Success：Container通过了检查。<br>Failure：Container未通过检查。<br>Unknown：未能执行检查，因此不采取任何措施。</p><p>####本环境使用httpGet方式<br>示例：<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">    readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /</span><br><span class="line">            port: <span class="number">80</span></span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: <span class="number">120</span> </span><br><span class="line">          periodSeconds: <span class="number">15</span> </span><br><span class="line">          timeoutSeconds: <span class="number">2</span></span><br><span class="line">    livenessProbe: </span><br><span class="line">          httpGet: </span><br><span class="line">            path: /</span><br><span class="line">            port: <span class="number">80</span></span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: <span class="number">180</span> </span><br><span class="line">          timeoutSeconds: <span class="number">2</span></span><br><span class="line">          periodSeconds: <span class="number">15</span></span><br><span class="line">----------</span><br></pre></td></tr></table></figure></p><p>initialDelaySeconds：容器启动后第一次执行探测是需要等待多少秒。<br>periodSeconds：执行探测的频率。默认是10秒，最小1秒。<br>timeoutSeconds：探测超时时间。默认1秒，最小1秒。<br>successThreshold：探测失败后，最少连续探测成功多少次才被认定为成功。默认是1。对于liveness必须是1。最小值是1。<br>failureThreshold：探测成功后，最少连续探测失败多少次才被认定为失败。默认是3。最小值是1。</p><p>####httpGet探测方式有如下可选的控制字段<br>host：要连接的主机名，默认为Pod IP，可以在http request head中设置host头部。<br>httpHeaders:</p><pre><code>- name: X-Custom-Header  value: Awesome</code></pre><p>scheme: 用于连接host的协议，默认为HTTP。<br>path：http服务器上的访问URI。<br>httpHeaders：自定义HTTP请求headers，HTTP允许重复headers。<br>port： 容器上要访问端口号或名称<br>对于LivenessProbe和ReadinessProbe用法都一样，拥有相同的参数和相同的监测方式。<br>当前对每一个Container都可以设置不同的restartpolicy，有三种值可以设置：<br>Always : 只要container退出就重新启动<br>OnFailure : 当container非正常退出后重新启动<br>Never : 从不进行重新启动<br>restartPolicy: [Always|Never|OnFailure]//重启策略<br>如果restartpolicy没有设置，那么默认值是Always。如果container需要重启，仅仅是通过kubelet在当前节点进行container级别的重启。<br>如果要使用ReadinessProbe只需要将livenessProbe修改为readinessProbe即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&quot; target=&quot;_blank&quot; rel=&quot;extern
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="pod" scheme="http://www.idcsec.com/tags/pod/"/>
    
  </entry>
  
  <entry>
    <title>使用Prometheus的blackbox_exporter进行网络监控</title>
    <link href="http://www.idcsec.com/2018/10/28/%E4%BD%BF%E7%94%A8Prometheus%E7%9A%84blackbox-exporter%E8%BF%9B%E8%A1%8C%E7%BD%91%E7%BB%9C%E7%9B%91%E6%8E%A7/"/>
    <id>http://www.idcsec.com/2018/10/28/使用Prometheus的blackbox-exporter进行网络监控/</id>
    <published>2018-10-27T16:44:00.000Z</published>
    <updated>2018-10-29T14:15:04.592Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20181028004809.png" alt="monitoring"></p><p>使用Prometheus的blackbox_exporter进行网络监控<br><img src="http://showdoc.zhph.lan/Public/Uploads/2018-10-15/5bc3e8988eaba.png" alt=""></p><ul><li>Prometheus提供了一个blackbox_exporter可以实现网络监控，支持http、dns、tcp、icmp等监控。</li></ul><p>其中9115是这个exporter的http端点的监听端口，blackbox.yml是它的配置文件，需要在其中使用blackbox_exporter的http、dns、tcp、icmp等prober定制配置出各种监测模块(module)。关于blackbox_exporter的配置具体参考Blackbox exporter configuration和Blackbox exporter configuration Exmaple。下面的例子是一个最基本的配置：<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">modules</span>:</span><br><span class="line">  <span class="attribute">http_2xx</span>:  # http 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">  <span class="attribute">http_post_2xx</span>: # http post 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">method</span>: POST</span><br><span class="line">  <span class="attribute">tcp_connect</span>: # tcp 监测模块</span><br><span class="line">    <span class="attribute">prober</span>: tcp</span><br><span class="line">  <span class="attribute">ping</span>: # icmp 检测模块</span><br><span class="line">    <span class="attribute">prober</span>: icmp</span><br><span class="line">    <span class="attribute">timeout</span>: <span class="number">5s</span></span><br><span class="line">    <span class="attribute">icmp</span>:</span><br><span class="line">      <span class="attribute">preferred_ip_protocol</span>: <span class="string">"ip4"</span></span><br><span class="line">      <span class="attribute">dns</span>:</span><br><span class="line">       <span class="attribute">transport_protocol</span>: <span class="string">"tcp"</span></span><br><span class="line">       <span class="attribute">preferred_ip_protocol</span>: <span class="string">"ip4"</span></span><br><span class="line">       <span class="attribute">query_name</span>: <span class="string">"kubernetes.default.svc.cloud.ctrm"</span>  # 利用这个域名来检查 dns 服务器</span><br><span class="line">       <span class="attribute">query_type</span>: <span class="string">"A"</span>  # 如果是 kube-dns ，一定要加入这个</span><br></pre></td></tr></table></figure></p><p>在Prometheus的配置文件中配置使用ping module：<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'ping_all'</span></span><br><span class="line"></span>    scrape_interval: 1m</span><br><span class="line">    metrics_path: /probe</span><br><span class="line">    params:</span><br><span class="line">      module: [ping]</span><br><span class="line">    static_configs:</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>        -<span class="ruby"> <span class="number">192.168</span>.<span class="number">1.2</span></span><br><span class="line"></span>       labels:</span><br><span class="line">         instance: node2</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>        -<span class="ruby"> <span class="number">192.168</span>.<span class="number">1.3</span></span><br><span class="line"></span>       labels:</span><br><span class="line">         instance: node3</span><br><span class="line">    relabel_configs:</span><br><span class="line">      -<span class="ruby"> <span class="symbol">source_labels:</span> [__address_<span class="number">_</span>]</span><br><span class="line"></span>        target_label: __param_target</span><br><span class="line">      -<span class="ruby"> <span class="symbol">target_label:</span> __address_<span class="number">_</span></span><br><span class="line"></span>        replacement: 127.0.0.1:9115 # black_exporter服务器的地址</span><br></pre></td></tr></table></figure></p><p>测试<br>curl “<a href="http://127.0.0.1:9115/probe?module=ping&amp;target=192.168.1.2" target="_blank" rel="external">http://127.0.0.1:9115/probe?module=ping&amp;target=192.168.1.2</a>“<br>http检测<br>Blackbox 配置了 http_2xx 模块，所以这里只需要在 Prometheus的配置文件中配置使用http_2xx module<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'blackbox'</span></span><br><span class="line"></span>  metrics_path: /probe</span><br><span class="line">  params:</span><br><span class="line">    module: [http_2xx]  # Look for a HTTP 200 response.</span><br><span class="line">  static_configs:</span><br><span class="line">    -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>      -<span class="ruby"> <span class="symbol">http:</span>/<span class="regexp">/prometheus.io    # Target to probe with http.</span><br><span class="line"></span></span>      -<span class="ruby"><span class="regexp"> https:/</span><span class="regexp">/prometheus.io   # Target to probe with https.</span><br><span class="line"></span></span>      -<span class="ruby"><span class="regexp"> http:/</span><span class="regexp">/example.com:8080 # Target to probe with http on port 8080.</span><br><span class="line"></span></span>  relabel_configs:</span><br><span class="line">    -<span class="ruby"><span class="regexp"> source_labels: [__address__]</span><br><span class="line"></span></span>      target_label: __param_target</span><br><span class="line">    -<span class="ruby"><span class="regexp"> source_labels: [__param_target]</span><br><span class="line"></span></span>      target_label: instance</span><br><span class="line">    -<span class="ruby"><span class="regexp"> target_label: __address__</span><br><span class="line"></span></span>      replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port</span><br></pre></td></tr></table></figure></p><p>dns监控<br><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">"kubernetes-service-dns"</span></span><br><span class="line"></span>  metrics_path: /probe # 不是 metrics，是 probe</span><br><span class="line">  params:</span><br><span class="line">    module: [dns] # DNS 模块</span><br><span class="line">  static_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>    -<span class="ruby"> kube-<span class="symbol">dns:</span><span class="number">53</span> <span class="comment"># 不要省略端口号</span></span><br><span class="line"></span>  relabel_configs:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__address_<span class="number">_</span>]</span><br><span class="line"></span>    target_label: __param_target</span><br><span class="line">  -<span class="ruby"> <span class="symbol">source_labels:</span> [__param_target]</span><br><span class="line"></span>    target_label: instance</span><br><span class="line">  -<span class="ruby"> <span class="symbol">target_label:</span> __address_<span class="number">_</span></span><br><span class="line"></span>    replacement: blackbox # 服务地址，和上面的 Service 定义保持一致</span><br></pre></td></tr></table></figure></p><p>/-/reload(curl -XPOST ip:prom端口/-/reload）使配置生效<br>可以使用 probe_success{job=”kubernetes-service-dns”} 查看结果<br>如果HTTP服务启用了安全认证，Blockbox Exporter内置了对basic_auth的支持，可以直接设置相关的认证信息即可：<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http_basic_auth_example</span>:</span><br><span class="line">    <span class="attribute">prober</span>: http</span><br><span class="line">    <span class="attribute">timeout</span>: <span class="number">5s</span></span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">method</span>: POST</span><br><span class="line">      <span class="attribute">headers</span>:</span><br><span class="line">        <span class="attribute">Host</span>: <span class="string">"login.example.com"</span></span><br><span class="line">      <span class="attribute">basic_auth</span>:</span><br><span class="line">        <span class="attribute">username</span>: <span class="string">"username"</span></span><br><span class="line">        <span class="attribute">password</span>: <span class="string">"mysecret"</span></span><br></pre></td></tr></table></figure></p><p>对于使用了Bear Token的服务也可以通过bearer_token配置项直接指定令牌字符串，或者通过bearer_token_file指定令牌文件。</p><p>对于一些启用了HTTPS的服务，但是需要自定义证书的服务，可以通过tls_config指定相关的证书信息：<br><figure class="hljs highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http_custom_ca_example:</span><br><span class="line">   prober: http</span><br><span class="line">   http:</span><br><span class="line">     <span class="keyword">method</span>: <span class="type">GET</span></span><br><span class="line">     tls_config:</span><br><span class="line">       ca_file: <span class="string">"/certs/my_cert.crt"</span></span><br></pre></td></tr></table></figure></p><p>自带 metrics 端点的服务<br>有的服务，例如 prometheus 或者 blackbox，以及 kube-dns、etcd 等， 都是自有 /metrics 提供指标输出的，这种服务对 Blackbox + Prometheus 组合是非常方便的。<br>只要给服务的注解部分加入几个标签：<br>kubernetes-pods<br>对于pod的监测也是需要加注解：<br><figure class="hljs highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">prometheus.io/host</span>: <span class="string">calico-etcd # 服务名称</span></span><br><span class="line"><span class="attribute">prometheus.io/port</span>: <span class="string">"6666" # metrics 端口</span></span><br><span class="line"><span class="attribute">prometheus.io/scrape</span>: <span class="string">"true" # 抓取开关</span></span><br><span class="line"><span class="attribute">prometheus.io/path</span>: <span class="string">"/metrics"默认为/metric</span></span><br></pre></td></tr></table></figure></p><h1 id="u5B8C_u6574_u7684kubernetes_u90E8_u7F72_u6587_u4EF6"><a href="#u5B8C_u6574_u7684kubernetes_u90E8_u7F72_u6587_u4EF6" class="headerlink" title="完整的kubernetes部署文件"></a>完整的kubernetes部署文件</h1><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">blackbox-exporter-deploy.yaml </span><br><span class="line"><span class="string">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="string">kind:</span> Deployment</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  namespace:</span> monitoring</span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  selector:</span></span><br><span class="line"><span class="label">    matchLabels:</span></span><br><span class="line"><span class="label">      app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="label">  template:</span></span><br><span class="line"><span class="label">    metadata:</span></span><br><span class="line"><span class="label">      labels:</span></span><br><span class="line"><span class="label">        app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">    spec:</span></span><br><span class="line"><span class="label">      restartPolicy:</span> Always</span><br><span class="line"><span class="label">      containers:</span></span><br><span class="line">      - <span class="string">name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">        image:</span> prom/blackbox-<span class="string">exporter:</span>v0<span class="number">.12</span><span class="number">.0</span></span><br><span class="line"><span class="label">        imagePullPolicy:</span> IfNotPresent</span><br><span class="line"><span class="label">        ports:</span></span><br><span class="line">        - <span class="string">name:</span> blackbox-port</span><br><span class="line"><span class="label">          containerPort:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">        readinessProbe:</span></span><br><span class="line"><span class="label">          tcpSocket:</span></span><br><span class="line"><span class="label">            port:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">          initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="label">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="label">        resources:</span></span><br><span class="line"><span class="label">          requests:</span></span><br><span class="line"><span class="label">            memory:</span> <span class="number">50</span>Mi</span><br><span class="line"><span class="label">            cpu:</span> <span class="number">100</span>m</span><br><span class="line"><span class="label">          limits:</span></span><br><span class="line"><span class="label">            memory:</span> <span class="number">60</span>Mi</span><br><span class="line"><span class="label">            cpu:</span> <span class="number">200</span>m</span><br><span class="line"><span class="label">        volumeMounts:</span></span><br><span class="line">        - <span class="string">name:</span> config</span><br><span class="line"><span class="label">          mountPath:</span> <span class="regexp">/etc/</span>blackbox_exporter</span><br><span class="line"><span class="label">        args:</span></span><br><span class="line">        - --config.file=<span class="regexp">/etc/</span>blackbox_exporter/blackbox.yml</span><br><span class="line">        - --log.level=debug</span><br><span class="line">        - --web.listen-address=:<span class="number">9115</span></span><br><span class="line"><span class="label">      volumes:</span></span><br><span class="line">      - <span class="string">name:</span> config</span><br><span class="line"><span class="label">        configMap:</span></span><br><span class="line"><span class="label">          name:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">      nodeSelector:</span></span><br><span class="line"><span class="label">        prometheus:</span> <span class="string">"core"</span></span><br><span class="line"><span class="label">      tolerations:</span></span><br><span class="line">      - <span class="string">key:</span> <span class="string">"node-role.kubernetes.io/master"</span></span><br><span class="line"><span class="label">        effect:</span> <span class="string">"NoSchedule"</span></span><br><span class="line">---</span><br><span class="line"><span class="string">apiVersion:</span> v1</span><br><span class="line"><span class="string">kind:</span> Service</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  labels:</span></span><br><span class="line"><span class="label">    app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  name:</span> blackbox-exporter</span><br><span class="line"><span class="label">  namespace:</span> monitoring</span><br><span class="line"><span class="label">  annotations:</span></span><br><span class="line">    prometheus.io/<span class="string">scrape:</span> <span class="string">'true'</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="label">  type:</span> NodePort</span><br><span class="line"><span class="label">  selector:</span></span><br><span class="line"><span class="label">    app:</span> prometheus-blackbox-exporter</span><br><span class="line"><span class="label">  ports:</span></span><br><span class="line">  - <span class="string">name:</span> blackbox</span><br><span class="line"><span class="label">    port:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">    targetPort:</span> <span class="number">9115</span></span><br><span class="line"><span class="label">    protocol:</span> TCP</span><br></pre></td></tr></table></figure><h1 id="prometheus_u7684_u914D_u7F6E_u6587_u4EF6"><a href="#prometheus_u7684_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="prometheus的配置文件"></a>prometheus的配置文件</h1><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> <span class="symbol">job_name:</span> <span class="string">'blackbox'</span></span><br><span class="line"></span>   metrics_path: /probe</span><br><span class="line">   params:</span><br><span class="line">     module: [http_2xx]  # Look for a HTTP 200 response.</span><br><span class="line">   static_configs:</span><br><span class="line">     -<span class="ruby"> <span class="symbol">targets:</span></span><br><span class="line"></span>       -<span class="ruby"> <span class="symbol">http:</span>/<span class="regexp">/prometheus.io    # Target to probe with http.</span><br><span class="line"></span></span>       -<span class="ruby"><span class="regexp"> https:/</span><span class="regexp">/prometheus.io   # Target to probe with https.</span><br><span class="line"></span></span>       -<span class="ruby"><span class="regexp"> http:/</span><span class="regexp">/example.com:8080 # Target to probe with http on port 8080.</span><br><span class="line"></span></span>   relabel_configs:</span><br><span class="line">     -<span class="ruby"><span class="regexp"> source_labels: [__address__]</span><br><span class="line"></span></span>       target_label: __param_target</span><br><span class="line">     -<span class="ruby"><span class="regexp"> source_labels: [__param_target]</span><br><span class="line"></span></span>       target_label: instance</span><br><span class="line">     -<span class="ruby"><span class="regexp"> target_label: __address__</span><br><span class="line"></span></span>       replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port</span><br></pre></td></tr></table></figure><p><img src="/img/20181028013940.png" alt="monitoring"></p><h1 id="prometheus_u7684_u914D_u7F6E_u6587_u4EF6alermanager_u62A5_u8B66_u89C4_u5219"><a href="#prometheus_u7684_u914D_u7F6E_u6587_u4EF6alermanager_u62A5_u8B66_u89C4_u5219" class="headerlink" title="prometheus的配置文件alermanager报警规则"></a>prometheus的配置文件alermanager报警规则</h1><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: sitealer</span><br><span class="line">  rules:</span><br><span class="line">  - alert: 网站异常</span><br><span class="line">    expr: up&#123;job=<span class="string">"blackbox"</span>&#125; == <span class="number">0</span>  or  probe_success&#123;job=<span class="string">"blackbox"</span>&#125; == <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span>: <span class="number">10</span>s</span><br><span class="line">    labels:</span><br><span class="line">      severity: critica</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">"网站 &#123;&#123; $labels.target &#125;&#125; 访问异常"</span></span><br></pre></td></tr></table></figure><p><img src="/img/20181028012307.png" alt="monitoring"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/20181028004809.png&quot; alt=&quot;monitoring&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用Prometheus的blackbox_exporter进行网络监控&lt;br&gt;&lt;img src=&quot;http://showdoc.zhph.lan/Pub
      
    
    </summary>
    
      <category term="prometheus" scheme="http://www.idcsec.com/categories/prometheus/"/>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/prometheus/kubernetes/"/>
    
    
      <category term="blackbox-exporter" scheme="http://www.idcsec.com/tags/blackbox-exporter/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>使用Prometheus监控Oracle系统展示到Grafana</title>
    <link href="http://www.idcsec.com/2018/10/27/%E4%BD%BF%E7%94%A8Prometheus%E7%9B%91%E6%8E%A7Oracle%E7%B3%BB%E7%BB%9F%E5%B1%95%E7%A4%BA%E5%88%B0Grafana/"/>
    <id>http://www.idcsec.com/2018/10/27/使用Prometheus监控Oracle系统展示到Grafana/</id>
    <published>2018-10-27T13:58:00.000Z</published>
    <updated>2018-10-30T07:54:13.828Z</updated>
    
    <content type="html"><![CDATA[<p>oracledb_exporter参考：<br><a href="https://github.com/iamseth/oracledb_exporter" target="_blank" rel="external">https://github.com/iamseth/oracledb_exporter</a><br>本文直接把oracledb_exporter部署在k8s环境。docker部署方式更为简单<br>我们使用Prometheus在Grafana上为Oracle实现监控仪表板。由于Oracle不支持http通信，它由Oracle Exporter获取指标，它将Oracle的内容发送到Prometheus，并将Prometheus内容输出到Grafana。<br><img src="/img/oracle1.jpg" alt="crt"><br>Oracle DB→Oracle Exporter→Prometheus→Grafana</p><p>Oracle Exporter需要将Oracle与Prometheus连接。Oracle Exporter将有关Oracle的信息传递给Prometheus。<br>创建yaml对象</p><h1 id="u90E8_u7F72oracle-export"><a href="#u90E8_u7F72oracle-export" class="headerlink" title="部署oracle-export"></a>部署oracle-export</h1><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl create -f - </span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  name: oracle-<span class="keyword">export</span>-dm</span><br><span class="line">  <span class="keyword">namespace</span>: monitoring</span><br><span class="line">spec:</span><br><span class="line">  replicas: <span class="number">1</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  <span class="keyword">template</span>:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image:  wtingdocker/oracledb_exporter:latest</span><br><span class="line">        name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">        command:</span><br><span class="line">        - <span class="string">"/oracledb_exporter"</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: <span class="number">9161</span></span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: DATA_SOURCE_NAME</span><br><span class="line">          value: <span class="string">"system/oracle@ip:1521/sid"</span>  <span class="preprocessor">#改成自己的数据库信息 定义DATA_SOURCE_NAME变量</span></span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  name: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">  <span class="keyword">namespace</span>: monitoring</span><br><span class="line">spec:</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: <span class="number">9161</span></span><br><span class="line">    targetPort: <span class="number">9161</span></span><br><span class="line">  selector:</span><br><span class="line">    app: oracle-<span class="keyword">export</span>-<span class="number">198</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h1 id="u4FEE_u6539prometheus-yml_u6587_u4EF6"><a href="#u4FEE_u6539prometheus-yml_u6587_u4EF6" class="headerlink" title="修改prometheus.yml文件"></a>修改prometheus.yml文件</h1><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scrape_configs</span>:</span><br><span class="line">  - <span class="attribute">job_name</span>: <span class="string">'oracle-endpoint'</span></span><br><span class="line">    <span class="attribute">static_configs</span>:</span><br><span class="line">    - <span class="attribute">targets</span>:</span><br><span class="line">      - <span class="attribute">oracle-export-X-X</span>:<span class="number">9161</span></span><br><span class="line">      <span class="attribute">labels</span>:</span><br><span class="line">        <span class="attribute">target</span>: <span class="string">'192.168.1.X'</span></span><br><span class="line">        <span class="attribute">descr</span>: <span class="string">'XX数据库'</span></span><br></pre></td></tr></table></figure><p>重新加载prometheus配置文件<br><figure class="hljs highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl  apply <span class="operator">-f</span> configmap.yaml</span><br></pre></td></tr></table></figure></p><p>重新启动prometheus容器以使修改后的内容生效<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST <span class="string">http:</span><span class="comment">//192.168.7.X:30680/-/reload</span></span><br></pre></td></tr></table></figure></p><h1 id="Grafana_u5C55_u793A"><a href="#Grafana_u5C55_u793A" class="headerlink" title="Grafana展示"></a>Grafana展示</h1><p>访问oracle-export端口验证Oracle和Prometheus连接<br><img src="/img/20181027225036.png" alt="oracle1"><br><img src="/img/20181027225445.png" alt="oracle1"><br>Grafana添加Prometheus数据库源<br><img src="/img/0181027230136.png" alt="oracle2"></p><p>仪表板导入3333可以根据自己的需要添加export提供的metrics 展示以及通过alertmanager告警<br><img src="/img/20181027230648.png" alt="oracle2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;oracledb_exporter参考：&lt;br&gt;&lt;a href=&quot;https://github.com/iamseth/oracledb_exporter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/iamseth/
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="http://www.idcsec.com/tags/kubernetes/"/>
    
      <category term="prometheus" scheme="http://www.idcsec.com/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes ingress配置HTTPS/TLS证书</title>
    <link href="http://www.idcsec.com/2018/09/29/kubernetes-ingress%E9%85%8D%E7%BD%AEHTTPS-TLS%E8%AF%81%E4%B9%A6/"/>
    <id>http://www.idcsec.com/2018/09/29/kubernetes-ingress配置HTTPS-TLS证书/</id>
    <published>2018-09-29T15:14:00.000Z</published>
    <updated>2018-09-29T15:15:31.953Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/" target="_blank" rel="external">Ingress是Kubernetes中的一个概念，用于</a>将入站连接路由到不同的服务。这可以通过不同方式实现。<br>生成证书文件<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days <span class="number">2920</span> -newkey rsa:<span class="number">2048</span> -keyout tls<span class="class">.key</span> -out tls<span class="class">.crt</span> -subj <span class="string">"/CN=*.idcsec.com/O=nginxsvc"</span></span><br></pre></td></tr></table></figure></p><p>导入证书文件到k8s secret<br><figure class="hljs highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl <span class="built_in">create</span> secret tls <span class="keyword">https</span>-secret <span class="comment">--key tls.key --cert tls.crt</span></span><br></pre></td></tr></table></figure></p><p>或者使用yaml<br><figure class="hljs highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">apiVersion:</span> v1</span><br><span class="line"><span class="string">kind:</span> Secret</span><br><span class="line"><span class="string">type:</span> kubernetes.io/tls</span><br><span class="line"><span class="string">metadata:</span></span><br><span class="line"><span class="label">  name:</span> mytlssecret</span><br><span class="line"><span class="string">data:</span></span><br><span class="line">  tls.<span class="string">crt:</span> &lt;base64 encoded cert&gt;</span><br><span class="line">  tls.<span class="string">key:</span> &lt;base64 encoded key&gt;</span><br></pre></td></tr></table></figure></p><p>配置ingress<br><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: Ingress</span><br><span class="line"><span class="attribute">apiVersion</span>: extensions/v1beta1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: test</span><br><span class="line">  <span class="attribute">annotations</span>:</span><br><span class="line">    ingress.kubernetes.io/<span class="attribute">ssl-redirect</span>: <span class="string">"False"</span>  #设置是否强制跳转 false| true</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">tls</span>:</span><br><span class="line">  - <span class="attribute">hosts</span>: </span><br><span class="line">    - www.idcsec.com</span><br><span class="line">    <span class="attribute">secretName</span>: https-secret</span><br><span class="line">  <span class="attribute">rules</span>:</span><br><span class="line">  - <span class="attribute">host</span>:  www.idcsec.com</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">paths</span>:</span><br><span class="line">      - <span class="attribute">path</span>: /</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: test</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br></pre></td></tr></table></figure></p><p>校验证书信息<br><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> tls<span class="class">.crt</span>  -noout -text</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/auth/client-certs" target="_blank" rel="external">Client Certificate Authentication</a><br><a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/examples/PREREQUISITES.md#creating-the-ca-authentication-secret" target="_blank" rel="external">TLS证书</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/ingress/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ingress是Kubernetes中的一个概念，用于&lt;/a&gt;
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="ingress-nginx" scheme="http://www.idcsec.com/tags/ingress-nginx/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes ingres-nginx高级配置</title>
    <link href="http://www.idcsec.com/2018/09/29/kubernetes-ingres-nginx%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.idcsec.com/2018/09/29/kubernetes-ingres-nginx高级配置/</id>
    <published>2018-09-29T15:03:00.000Z</published>
    <updated>2018-11-02T06:33:57.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF"><a href="#u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF" class="headerlink" title="通过configmap修改nginx controller的一些全局变量"></a>通过configmap修改nginx controller的一些全局变量</h2><p>通过启动nginx controller的yaml文件，其实我们可以看出来，在启动controller的时候，向启动命令传递了一大堆参数，包括–default-backend-service以及–apiserver-host等。更多的参数，可以直接参考<a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/multiple-ingress.md" target="_blank" rel="external">相关文档</a></p><p>nginx controller本质上就是一个nginx代理，这个代理使用了一大堆nginx默认参数启动。而在某些特定场景下，这些我们需要定制这些参数以更适用于我们的需求。在controller启动的时候，提供了一个–configmap的参数，我们可以将需要定制的参数保存到一个configmap中，并在controller启动的时候，来读取这个configmap，获取其值，应用到controller中。具体哪些值可以通过configmap来传递，可以直接参考<a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md" target="_blank" rel="external">相关文档</a><br><a href="https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md" target="_blank" rel="external">https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/configmap.md</a></p><h1 id="u4E00_u3001_u4F7F_u7528ConfigMap"><a href="#u4E00_u3001_u4F7F_u7528ConfigMap" class="headerlink" title="一、使用ConfigMap"></a>一、使用ConfigMap</h1><p>确保指定启动Ingress控制器时要使用的configmaps资源。<br>需要注意-</p><figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kind</span>: ConfigMap </span><br><span class="line"><span class="attribute">apiVersion</span>: v1</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: nginx-configuration</span><br><span class="line">  <span class="attribute">namespace</span>: ingress-nginx</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">app</span>: ingress-nginx</span><br><span class="line"><span class="attribute">data</span>:</span><br><span class="line">  <span class="attribute">client-header-buffer-size</span>: <span class="string">"4k"</span></span><br><span class="line">  <span class="attribute">proxy-connect-timeout</span>: <span class="string">"40"</span></span><br><span class="line">  <span class="attribute">proxy-read-timeout</span>: <span class="string">"110"</span></span><br><span class="line">  <span class="attribute">proxy-send-timeout</span>: <span class="string">"110"</span></span><br></pre></td></tr></table></figure><p>创建配置资源：<br><figure class="hljs highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> kubectl apply -f nginx-configuration.yaml</span><br><span class="line"> kubectl get cm nginx-configuration -<span class="keyword">n</span> ingress-nginx  -o yaml</span><br><span class="line">[root@k8s-<span class="keyword">m</span> ~]# kubectl  exec -it     nginx-ingress-controller-5f947cc79f-86cvc      -<span class="keyword">n</span> ingress-nginx -- <span class="keyword">cat</span> /etc/nginx/nginx.<span class="keyword">conf</span> | grep    client_header_buffer_size</span><br><span class="line">trueclient_header_buffer_size       4k;</span><br></pre></td></tr></table></figure></p><h3 id="u4FEE_u6539nginx-controller_u7684yml_u6587_u4EF6nginx-ingress-daemonset-yaml_u542F_u52A8_u53C2_u6570_u5982_u4E0B_uFF1A"><a href="#u4FEE_u6539nginx-controller_u7684yml_u6587_u4EF6nginx-ingress-daemonset-yaml_u542F_u52A8_u53C2_u6570_u5982_u4E0B_uFF1A" class="headerlink" title="修改nginx-controller的yml文件nginx-ingress-daemonset.yaml启动参数如下："></a>修改nginx-controller的yml文件nginx-ingress-daemonset.yaml启动参数如下：</h3><figure class="hljs highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  -<span class="ruby"> <span class="symbol">args:</span></span><br><span class="line"></span>    -<span class="ruby"> /nginx-ingress-controller</span><br><span class="line"></span>    -<span class="ruby"> --default-backend-service=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/default-http-backend</span><br><span class="line"></span>    -<span class="ruby"> --configmap=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/nginx-configuration /<span class="regexp">/例如</span><br><span class="line"></span></span>    -<span class="ruby"><span class="regexp"> --tcp-services-configmap=$(POD_NAMESPACE)/tcp</span>-services</span><br><span class="line"></span>    -<span class="ruby"> --udp-services-configmap=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/udp-services</span><br><span class="line"></span>    -<span class="ruby"> --publish-service=<span class="variable">$(</span><span class="constant">POD_NAMESPACE</span>)/ingress-nginx</span><br><span class="line"></span>    -<span class="ruby"> --annotations-prefix=nginx.ingress.kubernetes.io</span></span><br></pre></td></tr></table></figure><ul><li>如需要生效重启nginx-ingress-controller pod *<h1 id="u4E8C_u3001_u4F7F_u7528Annotations"><a href="#u4E8C_u3001_u4F7F_u7528Annotations" class="headerlink" title="二、使用Annotations"></a>二、使用Annotations</h1>如果只想自定义特定Ingress资源的配置，可以使用Annotations。<figure class="hljs highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: extensions/v1beta1</span><br><span class="line"><span class="attribute">kind</span>: Ingress</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: cafe-ingress-with-annotations</span><br><span class="line">  <span class="attribute">annotations</span>:</span><br><span class="line">    nginx.org/<span class="attribute">proxy-connect-timeout</span>: <span class="string">"30s"</span></span><br><span class="line">    nginx.org/<span class="attribute">proxy-read-timeout</span>: <span class="string">"20s"</span></span><br><span class="line">    nginx.org/<span class="attribute">client-max-body-size</span>: <span class="string">"4m"</span></span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">rules</span>:</span><br><span class="line">  - <span class="attribute">host</span>: cafe.example.com</span><br><span class="line">    <span class="attribute">http</span>:</span><br><span class="line">      <span class="attribute">paths</span>:</span><br><span class="line">      - <span class="attribute">path</span>: /tea</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: tea-svc</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br><span class="line">      - <span class="attribute">path</span>: /coffee</span><br><span class="line">        <span class="attribute">backend</span>:</span><br><span class="line">          <span class="attribute">serviceName</span>: coffee-svc</span><br><span class="line">          <span class="attribute">servicePort</span>: <span class="number">80</span></span><br></pre></td></tr></table></figure></li></ul><p>Annotations配置优先于ConfigMap<br><a href="https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization" target="_blank" rel="external">https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization</a><br><a href="https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization" target="_blank" rel="external">https://github.com/nginxinc/kubernetes-ingress/tree/master/examples/customization</a></p><h1 id="u9650_u901F"><a href="#u9650_u901F" class="headerlink" title="限速"></a>限速</h1><p>Annotations<code>ingress.kubernetes.io/limit-connections</code>和<code>ingress.kubernetes.io/limit-rps</code>定义可由单个客户端IP地址打开的连接的限制。这可用于缓解<a href="https://www.nginx.com/blog/mitigating-ddos-attacks-with-nginx-and-nginx-plus" target="_blank" rel="external">DDoS攻击</a>。</p><figure class="hljs highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/limit-connections：单个IP地址允许的并发连接数。</span><br><span class="line"></span><br><span class="line">nginx<span class="class">.ingress</span><span class="class">.kubernetes</span><span class="class">.io</span>/limit-rps：每秒可从给定IP接受的连接数。</span><br><span class="line"></span><br><span class="line">如果在单个Ingress规则中指定两个Annotations，`limit-rps`则优先。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;u901A_u8FC7configmap_u4FEE_u6539nginx_controller_u7684_u4E00_u4E9B_u5168_u5C40_u53D8_u91CF&quot;&gt;&lt;a href=&quot;#u901A_u8FC7configmap_u4FEE_u65
      
    
    </summary>
    
      <category term="kubernetes" scheme="http://www.idcsec.com/categories/kubernetes/"/>
    
    
      <category term="ingress-nginx" scheme="http://www.idcsec.com/tags/ingress-nginx/"/>
    
  </entry>
  
  <entry>
    <title>etcdv3 集群基本操作使用</title>
    <link href="http://www.idcsec.com/2018/09/21/etcdv3-%E9%9B%86%E7%BE%A4%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.idcsec.com/2018/09/21/etcdv3-集群基本操作使用/</id>
    <published>2018-09-21T15:40:27.000Z</published>
    <updated>2018-09-21T15:40:59.478Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/coreos/etcd" target="_blank" rel="external">etcd</a>是一个开源的分布式键值对数据库，他的每一个节点都有一份数据的copy，当有节点故障时保证了高可用性。etcd使用<a href="https://raft.github.io/" target="_blank" rel="external">Raft</a>算法来保证一致性。</p><p>etcd的apiv3在使用命令时需要在前面加上ETCDCTL_API=3<br>集群成员<br><figure class="hljs highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ETCDCTL_API=<span class="number">3</span> etcdctl member <span class="built_in">list</span></span><br></pre></td></tr></table></figure></p><p>更新一个节点ip<br><figure class="hljs highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">etcdctl <span class="keyword">member</span> list</span><br><span class="line">etcdctl <span class="keyword">member</span> update memberID http:<span class="comment">//ip:2380</span></span><br></pre></td></tr></table></figure></p><p>删除一个节点<br><figure class="hljs highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">etcdctl member <span class="keyword">list</span>  </span><br><span class="line">etcdctl member <span class="built_in">remove</span> memberID  </span><br><span class="line">etcdctl member <span class="keyword">list</span>  </span><br><span class="line"><span class="keyword">ps</span> -ef|<span class="keyword">grep</span> etcd //在相关节点上kill掉etcd进程</span><br></pre></td></tr></table></figure></p><p>测试增加一个新节点<br>注意：添加已经删除的需要将etcd3的rm -rf /var/lib/etcd/*必须删除<br>移除节点<br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  list -w table</span><br><span class="line">ETCDCTL_API=3  etcdctl --endpoints=https:/</span><span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  remove 7d17ab970f6de141</span></span><br></pre></td></tr></table></figure></p><p>添加节点<br><figure class="hljs highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member add  etcd3 --peer-urls="https:/</span><span class="regexp">/192.168.7.92:2380" /</span><span class="regexp">/查看新增成员列表，etcd3状态为unstarted</span><br><span class="line">rm -rf /var</span><span class="regexp">/lib/etcd</span><span class="regexp">/*  /</span><span class="regexp">/etcd3上面操作</span><br><span class="line">vi  /etc</span><span class="regexp">/systemd/system</span><span class="regexp">/etcd.service  /</span><span class="regexp">//etcd</span>3上面操作 修改--initial-cluster-state=existing 不改报错 streaming request ignored (<span class="constant">ID</span> mismatch got <span class="number">7</span>d17ab970f6de141 want <span class="number">58662</span>caff7c6e081)</span><br><span class="line">systemctl daemon-reload &amp;&amp; systemctl  restart   etcd  /<span class="regexp">//etcd</span>3上面操作</span><br><span class="line"><span class="constant">ETCDCTL_API</span>=<span class="number">3</span>  etcdctl --endpoints=<span class="symbol">https:</span>/<span class="regexp">/192.168.7.93:2379,https:/</span><span class="regexp">/192.168.7.94:2379，https:/</span><span class="regexp">/192.168.7.92:2379   --cacert=/etc</span><span class="regexp">/kubernetes/ssl</span><span class="regexp">/ca.pem   --cert=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd.pem   --key=/etc</span><span class="regexp">/etcd/ssl</span><span class="regexp">/etcd-key.pem  member  list -w table</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/coreos/etcd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;etcd&lt;/a&gt;是一个开源的分布式键值对数据库，他的每一个节点都有一份数据的copy，当有节点故障时保证了高可用性。etcd使用&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
